{"version":3,"sources":["utils/index.js","components/Loader.js","components/SeeCartItems.js","components/SearchResult.js","components/App.js","components/Navbar.js","components/ToastMessage.js","components/Signin.js","components/Signup.js","components/Checkout.js","utils/API.js","components/ItemModalDetails.js","components/SeeDeptItems.js","components/Items.js","components/Automotive.js","registerServiceWorker.js","index.js"],"names":["CART_KEY","TOKEN_KEY","calculatePrice","iitems","reduce","acc","iitem","quantity","price","toFixed","calculateAmount","Number","calculateTotalItems","setCart","value","cartKey","localStorage","setItem","JSON","stringify","getCart","getItem","parse","clearCart","removeItem","getToken","tokenKey","setToken","clearToken","Loader","show","position","dangerouslySetInlineStyle","__style","bottom","left","transform","color","size","margin","hStyle","fontSize","fontFamily","fontWeight","textAlign","SeeCartItems","state","cartItems","addToCart","item","alreadyInCart","findIndex","_id","updatedItems","concat","setState","countItemToDelete","itemToDeleteId","alreadyInCartToDel","allItems","console","log","deleteItemsFromCart","filteredItems","filter","this","Fragment","display","direction","marginLeft","span","className","Link","to","alignSelf","marginTop","marginRight","padding","style","alignItems","justifyContent","length","column","paddingX","map","paddingLeft","paddingRight","height","width","fit","alt","naturalHeight","naturalWidth","src","thumbnail","marginBottom","bold","name","onClick","align","text","React","Component","apiURL","process","API_URL","strapi","Strapi","SearchResult","searchedResult","searchTermName","searchedResults","items","displayingCart","displayingCartItems","searchedItem","searchDepartments","a","request","data","query","toLowerCase","response","props","searchTerm","shortText","maxLength","substr","shortTextDescp","backgroundColor","shape","wrap","paddingY","image","description","DeptMenu","marginRightt","App","departments","department","departmentId","searchedItems","loadingDepartments","redirect","searchTermState","renderRedirect","Redirect","handleChange","id","accessibilityLabel","onChange","placeholder","icon","url","Navbar","handleSignout","history","push","AuthNav","borderRadius","NavLink","activeClassName","exact","inline","UnAuthNav","title","withRouter","ToastMessage","message","Signin","username","password","toast","toastMessage","loading","event","persist","target","handleSubmit","preventDefault","isFormEmpty","showToast","login","jwt","redirectUser","path","setTimeout","maxWidth","onSubmit","type","margiginTop","disabled","Signup","email","register","italic","_CheckoutForm","address","postalCode","city","confirmationEmailAddress","orderProcessing","modal","handleConfirmOrder","handleSubmitOrder","amount","stripe","createToken","token","createEntry","subject","Date","now","html","closeModal","onReady","input","focus","ConfirmationModal","accessibilityCloseLabel","accessibilityModalLabel","heading","onDismiss","footer","role","CheckoutForm","injectStripe","Checkout","apiKey","BASEURL","REACT_APP_BASEURL","APIKEY","REACT_APP_APIKEY","booksearch","axios","get","ItemModalDetails","useState","showModal","setShowModal","itemDetails","itemDetail","booksArray","itemsBooksArray","bookPrice","bookThumbnail","ShuffledDatas","shuffleData","detailsDisplay","defaultBooks","SeeDeptItems","search","books","loadingItems","bookDeptId","bookToSearch","Math","floor","random","searchForBooks","API","then","res","error","displayBooks","catch","err","i","bookId","String","etag","bookName","volumeInfo","bookDescription","bookAuthor","authors","bookPublishDate","publishedDate","imageLinks","saleInfo","saleability","retailPrice","shuffle","itemsArray","itemsShuffled","splice","handleDetailsSubmit","find","itemDetailed","itemDeptId","flexWrap","Items","itemsSearched","cartItemsLength","changeDeptIdState","match","params","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","PrivateRoute","component","rest","Route","render","pathname","from","Root","Switch","Automotive","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a79dc5fc.chunk.js","sourcesContent":["const CART_KEY = 'cart';\r\nconst TOKEN_KEY = 'jwt';\r\n\r\nexport const calculatePrice = iitems => {\r\n    return `$${iitems\r\n      .reduce((acc, iitem) => acc + iitem.quantity * iitem.price, 0)\r\n      .toFixed(2)}`;\r\n};\r\n\r\nexport const calculateAmount = iitems => {\r\n  return Number(iitems\r\n      .reduce((acc, iitem) => acc + iitem.quantity * iitem.price, 0)\r\n      .toFixed(2));\r\n  \r\n};\r\n\r\nexport const calculateTotalItems = iitems => {  \r\n  return Number(iitems\r\n    .reduce((acc, iitem) => acc + iitem.quantity, 0));\r\n};\r\n\r\n\r\n/* Cart */\r\nexport const setCart = (value, cartKey = CART_KEY) => {\r\n    if (localStorage) {\r\n        localStorage.setItem(cartKey, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const getCart = (cartKey = CART_KEY) => {\r\n    if (localStorage && localStorage.getItem(cartKey)) {\r\n        return JSON.parse(localStorage.getItem(cartKey));\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const clearCart = (cartKey = CART_KEY) => {\r\n    if (localStorage) {\r\n      localStorage.removeItem(cartKey);\r\n    }\r\n  };\r\n\r\n/* Auth */\r\nexport const getToken = (tokenKey = TOKEN_KEY) => {\r\n    if (localStorage && localStorage.getItem(tokenKey)) {\r\n      return JSON.parse(localStorage.getItem(tokenKey));\r\n    }\r\n    return null;\r\n  };\r\n\r\nexport const setToken = (value, tokenKey = TOKEN_KEY) => {\r\n    if (localStorage) {\r\n        localStorage.setItem(tokenKey, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const clearToken = (tokenKey = TOKEN_KEY) => {\r\n    if (localStorage) {\r\n      localStorage.removeItem(tokenKey);\r\n    }\r\n  };\r\n","import React from 'react';\r\nimport { GridLoader } from 'react-spinners'\r\nimport {Box} from 'gestalt';\r\n\r\nconst Loader = ({ show }) =>\r\n  show && (\r\n    <Box\r\n      position=\"fixed\"\r\n      dangerouslySetInlineStyle={{\r\n        __style: {\r\n          bottom: 300,\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\"\r\n        }\r\n      }}\r\n    >\r\n      <GridLoader color=\"darkorange\" size={25} margin=\"3px\" />\r\n    </Box>\r\n  );\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Items.css';\r\nimport { Box, Text, Image, Button, Column } from 'gestalt'\r\nimport {calculateTotalItems, calculatePrice, setCart, getCart} from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport './Items.css';\r\n\r\n\r\nconst hStyle = {\r\n    fontSize: '24px',\r\n    fontFamily: 'calibri light',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n};\r\n\r\n\r\nclass SeeCartItems extends React.Component {\r\n    state = {       \r\n        cartItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ cartItems: getCart() })        \r\n    }    \r\n    \r\n    addToCart = item => {        \r\n      const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n        if (alreadyInCart === -1) {\r\n            const updatedItems = this.state.cartItems.concat({\r\n            ...item,\r\n            quantity: 1\r\n            });\r\n            this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n        } else {\r\n            const updatedItems = [...this.state.cartItems];\r\n            updatedItems[alreadyInCart].quantity += 1;\r\n            this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    countItemToDelete = itemToDeleteId => {\r\n        const alreadyInCartToDel = this.state.cartItems.findIndex(allItems => allItems._id === itemToDeleteId);\r\n       \r\n        if (alreadyInCartToDel !== 1) {\r\n            console.log(\"THIS IS ALREADY IN CART\", alreadyInCartToDel);\r\n            this.deleteItemsFromCart(itemToDeleteId);\r\n            // const updatedItems = this.state.cartItems.concat({\r\n            // ...item,\r\n            // quantity: 1\r\n            // });\r\n            // this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n        } else {\r\n            console.log( this.state.cartItems );\r\n            this.deleteItemsFromCart(itemToDeleteId);\r\n            // const updatedItems = [...this.state.cartItems];\r\n            // updatedItems[alreadyInCart].quantity += 1;\r\n            // this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n        }\r\n    }\r\n\r\n    deleteItemsFromCart = itemToDeleteId => {       \r\n        const filteredItems = this.state.cartItems.filter(\r\n            iitem => iitem._id !== itemToDeleteId\r\n        );\r\n        console.log(\"THIS IS ITEM TO DELETE\", itemToDeleteId)\r\n        // if (itemToDeleteId )\r\n        this.setState({ cartItems: filteredItems }, () => setCart(filteredItems));\r\n    };\r\n\r\n    render() {\r\n        const { cartItems } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n            <Column span={2}>\r\n              <Box>\r\n                <Text color=\"white\"></Text>\r\n              </Box>\r\n            </Column>\r\n                       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n                  <div >\r\n                      <p>Automotive</p>\r\n                  </div>\r\n              </Link>\r\n            </div>       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n                  <div >                        \r\n                      <p>Books</p> \r\n                  </div>                     \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n                  <div>                      \r\n                      <p>Electronics</p>\r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n                  <div >                     \r\n                      <p>Fashion</p>\r\n                  </div>                        \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n                  <div >                        \r\n                      <p>Home</p>                      \r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n                  <div>                     \r\n                      <p>Sports Outdoor</p>{\" \"}\r\n                  </div>                        \r\n              </Link>\r\n            </div>           \r\n            <div className=\"lineitems\">              \r\n                <p>{\" \"}{calculateTotalItems(cartItems)}{\" \"}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n            </div> \r\n          </Box>\r\n                    \r\n                <Box alignSelf=\"end\" marginTop={292} marginLeft={8} marginRight={8} padding={4}>\r\n                    <Box margin={2}>\r\n                        <div style={hStyle}>\r\n                            Shopping Cart\r\n                        </div>\r\n                    </Box>\r\n                </Box> \r\n                \r\n                {/* Cart Items*/}\r\n                <div className=\"card\">\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\r\n                        <Box margin={2}>\r\n                            {cartItems.length === 0 && (\r\n                            <Text color=\"red\">Please select some items</Text>\r\n                            )}\r\n                        </Box>                                   \r\n                    </Box>\r\n                    <Box display=\"flex\" direction=\"row\" column={6} paddingX={2}>\r\n                        <Box>\r\n                            {cartItems.map(iitem => (                            \r\n                                <div className=\"card-item\">\r\n                                    <Box key={iitem._id} display=\"flex\" direction=\"row\" marginTop={2} marginLeft={3} paddingLeft={2} paddingRight={2}>\r\n                                        {/* <Card width={300}>                           */}\r\n                                        <Box display=\"flex\" direction=\"row\">\r\n                                            <Box  height={120} width={80}>\r\n                                                <Image\r\n                                                    fit=\"cover\"\r\n                                                    alt=\"item\"\r\n                                                    naturalHeight={1}\r\n                                                    naturalWidth={1}\r\n                                                    src={iitem.thumbnail}                                  \r\n                                                />\r\n                                            </Box>\r\n                                        </Box>\r\n                                        <Box padding={2}>\r\n                                            <Box display=\"flex\" direction=\"row\" marginBottom={5}>\r\n                                                <Text bold size=\"sl\" color=\"blue\">\r\n                                                    {iitem.name}                                                     \r\n                                                </Text>\r\n                                            </Box>\r\n                                            {/* <Box display=\"flex\" direction=\"row\">\r\n                                                <Text size=\"sm\" color=\"white\">\r\n                                                    Items                                                  \r\n                                                </Text>\r\n                                            </Box> */}\r\n                                            <Box display=\"flex\" direction=\"row\">\r\n                                                <Text color=\"orchid\" size=\"sm\">\r\n                                                    Unit Price: ${iitem.price}\r\n                                                </Text>                                               \r\n                                            </Box>\r\n                                            <Box display=\"flex\" direction=\"row\">\r\n                                                <Text color=\"green\" size=\"sm\">\r\n                                                    Qty: {iitem.quantity}\r\n                                                </Text>                                                                                                                             \r\n                                            </Box>\r\n                                            <Text color=\"green\" size=\"sm\">\r\n                                                Price: ${(iitem.quantity * iitem.price).toFixed(2)}\r\n                                            </Text>\r\n                                            <Box  display=\"flex\" direction=\"row\">\r\n                                                <div className=\"delete-button\">                                                \r\n                                                    <button onClick={() => this.countItemToDelete(iitem._id)}>Delete</button>                                  \r\n                                                </div> \r\n                                                <div className=\"save-for-later\">                                                \r\n                                                    <p>Save for later</p>                                  \r\n                                                </div>\r\n                                                <div className=\"save-for-later\">                                                \r\n                                                    <p>Compare with similar item</p>                                  \r\n                                                </div>                                                              \r\n                                            </Box>  \r\n                                        </Box>\r\n                                    </Box>\r\n                                </div>\r\n                            ))}\r\n                        </Box>\r\n                        <Box column={4} marginLeft={10} marginTop={10} width={150}>\r\n                        <div className=\"carttotal\">                            \r\n                                <Box align=\"center\" display=\"flex\" direction=\"column\" width={550}>\r\n                                    <div className=\"carttotal\"> \r\n                                        <Text bold color=\"black\" size=\"sm\">                                        \r\n                                            Subtotal ({calculateTotalItems(cartItems)} items ){\": \"}\r\n                                        </Text>\r\n                                        <Text align=\"center\" bold size=\"md\" color=\"red\">\r\n                                            {calculatePrice(cartItems)}\r\n                                            \r\n                                        </Text>\r\n                                    </div>                                \r\n                                    <Box width={250}> \r\n                                        <Text >\r\n                                            <Link to=\"/checkout\"><Button padding={2} size=\"md\" width={550} color=\"blue\" text=\"Checkout\"></Button>\r\n                                            </Link>\r\n                                        </Text>\r\n                                    </Box>                                       \r\n                                </Box>                          \r\n                            </div>\r\n                        </Box>                                             \r\n                    </Box>\r\n                </div>               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeeCartItems;","import React, { Component } from 'react';\r\n//prettier ignore\r\nimport { Box, Card, Image, Text, Button, Column } from 'gestalt';\r\nimport { setCart, getCart } from '../utils';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SeeCartItems from './SeeCartItems';\r\n\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\n\r\n\r\n\r\nclass SearchResult extends Component {\r\n  state = {\r\n    searchedResult: [],\r\n    searchTermName: '',\r\n    searchedResults: [],    \r\n    // loadingItems: true,\r\n    items: [],  \r\n    displayingCart: false,\r\n    cartItems: []\r\n  \r\n  };\r\n \r\n  componentDidMount() {     \r\n    this.setState({searchTermName: this.props.searchTerm})\r\n    console.log(\"THIS IS SEARCHED ITEMS NAME\",  this.state.searchTermName);   \r\n    this.searchDepartments();\r\n   \r\n  }\r\n\r\n  displayingCartItems = () => {    \r\n    this.setState({displayingCart: true})      \r\n  };\r\n\r\n  addToCart = searchedItem => {\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === searchedItem._id);\r\n    if (alreadyInCart === -1) {\r\n      const updatedItems = this.state.cartItems.concat({\r\n        ...searchedItem,\r\n        quantity: 1\r\n      });\r\n      this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n    } else {\r\n      const updatedItems = [...this.state.cartItems];\r\n      updatedItems[alreadyInCart].quantity += 1;\r\n      this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n\r\n    }\r\n\r\n  };\r\n\r\n  searchDepartments = async () => {   \r\n    // console.log(this.state.searchTerm)\r\n    const response = await strapi.request('POST', '/graphql', {\r\n      data: {\r\n        query: `query {\r\n         items(where: {\r\n            name_contains: \"${this.state.searchTermName.toLowerCase()}\"\r\n          }) {\r\n            _id\r\n            name\r\n            description\r\n            thumbnail                       \r\n            price\r\n            department {\r\n              _id\r\n              name\r\n            }\r\n          }\r\n        }`\r\n      }\r\n    });      \r\n    this.setState({\r\n      searchedResults: response.data.items,\r\n      cartItems: getCart()});\r\n    console.log(this.state.searchedResults);    \r\n  }; \r\n\r\n  render() {\r\n    const { searchedResults, cartItems, displayingCart } = this.state;\r\n    \r\n\r\n    const shortText = (text, maxLength = 50) => {\r\n      if (!text) { return ' '}\r\n      if (text.length <= maxLength) { return text }\r\n    \r\n      return text.substr(0, maxLength) + '...'\r\n    } \r\n    const shortTextDescp = (text, maxLength = 90) => {\r\n      if (!text) { return ' '}\r\n      if (text.length <= maxLength) { return text }\r\n    \r\n      return text.substr(0, maxLength) + '...'\r\n    } \r\n        \r\n\r\n    return (\r\n      <>\r\n        { displayingCart === false ? <DeptMenu cartItems={cartItems} displayingCartItems={this.displayingCartItems}/> : []}\r\n         {/* <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n            <Column span={2}>\r\n              <Box>\r\n                <Text color=\"white\"></Text>\r\n              </Box>\r\n            </Column>\r\n                       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n                  <div >\r\n                      <p>Automotive</p>\r\n                  </div>\r\n              </Link>\r\n            </div>       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n                  <div >                        \r\n                      <p>Books</p> \r\n                  </div>                     \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n                  <div>                      \r\n                      <p>Electronics</p>\r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n                  <div >                     \r\n                      <p>Fashion</p>\r\n                  </div>                        \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n                  <div >                        \r\n                      <p>Home</p>                      \r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n                  <div>                     \r\n                      <p>Sports Outdoor</p>{\" \"}\r\n                  </div>                        \r\n              </Link>\r\n            </div>           \r\n            <div className=\"lineitems\">\r\n              <Box marginLeft={1} marginRightt={-1} marginTop={3} paddingLeft={0} paddingRight={0}> */}\r\n                {/* User Cart Heading */}\r\n                {/* <Button size=\"sm\" onClick={() => this.displayingCartItems()}\r\n                    color=\"blue\" text=\"View Cart\"\r\n                />\r\n              </Box>\r\n              <p>{cartItems.length}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n            </div> \r\n          </Box>       */}\r\n          <div>\r\n            {displayingCart === true ? <SeeCartItems /> : []}\r\n          </div>\r\n        <div className=\"card\">\r\n          <Box align=\"center\">\r\n            <Box \r\n              dangerouslySetInlineStyle={{\r\n                __style: {\r\n                  backgroundColor: 'white'\r\n                }\r\n              }}\r\n              shape=\"rounded\"\r\n              wrap\r\n              display=\"flex\"\r\n              justifyContent=\"around\"\r\n            >\r\n              {searchedResults.map(searchedItem => (\r\n                <Box paddingY={4} margin={2} width={200} key={searchedItem._id}>\r\n                  <Card\r\n                    image={\r\n                      <Box height={80} width={80}>                   \r\n                        <Image\r\n                          fit=\"cover\"\r\n                          alt=\"Department\"\r\n                          naturalHeight={1}\r\n                          naturalWidth={1}\r\n                          src={searchedItem.thumbnail}\r\n                        />\r\n                      </Box>\r\n                    }\r\n                  >\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                      direction=\"column\"\r\n                    >\r\n                      <Box marginBottom={2}>\r\n                        <Text bold size=\"sm\">\r\n                        {shortText(searchedItem.name)}\r\n                        </Text>\r\n                      </Box>\r\n                        <Text size=\"sm\">{shortTextDescp(searchedItem.description)}</Text>\r\n                        <Text color=\"orchid\">${searchedItem.price}</Text>\r\n                      <Box marginTop={2}>\r\n                        <Text size=\"sm\">\r\n                          <Button size=\"sm\" onClick={() => this.addToCart(searchedItem)}\r\n                          color=\"blue\" text=\"Add to Cart\" />\r\n                        </Text>                   \r\n                      </Box>\r\n                    </Box>               \r\n                  </Card>\r\n                </Box>\r\n              ))}\r\n            </Box>       \r\n          </Box>\r\n        </div>    \r\n      </>\r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst DeptMenu = ({cartItems, displayingCartItems}) => (\r\n  \r\n  <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n  <Column span={2}>\r\n    <Box>\r\n      <Text color=\"white\"></Text>\r\n    </Box>\r\n  </Column>\r\n            \r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n        <div >\r\n            <p>Automotive</p>\r\n        </div>\r\n    </Link>\r\n  </div>       \r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n        <div >                        \r\n            <p>Books</p> \r\n        </div>                     \r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n        <div>                      \r\n            <p>Electronics</p>\r\n        </div>\r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n        <div >                     \r\n            <p>Fashion</p>\r\n        </div>                        \r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n        <div >                        \r\n            <p>Home</p>                      \r\n        </div>\r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n        <div>                     \r\n            <p>Sports Outdoor</p>{\" \"}\r\n        </div>                        \r\n    </Link>\r\n  </div>           \r\n  <div className=\"lineitems\">\r\n    <Box marginLeft={1} marginRightt={-1} marginTop={3} paddingLeft={0} paddingRight={0}>\r\n      {/* User Cart Heading */}\r\n      <Button size=\"sm\" onClick={displayingCartItems}\r\n          color=\"blue\" text=\"View Cart\"\r\n      />\r\n    </Box>\r\n      <p>{cartItems.length}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n  </div> \r\n</Box>      \r\n)\r\n\r\nexport default SearchResult;","import React, { Component } from 'react';\r\n//prettier ignore\r\nimport {Container, Box, Card, Image, Text, SearchField, Icon } from 'gestalt';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Loader from './Loader';\r\nimport SearchResult from './SearchResult';\r\n// import Navbar from '../components/Navbar';\r\n\r\nimport './App.css';\r\n// import Items from './Items';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\n\r\n\r\nconst hStyle = {\r\n  fontSize: '30px',\r\n  fontFamily: 'calibri light',\r\n  \r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n   departments: [],\r\n   department: [],\r\n   departmentId: [],    \r\n   cartItems: [],\r\n   items: [],\r\n   searchedItems:[],\r\n   searchTerm: '',   \r\n    loadingDepartments: true,\r\n    redirect: false,\r\n    searchTermState: false\r\n  };\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {          \r\n      return <Redirect to='/SearchResult' />\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  // Connect Graphql using Strapi SDK\r\n  async componentDidMount() {   \r\n    try {\r\n\r\n      const response = await strapi.request(\"POST\", \"/graphql\", {\r\n        data: {\r\n          query: `query {\r\n           departments {\r\n              _id\r\n              name\r\n              description\r\n              image {\r\n                url\r\n              }\r\n            }\r\n          }`\r\n        }\r\n      });\r\n      // console.log(response);\r\n      this.setState({departments: response.data.departments, loadingDepartments: false });\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.setState({ loadingDepartments: false });\r\n    }\r\n  }\r\n\r\n  handleChange = ({value}) => {\r\n    this.setState({ searchTerm: value }, () => this.searchDepartments());\r\n  };\r\n\r\n  \r\n  searchDepartments = async () => {   \r\n    // console.log(this.state.searchTerm)\r\n    const response = await strapi.request('POST', '/graphql', {\r\n      data: {\r\n        query: `query {\r\n         items(where: {\r\n            name_contains: \"${this.state.searchTerm.toLowerCase()}\"\r\n          }) {\r\n            _id\r\n            name\r\n            description\r\n            thumbnail                       \r\n            price\r\n            department {\r\n              _id\r\n              name\r\n            }\r\n          }\r\n        }`\r\n      }\r\n    });\r\n    this.setState({\r\n      searchedItems: response.data.items,     \r\n      loadingDepartments: false,\r\n      redirect: true,\r\n      searchTermState: true\r\n    });\r\n    \r\n  }\r\n\r\n  render() {    \r\n    const { searchTerm, searchTermState, loadingDepartments, departments } = this.state;\r\n    \r\n    const shortText = (text, maxLength = 50) => {\r\n      if (!text) { return ' '}\r\n      if (text.length <= maxLength) { return text }\r\n    \r\n      return text.substr(0, maxLength) + '...'\r\n    } \r\n    const shortTextDescp = (text, maxLength = 90) => {\r\n      if (!text) { return ' '}\r\n      if (text.length <= maxLength) { return text }\r\n    \r\n      return text.substr(0, maxLength) + '...'\r\n    } \r\n    return (\r\n      <>\r\n      {/* <Navbar itemDeptId={departments}/> */}\r\n      <Container>\r\n        {/* {departments Search Field */}\r\n        <Box display=\"flex\" justifyContent=\"center\" marginTop={4}>\r\n          <SearchField \r\n            id=\"searchField\"\r\n            accessibilityLabel=\"Departments Search Field\"\r\n            onChange={this.handleChange}\r\n            value={searchTerm}\r\n            placeholder=\"Search Departments\"\r\n          />\r\n          <Box margin={3}>            \r\n            <Icon \r\n              icon=\"filter\"\r\n              color={searchTerm ? 'orange' : 'gray'}\r\n              size={20}\r\n              accessibilityLabel=\"Filter\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {/*departments Section */}\r\n        <Box display=\"flex\" justifyContent=\"center\" marginBottom={2}>\r\n          {/*departments Header */}\r\n          <div style={hStyle} color=\"black\" >        \r\n            Shop by Departments      \r\n          </div>\r\n        </Box>\r\n     \r\n        {/*departments */}\r\n        <Box \r\n          dangerouslySetInlineStyle={{\r\n            __style: {\r\n              backgroundColor: 'white'\r\n            }\r\n          }}\r\n          shape=\"rounded\"\r\n          wrap\r\n          display=\"flex\"\r\n          justifyContent=\"around\"\r\n        >\r\n          {/* Display Store Departments name on Home Page */}\r\n          {departments.map(department => (\r\n            <Box paddingY={4} margin={2} width={200} key={department._id}>\r\n              <Card\r\n                image={\r\n                  <Box height={200} width={200}>\r\n                    <Link to={`/${department._id}`}>\r\n                    <Image\r\n                      fit=\"cover\"\r\n                      alt=\"Department\"\r\n                      naturalHeight={1}\r\n                      naturalWidth={1}                     \r\n                      src={`${apiURL}${department.image.url}`}\r\n                    />\r\n                    </Link>\r\n                  </Box>\r\n                }\r\n              >\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                  direction=\"column\"\r\n                >\r\n                  <Text bold size=\"sm\"> {shortText(department.name)}</Text>\r\n                  <Text size=\"sm\">{shortTextDescp(department.description)} </Text>\r\n                </Box>\r\n              </Card>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n        {/* <Spinner show={loadingDepartments} accessibilityLabel=\"Loading Spinner\" /> */}\r\n       <Loader show={loadingDepartments} />\r\n       {/* {loadingDepartments && <Loader />} */}\r\n      <div>   \r\n      {searchTermState ? <SearchResult searchTerm={searchTerm}/> : this.state.searchTerm === null && <SearchResult searchTerm={this.state.searchTerm}/>}\r\n       {this.renderRedirect()}\r\n      </div>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Box, Image, Button } from \"gestalt\";\r\nimport { calculateTotalItems, getToken, clearToken, clearCart, getCart } from \"../utils\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n// import SearchItems from \"./SearchItems\";\r\n\r\n\r\n\r\nclass Navbar extends React.Component {\r\n  state = {   \r\n    cartItems: [] \r\n  }\r\n  \r\n    handleSignout = () => {\r\n        clearToken();\r\n        clearCart();\r\n        this.props.history.push(\"/\");\r\n        \r\n    };\r\n    componentDidMount() {\r\n      console.log(this.props)    \r\n      this.setState({ cartItems: getCart()}) \r\n         \r\n    }\r\n    render() {\r\n        const {cartItems} = this.state\r\n        return getToken() !== null ? \r\n        <AuthNav handleSignout={this.handleSignout} cartItems={cartItems}/> : <UnAuthNav />;        \r\n    }\r\n};\r\n\r\n\r\nconst AuthNav = ({ handleSignout, cartItems }) => (\r\n    <Box\r\n    display=\"flex\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"around\"\r\n    height={50}\r\n    color=\"blue\"\r\n    padding={1}\r\n    // shape=\"roundedBottom\"\r\n    borderRadius={32}\r\n  >\r\n    {/* Title and Logo */}\r\n    <NavLink activeClassName=\"active\" exact to=\"/\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n      <Box marginTop={12} margin={2} height={90} width={180}>\r\n          <Image\r\n            alt=\"FeMMit Logo\"\r\n            naturalHeight={1}\r\n            naturalWidth={1}\r\n            src=\"./icons/logo-in.png\"\r\n          />\r\n        </Box>        \r\n      </Box>\r\n    </NavLink>   \r\n\r\n    \r\n    {/* Signout Button */}\r\n    <div className=\"signout-spacing\">\r\n      <Button\r\n        onClick={handleSignout}\r\n        color=\"transparent\"\r\n        text=\"Sign Out\"\r\n        inline\r\n        size=\"md\"\r\n      />\r\n    </div>\r\n    {/* Checkout Link */}\r\n    <NavLink activeClassName=\"active\" to=\"/checkout\">\r\n      <div className=\"checkout-spacing\">\r\n        <p>{calculateTotalItems(cartItems)}<i className=\"fa fa-shopping-cart\">{\" \"} Checkout </i> </p>\r\n      </div>\r\n    </NavLink>    \r\n\r\n    \r\n  </Box>\r\n); \r\n\r\nconst UnAuthNav = () => (\r\n  <Box\r\n    display=\"flex\" \r\n    alignItems=\"center\"\r\n    justifyContent=\"around\"\r\n    height={60} \r\n    color=\"gray\" \r\n    padding={1} \r\n    shape=\"roundedBottom\"\r\n          \r\n  >\r\n    {/* Title and logo*/}\r\n    <NavLink activeClassName=\"active\" exact to=\"/\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box marginTop={12} margin={2} height={90} width={180}>\r\n          <Image\r\n            alt=\"FeMMit Logo\"\r\n            naturalHeight={1}\r\n            naturalWidth={1}\r\n            src=\"./icons/logo.png\"\r\n          />\r\n        </Box>           \r\n      </Box>\r\n    </NavLink>\r\n    \r\n    {/* Sign In Link*/}\r\n    <NavLink activeClassName=\"active\" to=\"/signin\">\r\n        <div className=\"signin-spacing\">\r\n        <i className=\"fa fa-sign-in\" aria-hidden=\"true\" title=\"Sign In\"></i>\r\n            \r\n        </div>\r\n    </NavLink>\r\n    \r\n    {/* Sign Up Link*/}\r\n    <NavLink activeClassName=\"active\" to=\"/signup\">\r\n        <div className=\"signup-spacing\">\r\n            <span>Get Started</span>\r\n        </div>\r\n    </NavLink>\r\n  </Box>    \r\n);\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\nimport {Box, Toast} from 'gestalt';\r\n\r\nconst ToastMessage = ({ show, message }) =>\r\n    show && (\r\n        <Box\r\n            dangerouslySetInlineStyle={{\r\n                __style: {\r\n                    bottom: 330,\r\n                    left: '50%',\r\n                    transform: \"translatex(-50%)\"\r\n                }\r\n            }}\r\n            position=\"fixed\"\r\n            >\r\n                <Toast color=\"orange\" text={ message } />\r\n        </Box>\r\n    );\r\n\r\nexport default ToastMessage;\r\n","import React from  'react'\r\nimport { Container, Box, Button, TextField} from 'gestalt'\r\nimport {setToken} from '../utils';\r\nimport ToastMessage from './ToastMessage';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\n\r\nconst hStyle = {\r\n    fontSize: '22px',\r\n    fontFamily: 'calibri light',\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    \r\n  };\r\n\r\nclass Signin extends React.Component {\r\n    state = {\r\n        username: '',        \r\n        password: '',\r\n        toast: false,\r\n        toastMessage: '',\r\n        loading: false\r\n    }\r\n\r\n    handleChange = ({ event, value }) => {\r\n        event.persist();\r\n        this.setState({[event.target.name]: value});\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n\r\n        if (this.isFormEmpty(this.state)) {\r\n            this.showToast(\"Fill in all fields\");\r\n            return;\r\n        }\r\n        \r\n        //Sign up user\r\n        try {\r\n            this.setState({ loading: true});           \r\n            const response = await strapi.login(username, password);\r\n            this.setState({ loading: false});\r\n            setToken(response.jwt);            \r\n            this.redirectUser('/');\r\n        }catch (err) {\r\n            this.setState({ loading: false});\r\n            this.showToast(err.message);\r\n        }\r\n    };\r\n\r\n    redirectUser = path => this.props.history.push(path);\r\n\r\n    isFormEmpty = ({username, password}) => {\r\n        return !username || !password;\r\n    };\r\n\r\n    showToast = toastMessage => {\r\n        this.setState({ toast: true, toastMessage });\r\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\r\n    }\r\n\r\n    render() {\r\n        const { toastMessage, toast, loading } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <Box\r\n                    dangerouslySetInlineStyle={{\r\n                        __style: {\r\n                        //   backgroundColor: 'white',\r\n                          \r\n                          \r\n                        }\r\n                      }}\r\n                    margin={4}\r\n                    padding={4}\r\n                    shape=\"rounded\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    width={550}\r\n                >\r\n                    {/* Sign in Form */}\r\n                    <form className=\"container max-w-md mx-auto p-8 m-2 shadow-lg rounded bg-gray\"\r\n                    style={{\r\n                        display: 'inlineBlock',\r\n                        textAlign: 'center',\r\n                        maxWidth: 450,\r\n                        height: 210,                        \r\n                        \r\n                        \r\n                    }}\r\n                    onSubmit={this.handleSubmit}                    \r\n                    >\r\n                        {/* Sign in Form Heading */}\r\n                        <Box\r\n                            marginBottom={2}\r\n                            marginTop={-3}\r\n                            display=\"flex\"\r\n                            direction=\"column\"\r\n                            alignItems='center'\r\n                        >\r\n                            <div style={hStyle} color=\"black\" >Sign In</div>\r\n                                                     \r\n                        </Box>\r\n                        {/* Username Input */}\r\n                        <Box  marginBottom={2}>\r\n                        <TextField\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleChange}\r\n                        />                   \r\n                        </Box>\r\n                        {/* Password Input */}\r\n                        <TextField\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Box margiginTop={5} paddingY={2}>\r\n                            <Button\r\n                                inline \r\n                                disabled={loading} \r\n                                color=\"blue\" \r\n                                text=\"Submit\" \r\n                                type=\"submit\" \r\n                            />\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n                <ToastMessage show={toast} message={toastMessage}/>\r\n            </Container>        \r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from  'react'\r\nimport { Container, Box, Button, Text, TextField} from 'gestalt'\r\nimport {setToken} from '../utils';\r\nimport ToastMessage from './ToastMessage';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\nconst hStyle = {\r\n    fontSize: '30px',\r\n    fontFamily: 'calibri light',\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n  };\r\n\r\nclass Signup extends React.Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        toast: false,\r\n        toastMessage: '',\r\n        loading: false\r\n    }\r\n\r\n    handleChange = ({ event, value }) => {\r\n        event.persist();\r\n        this.setState({[event.target.name]: value});\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { username, email, password } = this.state;\r\n\r\n        if (this.isFormEmpty(this.state)) {\r\n            this.showToast(\"Fill in all fields\");\r\n            return;\r\n        }\r\n        \r\n        //Sign up user\r\n        try {\r\n            this.setState({ loading: true});           \r\n            const response = await strapi.register(username, email, password);\r\n            this.setState({ loading: false});\r\n            setToken(response.jwt);            \r\n            this.redirectUser('/');\r\n        }catch (err) {\r\n            this.setState({ loading: false});\r\n            this.showToast(err.message);\r\n        }\r\n    };\r\n\r\n    redirectUser = path => this.props.history.push(path);\r\n\r\n    isFormEmpty = ({username, email, password}) => {\r\n        return !username || !email || !password;\r\n    };\r\n\r\n    showToast = toastMessage => {\r\n        this.setState({ toast: true, toastMessage });\r\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\r\n    }\r\n\r\n    render() {\r\n        const { toastMessage, toast, loading } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <Box\r\n                    dangerouslySetInlineStyle={{\r\n                        __style: {\r\n                        //   backgroundColor: 'white'\r\n                          \r\n                        }\r\n                      }}\r\n                    margin={4}\r\n                    padding={4}\r\n                    shape=\"rounded\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    width={550}\r\n                    \r\n                >\r\n                    {/* Sign Up Form */}\r\n                    <form className=\"container max-w-md mx-auto p-8 m-2 shadow-lg rounded bg-gray\"\r\n                    style={{\r\n                        display: 'inlineBlock',\r\n                        textAlign: 'center',\r\n                        maxWidth: 450\r\n                    }}\r\n                    onSubmit={this.handleSubmit}                    \r\n                    >\r\n                        {/* Sign Up Form Heading */}\r\n                        <Box\r\n                            marginBottom={2}\r\n                            display=\"flex\"\r\n                            direction=\"column\"\r\n                            alignItems='center'\r\n                        >\r\n                            <div style={hStyle} color=\"black\" >Let's Get Started</div>                            \r\n                            <Text italic color=\"orchid\">\r\n                                Sign up to place your order!\r\n                            </Text>\r\n                        </Box>\r\n                        {/* Username Input */}\r\n                        <TextField\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleChange}\r\n                            className=\"border m-1 p-1 rounded\"\r\n                        />\r\n                        {/* Email Address Input */}\r\n                        <TextField\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            onChange={this.handleChange}\r\n                            className=\"border m-1 p-1 rounded\"\r\n                        />\r\n                        {/* Password Input */}\r\n                        <TextField \r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={this.handleChange}\r\n                            className=\"border m-1 p-1 rounded\"\r\n                        />\r\n                        <Button\r\n                            inline \r\n                            disabled={loading} \r\n                            color=\"blue\" \r\n                            text=\"Submit\" \r\n                            type=\"submit\"\r\n                            className=\"bg-orange m-1 p-1 rounded\"\r\n                        />\r\n                    </form>\r\n                </Box>\r\n                <ToastMessage show={toast} message={toastMessage}/>\r\n            </Container>        \r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from  'react'\r\n//prettier ignore\r\nimport { Container, Box, Button, Heading, Text, TextField, Modal, Spinner } from 'gestalt'\r\n//prettier ignore\r\nimport { Elements, StripeProvider, CardElement, injectStripe} from 'react-stripe-elements';\r\nimport ToastMessage from './ToastMessage';\r\nimport {getCart, calculatePrice, clearCart, calculateAmount} from '../utils';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\nclass _CheckoutForm extends React.Component {\r\n    state = {\r\n        cartItems: [],\r\n        address: \"\",\r\n        postalCode: \"\",\r\n        city: \"\",\r\n        confirmationEmailAddress: \"\",\r\n        toast: false,\r\n        toastMessage: \"\",\r\n        orderProcessing: false,\r\n        modal: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ cartItems: getCart()});\r\n    }\r\n\r\n    handleChange = ({ event, value }) => {\r\n        event.persist();\r\n        this.setState({[event.target.name]: value});\r\n    };\r\n\r\n    handleConfirmOrder = async event => {\r\n        event.preventDefault();    \r\n\r\n        if (this.isFormEmpty(this.state)) {\r\n            this.showToast(\"Fill in all fields\");\r\n            return;\r\n        }\r\n\r\n        this.setState({ modal: true });\r\n    };\r\n\r\n    handleSubmitOrder = async () => {\r\n        const { cartItems, city, address, postalCode, confirmationEmailAddress } = this.state;\r\n\r\n        const amount = calculateAmount(cartItems);\r\n        //process order\r\n        this.setState({ orderProcessing: true });\r\n        let token;\r\n        try {\r\n            // create stripe token\r\n            const response = await this.props.stripe.createToken();\r\n            token = response.token.id;\r\n            //create order with stripe sdk (make request to backend)\r\n                await strapi.createEntry('orders', {\r\n                    amount,\r\n                    items: cartItems,\r\n                    city,\r\n                    postalCode,\r\n                    address,\r\n                    token              \r\n                });\r\n                await strapi.request(\"POST\", \"/email\", {\r\n                    data: {\r\n                        to: confirmationEmailAddress,\r\n                        subject: `Order Confirmation - FeMMit ${new Date(Date.now())}`,\r\n                        text: \"Your order has been processed\",\r\n                        html: \"<bold>Expect your order to arrive in 2-3 shipping days</bold>\"\r\n                    }\r\n                });\r\n                //set orderProcessing - false, set modal - false\r\n                this.setState({ orderProcessing: false, modal: false });\r\n                // clear user cart of items\r\n                clearCart();\r\n                // show success toast\r\n                this.showToast(\"Your order has been successfully submitted!\", true);\r\n            } catch (err) {\r\n                // set order processing - false, modal - false\r\n                this.setState({ orderProcessing: false, modal: false });\r\n                // show error toast\r\n                this.showToast(err.message);\r\n        }\r\n    };\r\n\r\n    isFormEmpty = ({address, postalCode, city, confirmationEmailAddress }) => {\r\n        return !address || !postalCode || !city || !confirmationEmailAddress;\r\n    };\r\n\r\n    showToast = (toastMessage, redirect = false) => {\r\n        this.setState({ toast: true, toastMessage });\r\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' },\r\n        // if true passed to 'redirect argument, redirect home\r\n            () => redirect && this.props.history.push('/')\r\n        ), 5000);\r\n    };\r\n\r\n    closeModal = () => this.setState({ modal: false });\r\n\r\n    render() {\r\n        //prettier ignore\r\n        const { toast, toastMessage, cartItems, modal, orderProcessing } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <Box\r\n                    color=\"darkWash\"\r\n                    margin={4}\r\n                    padding={4}\r\n                    shape=\"rounded\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    direction=\"column\"\r\n                >\r\n                    {/* Checkout Form Heading */}                     \r\n                    <Heading color=\"midnight\">Checkout</Heading>\r\n                    {cartItems.length > 0 ? (\r\n                        <React.Fragment>\r\n                        {/* User cart */}\r\n                        <Box\r\n                            display=\"flex\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"column\"\r\n                            marginTop={2}\r\n                            marginBottom={6}\r\n                        >\r\n                            <Text color=\"darkGray\" italic>\r\n                                {cartItems.length} items for Checkout</Text>\r\n                            <Box padding={2}>\r\n                                {cartItems.map(item => (\r\n                                    <Box key={item._id} padding={1}>\r\n                                    <Text color=\"midnight\">\r\n                                    {item.name} x {item.quantity} - $\r\n                                    {item.quantity * item.price}\r\n                                    </Text>\r\n                                </Box>\r\n                                ))}\r\n                            </Box>\r\n                            <Text bold>Total Amount: {calculatePrice(cartItems)}</Text>\r\n                        </Box>\r\n                        {/* Checkout Form */}\r\n                        <form \r\n                        style={{\r\n                            display: 'inlineBlock',\r\n                            textAlign: 'center',\r\n                            maxWidth: 450\r\n                        }}\r\n                        onSubmit={this.handleConfirmOrder}                    \r\n                        >                      \r\n                            {/* Shipping Address Input */}\r\n                            <TextField\r\n                                id=\"address\"\r\n                                type=\"text\"\r\n                                name=\"address\"\r\n                                placeholder=\"Shipping Address\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {/* Postal Code Address Input */}\r\n                            <TextField\r\n                                id=\"postalCode\"\r\n                                type=\"text\"\r\n                                name=\"postalCode\"\r\n                                placeholder=\"Postal Code\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {/* City Input */}\r\n                            <TextField\r\n                                id=\"city\"\r\n                                type=\"text\"\r\n                                name=\"city\"\r\n                                placeholder=\"City of Residence\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {/* Confirmation Email Address Input */}\r\n                            <TextField\r\n                                id=\"confirmationEmailAddress\"\r\n                                type=\"email\"\r\n                                name=\"confirmationEmailAddress\"\r\n                                placeholder=\"Confirmation Email Address\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {/* Credit Card Element */}\r\n                            <CardElement id=\"stripe__input\" onReady={input => input.focus()}\r\n                            />\r\n                            <button id=\"stripe__button\" type=\"submit\">\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                        </React.Fragment>\r\n                ) : (\r\n                    // Default Text if No Items in Cart\r\n                    <Box color=\"darkWash\" shape=\"rounded\" padding={4}>\r\n                      <Heading align=\"center\" color=\"watermelon\" size=\"xs\">\r\n                        Your Cart is Empty\r\n                      </Heading>\r\n                      <Text align=\"center\" italic color=\"green\">\r\n                        Add some items!\r\n                      </Text>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                {/* Confirmation Modal */}\r\n                {modal && (\r\n                <ConfirmationModal\r\n                    orderProcessing={orderProcessing}\r\n                    cartItems={cartItems}\r\n                    closeModal={this.closeModal}\r\n                    handleSubmitOrder={this.handleSubmitOrder}\r\n                />\r\n                )}\r\n                <ToastMessage show={toast} message={toastMessage}/>\r\n            </Container>        \r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst ConfirmationModal = ({\r\n    orderProcessing,\r\n    cartItems,\r\n    closeModal,\r\n    handleSubmitOrder\r\n  }) => (\r\n    <Modal\r\n        accessibilityCloseLabel=\"close\"\r\n        accessibilityModalLabel=\"Confirm Your Order\"\r\n        heading=\"Confirm Your Order\"\r\n        onDismiss={closeModal}\r\n        footer={\r\n            <Box\r\n            display=\"flex\"\r\n            marginRight={-1}\r\n            marginLeft={-1}\r\n            justifyContent=\"center\"\r\n            >\r\n            <Box padding={1}>\r\n                <Button\r\n                size=\"lg\"\r\n                color=\"red\"\r\n                text=\"Submit\"\r\n                disabled={orderProcessing}\r\n                onClick={handleSubmitOrder}\r\n                />\r\n            </Box>\r\n            <Box padding={1}>\r\n                <Button\r\n                size=\"lg\"\r\n                text=\"Cancel\"\r\n                disabled={orderProcessing}\r\n                onClick={closeModal}\r\n                />\r\n            </Box>\r\n            </Box>\r\n        }\r\n        role=\"alertdialog\"\r\n        size=\"sm\"\r\n        >\r\n        {/* Order Summary */}\r\n        {!orderProcessing && (\r\n            <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n            padding={2}\r\n            color=\"lightWash\"\r\n            >\r\n            {cartItems.map(item => (\r\n                <Box key={item._id} padding={1}>\r\n                <Text size=\"lg\" color=\"red\">\r\n                    {item.name} x {item.quantity} - ${item.quantity * item.price}\r\n                </Text>\r\n                </Box>\r\n            ))}\r\n            <Box paddingY={2}>\r\n                <Text size=\"lg\" bold>\r\n                Total: {calculatePrice(cartItems)}\r\n                </Text>\r\n            </Box>\r\n            </Box>\r\n        )}\r\n  \r\n        {/* Order Processing Spinner */}\r\n        <Spinner\r\n            show={orderProcessing}\r\n            accessibilityLabel=\"Order Processing Spinner\"\r\n        />\r\n        {orderProcessing && (\r\n            <Text align=\"center\" italic>\r\n            Submitting Order...\r\n            </Text>\r\n        )}\r\n    </Modal>\r\n);\r\n\r\nconst CheckoutForm = withRouter(injectStripe(_CheckoutForm));\r\n\r\nconst Checkout = () => (\r\n    <StripeProvider apiKey=\"pk_test_x8yjxMCIGG0GwegNJCzILYWy00qrvPKmKA\">\r\n        <Elements>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    </StripeProvider>\r\n)\r\n\r\nexport default Checkout;","import axios from \"axios\";\r\n\r\nconst BASEURL = process.env.REACT_APP_BASEURL\r\nconst APIKEY = process.env.REACT_APP_APIKEY\r\n// Export an object containing methods we'll use for accessing the Google Book API\r\n\r\nexport default { \r\n  search: function(booksearch) {\r\n    return axios.get(BASEURL + booksearch + APIKEY);\r\n  },\r\n  \r\n  searchId: function(keyId) {\r\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes/\" + keyId);\r\n  },\r\n \r\n};\r\n","import React from 'react';\r\nimport './Items.css';\r\nimport { Box, Layer, Modal, Button } from 'gestalt'\r\n\r\nfunction ItemModalDetails (props) {\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  return (\r\n    <Box marginLeft={-1} marginRight={-1}>\r\n      <Box padding={1}>\r\n        <Button\r\n          text=\"Details\"\r\n          onClick={() => { setShowModal(!showModal) }}\r\n        />\r\n        {showModal && (\r\n          <Layer>\r\n            <Modal\r\n              accessibilityModalLabel=\"Item Details\"\r\n              heading=\"Details\"\r\n              onDismiss={() => { setShowModal(!showModal) }}\r\n              footer={\r\n                <Box\r\n                  display=\"flex\"\r\n                  marginLeft={-1}\r\n                  marginRight={-1}\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Box padding={1}>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      text=\"Close\"\r\n                      onClick={() => { setShowModal(!showModal) }}\r\n                    />\r\n                  </Box>                 \r\n                </Box>\r\n              }\r\n           \r\n              size=\"md\"\r\n            >\r\n              <Box paddingX={8}>            \r\n                {props.itemDetails.map(itemDetail => (          \r\n                  <div key={itemDetail._id} >               \r\n                    <img alt={itemDetail.name} width=\"300\" height=\"320\" className=\"img-fluid\" src={itemDetail.thumbnail} /><span></span>\r\n                    <br></br>\r\n                    <p><b>{itemDetail.name}</b></p>\r\n                    <br></br>\r\n                    <p><b>Price :</b>{\" \"} ${itemDetail.price}</p>\r\n                    <br></br>                \r\n                    <p><b>Description :</b> {itemDetail.description}</p>\r\n                  </div>        \r\n                ))}\r\n              </Box>\r\n            </Modal>\r\n          </Layer>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default ItemModalDetails;","import React from 'react';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport './Items.css';\r\nimport API from '../utils/API';\r\nimport Loader from './Loader';\r\nimport ItemModalDetails from '../components/ItemModalDetails'\r\n// prettier ignore\r\nimport { Box, Text, Image, Card, Button } from 'gestalt'\r\nimport { setCart, getCart} from '../utils';\r\n// import { Link } from 'react-router-dom';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\nconst hStyle = {\r\n  fontSize: '24px',\r\n  fontFamily: 'calibri light',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nvar booksArray =[]\r\nvar itemsBooksArray = []\r\nvar bookPrice = \"\"\r\nvar bookThumbnail = \"\"\r\nvar ShuffledDatas = []\r\nvar shuffleData = []\r\nvar detailsDisplay = []\r\n\r\nconst defaultBooks = [\"Wars of Law\", \"Among the Valiant\", \"Religion\", \"The Fall of Western Civilization\", \"Destruction of Black Civilization\", \"Sex in Antiquity\", \"Wars\", \"food\", \"School\", \"Country\", \"Music\", \"Friends\", \"Family\", \"Baby\", \"Politics\"]\r\n\r\nconst shortText = (text, maxLength = 50) => {\r\n  if (!text) { return ' '}\r\n  if (text.length <= maxLength) { return text }\r\n\r\n  return text.substr(0, maxLength) + '...'\r\n} \r\nconst shortTextDescp = (text, maxLength = 90) => {\r\n  if (!text) { return ' '}\r\n  if (text.length <= maxLength) { return text }\r\n\r\n  return text.substr(0, maxLength) + '...'\r\n} \r\n\r\nclass SeeDeptItems extends React.Component {\r\n    state = {\r\n        items: [],\r\n        department: '',\r\n        departmentId: '',\r\n        cartItems: [],\r\n        search: \"\",\r\n        books: [],\r\n        itemDetails: [],\r\n        displayingCart: false,\r\n        loadingItems: true\r\n    }\r\n\r\n    \r\n    bookDeptId = () => {\r\n        // console.log(\"THIS IS BOOK DEPT ===>\", this.props.itemDeptId )\r\n        // console.log(\"THIS IS props.itemDeptId ==>\", this.props.itemDeptId) \r\n        let bookToSearch = defaultBooks[Math.floor(Math.random() * defaultBooks.length)];       \r\n        this.searchForBooks(bookToSearch);\r\n    }\r\n\r\n    searchForBooks = booksearch => {       \r\n        API.search(booksearch)        \r\n        .then(res => {                  \r\n          if(res.data.error ){\r\n            console.log(res.data.error)            \r\n          }else{           \r\n            booksArray = res.data.items;           \r\n            this.displayBooks();  \r\n          }\r\n        })          \r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n    displayBooks = () => {      \r\n      this.setState({ books: booksArray, department: \"Books\" })      \r\n\r\n      for (var i = 0;  i < booksArray.length; i++) { \r\n        let bookId = String(booksArray[i].etag)      \r\n        let bookName = String(booksArray[i].volumeInfo.title)\r\n        let bookDescription = String(booksArray[i].volumeInfo.description)\r\n        let bookAuthor = String(booksArray[i].volumeInfo.authors)\r\n        let bookPublishDate = String(booksArray[i].volumeInfo.publishedDate)\r\n        if (booksArray[i].volumeInfo.imageLinks == null) {\r\n          bookThumbnail = 'https://lmtrain.github.io/lm-images/assets/images/books5.jpg'         \r\n        }else{\r\n          bookThumbnail = String(booksArray[i].volumeInfo.imageLinks.thumbnail)   \r\n        }        \r\n       \r\n        if (booksArray[i].saleInfo.saleability === \"NOT_FOR_SALE\") {\r\n          bookPrice = Number(0.00)          \r\n        }else{\r\n          bookPrice = String(booksArray[i].saleInfo.retailPrice.amount)          \r\n        }\r\n        \r\n\r\n        let authorLabel = \" || Author : \"\r\n        let pulishedLabel = \" || Pulished Date : \"\r\n        bookDescription = shortTextDescp(bookDescription) + \"\\n\" + authorLabel + bookAuthor + \"\\n\" + pulishedLabel + bookPublishDate;\r\n\r\n        itemsBooksArray.push({\"_id\": bookId, \"name\": bookName, \"description\": bookDescription, \"thumbnail\": bookThumbnail, \"price\": bookPrice })\r\n      }     \r\n      this.setState({\r\n        items: itemsBooksArray,\r\n        loadingItems: false,      \r\n        cartItems: getCart()            \r\n    })        \r\n    }\r\n    \r\n\r\n    async componentDidMount() {  \r\n        // console.log(this.props)      \r\n        if (this.props.itemDeptId === \"5dcf9519dc3bcd3de001697b\") {        \r\n        this.bookDeptId();       \r\n        } else\r\n        \r\n        try {       \r\n        const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    department(id: \"${this.props.itemDeptId}\") {\r\n                      _id\r\n                      name\r\n                      items {\r\n                        _id\r\n                        name\r\n                        description\r\n                        thumbnail                       \r\n                        price\r\n                      }    \r\n                    }\r\n                }`\r\n            }\r\n        }); \r\n        detailsDisplay = response.data.department.items    \r\n        this.setState({\r\n            items: response.data.department.items,\r\n            department: response.data.department.name,\r\n            loadingItems: false,\r\n            cartItems: getCart()            \r\n        })\r\n        console.log(detailsDisplay)       \r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n    this.shuffle() \r\n  }\r\n  shuffle = () => {\r\n    let itemsArray = [...this.state.items];\r\n    let itemsShuffled = [];    \r\n    for (var i = 0;  i < this.state.items.length; i++) {        \r\n          shuffleData = itemsArray.splice(Math.floor(Math.random()*itemsArray.length/2));        \r\n          itemsShuffled = [...itemsShuffled, ...shuffleData];\r\n        }   \r\n        ShuffledDatas.push(this.state.items);\r\n    // Set this.state.deals equal to the new deals array\r\n    this.setState({ items: itemsShuffled });\r\n    // itemsArray = [...this.state.deals];\r\n    // this.setState({Items: deals});\r\n    \r\n  };\r\n      \r\n  addToCart = item => {\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n      if (alreadyInCart === -1) {\r\n          const updatedItems = this.state.cartItems.concat({\r\n          ...item,\r\n          quantity: 1\r\n          });\r\n          this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n          console.log(this.state.cartItems);\r\n      } else {\r\n          const updatedItems = [...this.state.cartItems];\r\n          updatedItems[alreadyInCart].quantity += 1;\r\n          this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n          console.log(this.state.cartItems);\r\n    }\r\n  };\r\n    \r\n\r\n    deleteItemsFromCart = itemToDeleteId => {\r\n        const filteredItems = this.state.cartItems.filter(\r\n            iitem => iitem._id !== itemToDeleteId\r\n        );\r\n        this.setState({ cartItems: filteredItems }, () => setCart(filteredItems));\r\n    };\r\n\r\n    handleDetailsSubmit = (id) => { \r\n      // Find the id in the state    \r\n      const itemDetail = detailsDisplay.find((itemDetailed) => itemDetailed._id === id);    \r\n      this.setState({itemDetails: [itemDetail], \r\n                    // detailsItem: [item], \r\n                    // showItemDetail: true,\r\n                    // showCartItems: false,\r\n                    // redirect: true\r\n                  })            \r\n    };\r\n    \r\n    render() {\r\n      \r\n      const { department, items, loadingItems, itemDetails } = this.state;\r\n       \r\n        return (  \r\n            <>              \r\n              <Loader show={loadingItems} />\r\n                \r\n            <Box\r\n                marginTop={4}\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                dangerouslySetInlineStyle={{\r\n                  __style: {\r\n                    flexWrap: 'wrap-reverse'\r\n                  }\r\n                }}\r\n            >\r\n                {/* items Section */}\r\n                <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n                    {/* items Heading */}\r\n                    <Box margin={2}>\r\n                        <div style={hStyle}>{department}</div>\r\n                    </Box>\r\n                    {/* items */}\r\n                  <div className=\"container p-2 m-2 shadow-lg rounded bg-gray\">\r\n                    <Box align=\"center\"\r\n                      dangerouslySetInlineStyle={{\r\n                          __style: {\r\n                              backgroundColor: 'white'\r\n                          }\r\n                      }}\r\n                      shape=\"rounded\"\r\n                      wrap\r\n                      display=\"flex\"\r\n                      justifyContent=\"around\"\r\n                    >\r\n                        {items.map(item => (\r\n                          <Box paddingY={4} margin={2} width={200} key={item._id}>                       \r\n                            <div onClick={() => this.handleDetailsSubmit(item._id)} title=\"See Details\">\r\n                             <ItemModalDetails  \r\n                                itemDetails={itemDetails}\r\n                                                                    \r\n                              />\r\n                            </div>\r\n                            <Card\r\n                              image={\r\n                                <Box height={80} width={80}>\r\n                                  <Image\r\n                                    fit=\"cover\"\r\n                                    alt=\"Department\"\r\n                                    naturalHeight={1}\r\n                                    naturalWidth={1}\r\n                                    src={item.thumbnail}                                  \r\n                                  />\r\n                                 \r\n                                </Box>\r\n                              }\r\n                            >\r\n                              <Box\r\n                                display=\"flex\"\r\n                                alignItems=\"center\"\r\n                                justifyContent=\"center\"\r\n                                direction=\"column\"\r\n                              >\r\n                                <Box marginBottom={2}>\r\n                                  <Text bold size=\"sm\">\r\n                                    {shortText(item.name)}\r\n                                  </Text>\r\n                                </Box>\r\n                                <Text size=\"sm\">{shortTextDescp(item.description)}</Text>\r\n                                <Text color=\"orchid\">${item.price}</Text>\r\n                                <Box marginTop={2}>\r\n                                  <Text size=\"sm\">\r\n                                    <Button size=\"sm\" onClick={() => this.props.addToCart(item)}\r\n                                    color=\"blue\" text=\"Add to Cart\" />\r\n                                  </Text>\r\n                                </Box>\r\n                              </Box>\r\n                            </Card>\r\n                          </Box>                        \r\n                        ))}\r\n                    </Box>\r\n                  </div>\r\n                </Box>\r\n                {/* Store Department List */}\r\n              \r\n            </Box>\r\n          </>\r\n        )\r\n    }             \r\n}\r\n\r\nexport default SeeDeptItems;","import React from 'react';\r\nimport './Items.css';\r\nimport SeeDeptItems from './SeeDeptItems';\r\nimport SeeCartItems from './SeeCartItems';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Button, Column, Text } from 'gestalt';\r\nimport { calculateTotalItems, setCart, getCart} from '../utils';\r\n// import Navbar from '../components/Navbar';\r\n// import DeptMenu from './DeptMenu';\r\n\r\n\r\n\r\nclass Items extends React.Component {\r\n  state = {\r\n      items: [],\r\n      department: '',\r\n      cartItems: [],\r\n      itemDeptId: '',\r\n      itemsSearched: [],\r\n      cartItemsLength: 0,\r\n      displayingCart: false,\r\n      displayBooks: true\r\n      \r\n  }\r\n\r\n  displayingCartItems = () => {    \r\n    this.setState({displayingCart: false })      \r\n  };\r\n  \r\n  addToCart = item => {\r\n    const alreadyInCartToDel = this.state.cartItems.find(allItems => allItems._id === item._id);\r\n    console.log(\"THIS IS ALREADY IN CART\", alreadyInCartToDel);\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n      if (alreadyInCart === -1) {\r\n          const updatedItems = this.state.cartItems.concat({\r\n          ...item,\r\n          quantity: 1\r\n          });\r\n          this.setState({cartItems: updatedItems }, () => setCart(updatedItems));         \r\n      } else {\r\n          const updatedItems = [...this.state.cartItems];\r\n          updatedItems[alreadyInCart].quantity += 1;\r\n          this.setState({cartItems: updatedItems, cartItemsLength: this.state.cartItems.length },() => setCart(updatedItems));        \r\n      }\r\n  };\r\n\r\n  deleteItemsFromCart = itemToDeleteId => {\r\n    const filteredItems = this.state.cartItems.filter(\r\n        iitem => iitem._id !== itemToDeleteId\r\n    );\r\n    this.setState({ cartItems: filteredItems, displayingCart: false }, () => setCart(filteredItems));\r\n};\r\n\r\n  \r\n\r\n  componentDidMount() {    \r\n    this.setState({displayingCart: true,  cartItems: getCart()}) \r\n    this.changeDeptIdState()     \r\n  }\r\n\r\n  changeDeptIdState = () => { \r\n    // console.log(\"THIS IS PROPS FROM ITEMS.JS\", this.props)   \r\n    this.setState({itemDeptId: this.props.match.params.departmentId})\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const { displayingCart, itemDeptId, itemsSearched, cartItems } = this.state\r\n\r\n    return (\r\n      <>\r\n        { displayingCart === true ? <DeptMenu cartItems={cartItems} displayingCartItems={this.displayingCartItems}/> : []}\r\n          <div>\r\n            {/* <Navbar itemDeptId={itemDeptId}/>        */}\r\n            {displayingCart ? <SeeDeptItems itemDeptId={itemDeptId} displayingCartItems={this.displayingCartItems}  addToCart={this.addToCart} itemsSearched={itemsSearched}\r\n            />  : <SeeCartItems deleteItemsFromCart={this.deleteItemsFromCart}/>}          \r\n          </div>\r\n      </>\r\n    );      \r\n  }\r\n}; \r\nconst DeptMenu = ({cartItems, displayingCartItems}) => (\r\n  \r\n    <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n    <Column span={2}>\r\n      <Box>\r\n        <Text color=\"white\"></Text>\r\n      </Box>\r\n    </Column>\r\n              \r\n    <div className=\"lineitems\">\r\n      <Link to={`/${\"5dcf94e2dc3bcd3de0016978\"}`}> \r\n          <div >\r\n              <p>Automotive</p>\r\n          </div>\r\n      </Link>\r\n    </div>       \r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n          <div >                        \r\n              <p>Books</p> \r\n          </div>                     \r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n          <div>                      \r\n              <p>Electronics</p>\r\n          </div>\r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n          <div >                     \r\n              <p>Fashion</p>\r\n          </div>                        \r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n          <div >                        \r\n              <p>Home</p>                      \r\n          </div>\r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n          <div>                     \r\n              <p>Sports Outdoor</p>{\" \"}\r\n          </div>                        \r\n      </Link>\r\n    </div>           \r\n    <div className=\"lineitems\">\r\n      <Box marginLeft={1} marginRightt={-1} marginTop={3} paddingLeft={0} paddingRight={0}>\r\n        {/* User Cart Heading */}\r\n        <Button size=\"sm\" onClick={displayingCartItems}\r\n            color=\"blue\" text=\"View Cart\"\r\n        />\r\n      </Box>\r\n        <p>{\" \"}{calculateTotalItems(cartItems)}{\" \"}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n    </div> \r\n  </Box>      \r\n)\r\n\r\nexport default Items;","import React from 'react';\r\nimport './Items.css';\r\nimport SeeDeptItems from './SeeDeptItems';\r\nimport SeeCartItems from './SeeCartItems';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Button, Column, Text } from 'gestalt';\r\nimport { calculateTotalItems, setCart, getCart} from '../utils';\r\n// import Navbar from '../components/Navbar';\r\n// import DeptMenu from './DeptMenu';\r\n\r\n\r\n\r\nclass Items extends React.Component {\r\n  state = {\r\n      items: [],\r\n      department: '',\r\n      cartItems: [],\r\n      itemDeptId: '',\r\n      itemsSearched: [],\r\n      cartItemsLength: 0,\r\n      displayingCart: false,\r\n      displayBooks: true\r\n      \r\n  }\r\n\r\n  displayingCartItems = () => {    \r\n    this.setState({displayingCart: false })      \r\n  };\r\n  \r\n  addToCart = item => {\r\n    const alreadyInCartToDel = this.state.cartItems.find(allItems => allItems._id === item._id);\r\n    console.log(\"THIS IS ALREADY IN CART\", alreadyInCartToDel);\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n      if (alreadyInCart === -1) {\r\n          const updatedItems = this.state.cartItems.concat({\r\n          ...item,\r\n          quantity: 1\r\n          });\r\n          this.setState({cartItems: updatedItems }, () => setCart(updatedItems));         \r\n      } else {\r\n          const updatedItems = [...this.state.cartItems];\r\n          updatedItems[alreadyInCart].quantity += 1;\r\n          this.setState({cartItems: updatedItems, cartItemsLength: this.state.cartItems.length },() => setCart(updatedItems));        \r\n      }\r\n  };\r\n\r\n  deleteItemsFromCart = itemToDeleteId => {\r\n    const filteredItems = this.state.cartItems.filter(\r\n        iitem => iitem._id !== itemToDeleteId\r\n    );\r\n    this.setState({ cartItems: filteredItems, displayingCart: false }, () => setCart(filteredItems));\r\n};\r\n\r\n  \r\n\r\n  componentDidMount() {    \r\n    this.setState({displayingCart: true,  cartItems: getCart()}) \r\n    this.changeDeptIdState()     \r\n  }\r\n\r\n  changeDeptIdState = () => { \r\n    // console.log(\"THIS IS PROPS FROM ITEMS.JS\", this.props)   \r\n    this.setState({itemDeptId: this.props.match.params.departmentId})\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const { displayingCart, itemDeptId, itemsSearched, cartItems } = this.state\r\n\r\n    return (\r\n      <>\r\n        { displayingCart === true ? <DeptMenu cartItems={cartItems} displayingCartItems={this.displayingCartItems}/> : []}\r\n          <div>\r\n            {/* <Navbar itemDeptId={itemDeptId}/>        */}\r\n            {displayingCart ? <SeeDeptItems itemDeptId={itemDeptId} displayingCartItems={this.displayingCartItems}  addToCart={this.addToCart} itemsSearched={itemsSearched}\r\n            />  : <SeeCartItems deleteItemsFromCart={this.deleteItemsFromCart}/>}          \r\n          </div>\r\n      </>\r\n    );      \r\n  }\r\n}; \r\nconst DeptMenu = ({cartItems, displayingCartItems}) => (\r\n  \r\n    <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n    <Column span={2}>\r\n      <Box>\r\n        <Text color=\"white\"></Text>\r\n      </Box>\r\n    </Column>\r\n              \r\n    <div className=\"lineitems\">\r\n      <Link to={`/${\"5dcf94e2dc3bcd3de0016978\"}`}> \r\n          <div >\r\n              <p>Automotive</p>\r\n          </div>\r\n      </Link>\r\n    </div>       \r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n          <div >                        \r\n              <p>Books</p> \r\n          </div>                     \r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n          <div>                      \r\n              <p>Electronics</p>\r\n          </div>\r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n          <div >                     \r\n              <p>Fashion</p>\r\n          </div>                        \r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n          <div >                        \r\n              <p>Home</p>                      \r\n          </div>\r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n          <div>                     \r\n              <p>Sports Outdoor</p>{\" \"}\r\n          </div>                        \r\n      </Link>\r\n    </div>           \r\n    <div className=\"lineitems\">\r\n      <Box marginLeft={1} marginRightt={-1} marginTop={3} paddingLeft={0} paddingRight={0}>\r\n        {/* User Cart Heading */}\r\n        <Button size=\"sm\" onClick={displayingCartItems}\r\n            color=\"blue\" text=\"View Cart\"\r\n        />\r\n      </Box>\r\n        <p>{\" \"}{calculateTotalItems(cartItems)}{\" \"}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n    </div> \r\n  </Box>      \r\n)\r\n\r\nexport default Items;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport {getToken} from './utils';\r\nimport \"gestalt/dist/gestalt.css\";\r\n\r\nimport App from './components/App';\r\nimport Navbar from './components/Navbar'\r\nimport Signin from './components/Signin';\r\nimport Signup from './components/Signup';\r\nimport Checkout from './components/Checkout';\r\nimport Items from \"./components/Items\";\r\nimport Automotive from \"./components/Automotive\"\r\n// import SearchItems from \"./components/SearchItems\";\r\nimport SearchResult from \"./components/SearchResult\"\r\n\r\n\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        getToken() !== null ? \r\n            <Component {...props} /> : <Redirect to={{\r\n                pathname: '/signin',\r\n                state: { from: props.location }\r\n            }} />\r\n            \r\n    )} />\r\n)\r\n\r\nconst Root = () => (\r\n    <Router>\r\n        \r\n        <React.Fragment>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route component={App} exact path=\"/\" />             \r\n                <Route component={SearchResult} exact path=\"/searchresult\" />\r\n                <Route component={Signin} path=\"/signin\" />\r\n                <Route component={Signup} path=\"/signup\" />\r\n                <PrivateRoute component={Checkout} path=\"/checkout\" />                \r\n                <Route component={Items} path=\"/:departmentId\" />\r\n                <Route component={Automotive} path=\"/5dcf94e2dc3bcd3de0016978\" />\r\n            </Switch>           \r\n        </React.Fragment>\r\n    </Router>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'))\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}
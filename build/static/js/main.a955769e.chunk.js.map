{"version":3,"sources":["utils/index.js","components/Loader.js","components/SearchResult.js","components/App.js","components/Navbar.js","components/ToastMessage.js","components/Signin.js","components/Signup.js","components/Checkout.js","utils/API.js","components/SeeDeptItems.js","components/SeeCartItems.js","components/Items.js","registerServiceWorker.js","index.js"],"names":["calculatePrice","iitems","reduce","acc","iitem","quantity","price","toFixed","calculateAmount","Number","setCart","value","cartKey","localStorage","setItem","JSON","stringify","getCart","getItem","parse","clearCart","removeItem","getToken","tokenKey","setToken","clearToken","Loader","show","position","dangerouslySetInlineStyle","__style","bottom","left","transform","color","size","margin","apiURL","process","API_URL","strapi","Strapi","SearchResult","state","searchedResult","searchTermName","items","cartItems","addToCart","searchedItem","alreadyInCart","findIndex","_id","updatedItems","concat","setState","searchDepartments","a","request","data","query","toLowerCase","response","console","log","this","props","searchTerm","align","backgroundColor","shape","wrap","display","justifyContent","map","paddingY","width","key","image","height","Link","to","fit","alt","naturalHeight","naturalWidth","src","thumbnail","alignItems","direction","marginBottom","bold","name","description","marginTop","onClick","text","Component","hStyle","fontSize","fontFamily","App","departments","department","departmentId","searchedItems","loadingDepartments","redirect","searchTermState","renderRedirect","Redirect","handleChange","id","accessibilityLabel","onChange","placeholder","icon","style","url","Navbar","handleSignout","history","push","React","AuthNav","padding","borderRadius","NavLink","activeClassName","exact","className","inline","UnAuthNav","aria-hidden","title","withRouter","ToastMessage","message","fontWeight","Signin","username","password","toast","toastMessage","loading","event","persist","target","handleSubmit","preventDefault","isFormEmpty","showToast","login","jwt","redirectUser","path","setTimeout","textAlign","maxWidth","onSubmit","type","disabled","Signup","email","register","italic","_CheckoutForm","address","postalCode","city","confirmationEmailAddress","orderProcessing","modal","handleConfirmOrder","handleSubmitOrder","amount","stripe","createToken","token","createEntry","subject","Date","now","html","closeModal","length","Fragment","item","onReady","input","focus","ConfirmationModal","accessibilityCloseLabel","accessibilityModalLabel","heading","onDismiss","footer","marginRight","marginLeft","role","CheckoutForm","injectStripe","Checkout","apiKey","booksearch","axios","get","booksArray","itemsBooksArray","bookPrice","bookThumbnail","ShuffledDatas","shuffleData","defaultBooks","SeeDeptItems","search","books","displayingCart","loadingItems","bookDeptId","bookToSearch","Math","floor","random","searchForBooks","API","then","res","error","displayBooks","catch","err","i","bookId","String","etag","bookName","volumeInfo","bookDescription","bookAuthor","authors","bookPublishDate","publishedDate","imageLinks","saleInfo","saleability","retailPrice","num","str","slice","shuffle","itemsArray","itemsShuffled","splice","deleteItemsFromCart","itemToDeleteId","filteredItems","filter","itemDeptId","flexWrap","wash","displayingCartItems","SeeCartItems","alignSelf","iconColor","Items","itemsSearched","changeDeptIdState","match","params","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","PrivateRoute","component","rest","Route","render","pathname","from","ReactDOM","Switch","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a955769e.chunk.js","sourcesContent":["const CART_KEY = 'cart';\r\nconst TOKEN_KEY = 'jwt';\r\n\r\nexport const calculatePrice = iitems => {\r\n    return `$${iitems\r\n      .reduce((acc, iitem) => acc + iitem.quantity * iitem.price, 0)\r\n      .toFixed(2)}`;\r\n};\r\n\r\nexport const calculateAmount = iitems => {\r\n  return Number(iitems\r\n      .reduce((acc, iitem) => acc + iitem.quantity * iitem.price, 0)\r\n      .toFixed(2));\r\n  \r\n};\r\n\r\n/* Cart */\r\nexport const setCart = (value, cartKey = CART_KEY) => {\r\n    if (localStorage) {\r\n        localStorage.setItem(cartKey, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const getCart = (cartKey = CART_KEY) => {\r\n    if (localStorage && localStorage.getItem(cartKey)) {\r\n        return JSON.parse(localStorage.getItem(cartKey));\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const clearCart = (cartKey = CART_KEY) => {\r\n    if (localStorage) {\r\n      localStorage.removeItem(cartKey);\r\n    }\r\n  };\r\n\r\n/* Auth */\r\nexport const getToken = (tokenKey = TOKEN_KEY) => {\r\n    if (localStorage && localStorage.getItem(tokenKey)) {\r\n      return JSON.parse(localStorage.getItem(tokenKey));\r\n    }\r\n    return null;\r\n  };\r\n\r\nexport const setToken = (value, tokenKey = TOKEN_KEY) => {\r\n    if (localStorage) {\r\n        localStorage.setItem(tokenKey, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const clearToken = (tokenKey = TOKEN_KEY) => {\r\n    if (localStorage) {\r\n      localStorage.removeItem(tokenKey);\r\n    }\r\n  };\r\n","import React from 'react';\r\nimport { GridLoader } from 'react-spinners'\r\nimport {Box} from 'gestalt';\r\n\r\nconst Loader = ({ show }) =>\r\n  show && (\r\n    <Box\r\n      position=\"fixed\"\r\n      dangerouslySetInlineStyle={{\r\n        __style: {\r\n          bottom: 300,\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\"\r\n        }\r\n      }}\r\n    >\r\n      <GridLoader color=\"darkorange\" size={25} margin=\"3px\" />\r\n    </Box>\r\n  );\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\n//prettier ignore\r\nimport { Box, Card, Image, Text, Button } from 'gestalt';\r\nimport {Link} from 'react-router-dom';\r\nimport { setCart, getCart } from '../utils';\r\n// import Loader from './Loader';\r\nimport './App.css';\r\n// import searchedItems from './SearchItems';\r\n\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\n\r\n\r\n\r\nclass SearchResult extends Component {\r\n  state = {\r\n    searchedResult: [],\r\n    searchTermName: '',    \r\n    // loadingItems: true,\r\n    items: [],  \r\n    cartItems: []\r\n  \r\n  };\r\n \r\n\r\n  addToCart = searchedItem => {\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === searchedItem._id);\r\n    if (alreadyInCart === -1) {\r\n      const updatedItems = this.state.cartItems.concat({\r\n        ...searchedItem,\r\n        quantity: 1\r\n      });\r\n      this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n    } else {\r\n      const updatedItems = [...this.state.cartItems];\r\n      updatedItems[alreadyInCart].quantity += 1;\r\n      this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n\r\n    }\r\n\r\n  };\r\n\r\n  searchDepartments = async () => {   \r\n    // console.log(this.state.searchTerm)\r\n    const response = await strapi.request('POST', '/graphql', {\r\n      data: {\r\n        query: `query {\r\n         items(where: {\r\n            name_contains: \"${this.state.searchTermName.toLowerCase()}\"\r\n          }) {\r\n            _id\r\n            name\r\n            description\r\n            thumbnail                       \r\n            price\r\n            department {\r\n              _id\r\n              name\r\n            }\r\n          }\r\n        }`\r\n      }\r\n    });      \r\n    this.setState({\r\n      searchedResult: response.data.items,\r\n      cartItems: getCart()});\r\n    console.log(this.state.searchedResult);\r\n    \r\n  }\r\n\r\n  \r\n  \r\n  componentDidMount() {     \r\n    this.setState({searchTermName: this.props.searchTerm})\r\n    console.log(\"THIS IS SEARCHED ITEMS NAME\",  this.state.searchTermName);   \r\n    this.searchDepartments();\r\n   \r\n  }\r\n  \r\n\r\n  render() {\r\n    const { searchedResult } = this.state;\r\n\r\n    return (      \r\n      <Box align=\"center\">\r\n        <Box \r\n          dangerouslySetInlineStyle={{\r\n            __style: {\r\n              backgroundColor: 'white'\r\n            }\r\n          }}\r\n          shape=\"rounded\"\r\n          wrap\r\n          display=\"flex\"\r\n          justifyContent=\"around\"\r\n        >\r\n          {searchedResult.map(searchedItem => (\r\n            <Box paddingY={4} margin={2} width={200} key={searchedItem._id}>\r\n              <Card\r\n                image={\r\n                  <Box height={200} width={200}>\r\n                    <Link to={`/${searchedItem._id}`}>\r\n                    <Image\r\n                      fit=\"cover\"\r\n                      alt=\"Department\"\r\n                      naturalHeight={1}\r\n                      naturalWidth={1}\r\n                      src={searchedItem.thumbnail}                   \r\n             \r\n                    />\r\n                    </Link>\r\n                  </Box>\r\n                }\r\n              >\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                  direction=\"column\"\r\n                >\r\n                  <Box marginBottom={2}>\r\n                    <Text bold size=\"md\">\r\n                      {searchedItem.name}\r\n                    </Text>\r\n                  </Box>\r\n                    <Text>{searchedItem.description}</Text>\r\n                    <Text color=\"orchid\">${searchedItem.price}</Text>\r\n                  <Box marginTop={2}>\r\n                    <Text bold size=\"xl\">\r\n                      <Button onClick={() => this.addToCart(searchedItem)}\r\n                      color=\"blue\" text=\"Add to Cart\" />\r\n                    </Text>                   \r\n                  </Box>\r\n                </Box>               \r\n              </Card>\r\n            </Box>\r\n          ))}\r\n        </Box>       \r\n      </Box>\r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;","import React, { Component } from 'react';\n//prettier ignore\nimport {Container, Box, Card, Image, Text, SearchField, Icon } from 'gestalt';\nimport {Link, Redirect} from 'react-router-dom';\nimport Loader from './Loader';\nimport SearchResult from './SearchResult';\n\nimport './App.css';\n// import Items from './Items';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\n\n\nconst hStyle = {\n  fontSize: '30px',\n  fontFamily: 'calibri light',\n  \n};\n\nclass App extends Component {\n  state = {\n   departments: [],\n   department: [],\n   departmentId: [],    \n   cartItems: [],\n   items: [],\n   searchedItems:[],\n   searchTerm: '',   \n    loadingDepartments: true,\n    redirect: false,\n    searchTermState: false\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {          \n      return <Redirect to='/SearchResult' />\n    }\n  }\n\n  \n\n  // Connect Graphql using Strapi SDK\n  async componentDidMount() {\n    try {\n\n      const response = await strapi.request(\"POST\", \"/graphql\", {\n        data: {\n          query: `query {\n           departments {\n              _id\n              name\n              description\n              image {\n                url\n              }\n            }\n          }`\n        }\n      });\n      // console.log(response);\n      this.setState({departments: response.data.departments, loadingDepartments: false });\n    } catch (err) {\n      console.log(err);\n      this.setState({ loadingDepartments: false });\n    }\n  }\n\n  handleChange = ({value}) => {\n    this.setState({ searchTerm: value }, () => this.searchDepartments());\n  };\n\n  \n  searchDepartments = async () => {   \n    // console.log(this.state.searchTerm)\n    const response = await strapi.request('POST', '/graphql', {\n      data: {\n        query: `query {\n         items(where: {\n            name_contains: \"${this.state.searchTerm.toLowerCase()}\"\n          }) {\n            _id\n            name\n            description\n            thumbnail                       \n            price\n            department {\n              _id\n              name\n            }\n          }\n        }`\n      }\n    });\n    this.setState({\n      searchedItems: response.data.items,     \n      loadingDepartments: false,\n      redirect: true,\n      searchTermState: true\n    });\n    \n  }\n\n  render() {\n    const { searchTerm, searchTermState, loadingDepartments, departments } = this.state;\n    \n    return (\n      <Container>\n        {/* {departments Search Field */}\n        <Box display=\"flex\" justifyContent=\"center\" marginTop={4}>\n          <SearchField \n            id=\"searchField\"\n            accessibilityLabel=\"Departments Search Field\"\n            onChange={this.handleChange}\n            value={searchTerm}\n            placeholder=\"Search Departments\"\n          />\n          <Box margin={3}>            \n            <Icon \n              icon=\"filter\"\n              color={searchTerm ? 'orange' : 'gray'}\n              size={20}\n              accessibilityLabel=\"Filter\"\n            />\n          </Box>\n        </Box>\n        {/*departments Section */}\n        <Box display=\"flex\" justifyContent=\"center\" marginBottom={2}>\n          {/*departments Header */}\n          <div style={hStyle} color=\"black\" >        \n            Shop by Departments      \n          </div>\n        </Box>\n     \n        {/*departments */}\n        <Box \n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: 'white'\n            }\n          }}\n          shape=\"rounded\"\n          wrap\n          display=\"flex\"\n          justifyContent=\"around\"\n        >\n          {/* Display Store Departments name on Home Page */}\n          {departments.map(department => (\n            <Box paddingY={4} margin={2} width={200} key={department._id}>\n              <Card\n                image={\n                  <Box height={200} width={200}>\n                    <Link to={`/${department._id}`}>\n                    <Image\n                      fit=\"cover\"\n                      alt=\"Department\"\n                      naturalHeight={1}\n                      naturalWidth={1}                     \n                      src={`${apiURL}${department.image.url}`}\n                    />\n                    </Link>\n                  </Box>\n                }\n              >\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  direction=\"column\"\n                >\n                  <Text bold size=\"md\">\n                      {department.name}\n                  </Text>\n                    <Text>{department.description}</Text>\n                </Box>\n              </Card>\n            </Box>\n          ))}\n        </Box>\n        {/* <Spinner show={loadingDepartments} accessibilityLabel=\"Loading Spinner\" /> */}\n       <Loader show={loadingDepartments} />\n       {/* {loadingDepartments && <Loader />} */}\n      <div>   \n      {searchTermState ? <SearchResult searchTerm={searchTerm}/> : this.state.searchTerm === null && <SearchResult searchTerm={this.state.searchTerm}/>}\n       {this.renderRedirect()}\n      </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Box, Image, Button } from \"gestalt\";\nimport { getToken, clearToken, clearCart } from \"../utils\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport \"./Navbar.css\";\n// import SearchItems from \"./SearchItems\";\n\n\n\nclass Navbar extends React.Component {\n    handleSignout = () => {\n        clearToken();\n        clearCart();\n        this.props.history.push(\"/\");\n    };\n\n    render() {\n        return getToken() !== null ? \n        <AuthNav handleSignout={this.handleSignout} /> : <UnAuthNav />;        \n    }\n};\n\nconst AuthNav = ({ handleSignout }) => (\n    <Box\n    display=\"flex\"\n    alignItems=\"center\"\n    justifyContent=\"around\"\n    height={50}\n    color=\"blue\"\n    padding={1}\n    // shape=\"roundedBottom\"\n    borderRadius={32}\n  >\n    {/* Title and Logo */}\n    <NavLink activeClassName=\"active\" exact to=\"/\">\n      <Box display=\"flex\" alignItems=\"center\">\n      <Box marginTop={12} margin={2} height={90} width={180}>\n          <Image\n            alt=\"FeMMit Logo\"\n            naturalHeight={1}\n            naturalWidth={1}\n            src=\"./icons/logo-in.png\"\n          />\n        </Box>        \n      </Box>\n    </NavLink>   \n\n    \n    {/* Signout Button */}\n    <div className=\"signout-spacing\">\n      <Button\n        onClick={handleSignout}\n        color=\"transparent\"\n        text=\"Sign Out\"\n        inline\n        size=\"md\"\n      />\n    </div>\n    {/* Checkout Link */}\n    <NavLink activeClassName=\"active\" to=\"/checkout\">\n      <div className=\"checkout-spacing\">\n        <i className=\"fa fa-shopping-cart\">Checkout </i> \n      </div>\n    </NavLink>    \n\n    \n  </Box>\n); \n\nconst UnAuthNav = () => (\n  <Box\n    display=\"flex\" \n    alignItems=\"center\"\n    justifyContent=\"around\"\n    height={60} \n    color=\"gray\" \n    padding={1} \n    shape=\"roundedBottom\"\n          \n  >\n    {/* Title and logo*/}\n    <NavLink activeClassName=\"active\" exact to=\"/\">\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box marginTop={12} margin={2} height={90} width={180}>\n          <Image\n            alt=\"FeMMit Logo\"\n            naturalHeight={1}\n            naturalWidth={1}\n            src=\"./icons/logo.png\"\n          />\n        </Box>           \n      </Box>\n    </NavLink>\n    \n    {/* Sign In Link*/}\n    <NavLink activeClassName=\"active\" to=\"/signin\">\n        <div className=\"signin-spacing\">\n        <i className=\"fa fa-sign-in\" aria-hidden=\"true\" title=\"Sign In\"></i>\n            \n        </div>\n    </NavLink>\n    \n    {/* Sign Up Link*/}\n    <NavLink activeClassName=\"active\" to=\"/signup\">\n        <div className=\"signup-spacing\">\n            <span>Get Started</span>\n        </div>\n    </NavLink>\n  </Box>    \n);\n\nexport default withRouter(Navbar);\n","import React from 'react';\r\nimport {Box, Toast} from 'gestalt';\r\n\r\nconst ToastMessage = ({ show, message }) =>\r\n    show && (\r\n        <Box\r\n            dangerouslySetInlineStyle={{\r\n                __style: {\r\n                    bottom: 330,\r\n                    left: '50%',\r\n                    transform: \"translatex(-50%)\"\r\n                }\r\n            }}\r\n            position=\"fixed\"\r\n            >\r\n                <Toast color=\"orange\" text={ message } />\r\n        </Box>\r\n    );\r\n\r\nexport default ToastMessage;\r\n","import React from  'react'\nimport { Container, Box, Button, TextField} from 'gestalt'\nimport {setToken} from '../utils';\nimport ToastMessage from './ToastMessage';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\n\nconst hStyle = {\n    fontSize: '30px',\n    fontFamily: 'calibri light',\n    fontWeight: 'bold',\n    color: 'black',\n    \n  };\n\nclass Signin extends React.Component {\n    state = {\n        username: '',        \n        password: '',\n        toast: false,\n        toastMessage: '',\n        loading: false\n    }\n\n    handleChange = ({ event, value }) => {\n        event.persist();\n        this.setState({[event.target.name]: value});\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { username, password } = this.state;\n\n        if (this.isFormEmpty(this.state)) {\n            this.showToast(\"Fill in all fields\");\n            return;\n        }\n        \n        //Sign up user\n        try {\n            this.setState({ loading: true});           \n            const response = await strapi.login(username, password);\n            this.setState({ loading: false});\n            setToken(response.jwt);            \n            this.redirectUser('/');\n        }catch (err) {\n            this.setState({ loading: false});\n            this.showToast(err.message);\n        }\n    };\n\n    redirectUser = path => this.props.history.push(path);\n\n    isFormEmpty = ({username, password}) => {\n        return !username || !password;\n    };\n\n    showToast = toastMessage => {\n        this.setState({ toast: true, toastMessage });\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n    }\n\n    render() {\n        const { toastMessage, toast, loading } = this.state;\n\n        return (\n            <Container>\n                <Box\n                    dangerouslySetInlineStyle={{\n                        __style: {\n                        //   backgroundColor: 'white',\n                          \n                          \n                        }\n                      }}\n                    margin={4}\n                    padding={4}\n                    shape=\"rounded\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    width={550}\n                >\n                    {/* Sign in Form */}\n                    <form className=\"container max-w-md mx-auto p-8 m-2 shadow-lg rounded bg-gray\"\n                    style={{\n                        display: 'inlineBlock',\n                        textAlign: 'center',\n                        maxWidth: 450,\n                        height: 210,                        \n                        \n                        \n                    }}\n                    onSubmit={this.handleSubmit}                    \n                    >\n                        {/* Sign in Form Heading */}\n                        <Box\n                            marginBottom={2}\n                            display=\"flex\"\n                            direction=\"column\"\n                            alignItems='center'\n                        >\n                            <div style={hStyle} color=\"black\" >Welcome Back!</div>\n                                                     \n                        </Box>\n                        {/* Username Input */}\n                        <TextField\n                            id=\"username\"\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            onChange={this.handleChange}\n                        />                   \n                        {/* Password Input */}\n                        <TextField\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChange}\n                        />\n                        <Button\n                            inline \n                            disabled={loading} \n                            color=\"blue\" \n                            text=\"Submit\" \n                            type=\"submit\" \n                        />\n                    </form>\n                </Box>\n                <ToastMessage show={toast} message={toastMessage}/>\n            </Container>        \n        );\n    }\n}\n\nexport default Signin;","import React from  'react'\nimport { Container, Box, Button, Text, TextField} from 'gestalt'\nimport {setToken} from '../utils';\nimport ToastMessage from './ToastMessage';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\nconst hStyle = {\n    fontSize: '30px',\n    fontFamily: 'calibri light',\n    fontWeight: 'bold',\n    color: 'black',\n  };\n\nclass Signup extends React.Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        toast: false,\n        toastMessage: '',\n        loading: false\n    }\n\n    handleChange = ({ event, value }) => {\n        event.persist();\n        this.setState({[event.target.name]: value});\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { username, email, password } = this.state;\n\n        if (this.isFormEmpty(this.state)) {\n            this.showToast(\"Fill in all fields\");\n            return;\n        }\n        \n        //Sign up user\n        try {\n            this.setState({ loading: true});           \n            const response = await strapi.register(username, email, password);\n            this.setState({ loading: false});\n            setToken(response.jwt);            \n            this.redirectUser('/');\n        }catch (err) {\n            this.setState({ loading: false});\n            this.showToast(err.message);\n        }\n    };\n\n    redirectUser = path => this.props.history.push(path);\n\n    isFormEmpty = ({username, email, password}) => {\n        return !username || !email || !password;\n    };\n\n    showToast = toastMessage => {\n        this.setState({ toast: true, toastMessage });\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n    }\n\n    render() {\n        const { toastMessage, toast, loading } = this.state;\n\n        return (\n            <Container>\n                <Box\n                    dangerouslySetInlineStyle={{\n                        __style: {\n                        //   backgroundColor: 'white'\n                          \n                        }\n                      }}\n                    margin={4}\n                    padding={4}\n                    shape=\"rounded\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    width={550}\n                    \n                >\n                    {/* Sign Up Form */}\n                    <form className=\"container max-w-md mx-auto p-8 m-2 shadow-lg rounded bg-gray\"\n                    style={{\n                        display: 'inlineBlock',\n                        textAlign: 'center',\n                        maxWidth: 450\n                    }}\n                    onSubmit={this.handleSubmit}                    \n                    >\n                        {/* Sign Up Form Heading */}\n                        <Box\n                            marginBottom={2}\n                            display=\"flex\"\n                            direction=\"column\"\n                            alignItems='center'\n                        >\n                            <div style={hStyle} color=\"black\" >Let's Get Started</div>                            \n                            <Text italic color=\"orchid\">\n                                Sign up to place your order!\n                            </Text>\n                        </Box>\n                        {/* Username Input */}\n                        <TextField\n                            id=\"username\"\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            onChange={this.handleChange}\n                            className=\"border m-1 p-1 rounded\"\n                        />\n                        {/* Email Address Input */}\n                        <TextField\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email Address\"\n                            onChange={this.handleChange}\n                            className=\"border m-1 p-1 rounded\"\n                        />\n                        {/* Password Input */}\n                        <TextField \n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChange}\n                            className=\"border m-1 p-1 rounded\"\n                        />\n                        <Button\n                            inline \n                            disabled={loading} \n                            color=\"blue\" \n                            text=\"Submit\" \n                            type=\"submit\"\n                            className=\"bg-orange m-1 p-1 rounded\"\n                        />\n                    </form>\n                </Box>\n                <ToastMessage show={toast} message={toastMessage}/>\n            </Container>        \n        );\n    }\n}\n\nexport default Signup;","import React from  'react'\n//prettier ignore\nimport { Container, Box, Button, Heading, Text, TextField, Modal, Spinner } from 'gestalt'\n//prettier ignore\nimport { Elements, StripeProvider, CardElement, injectStripe} from 'react-stripe-elements';\nimport ToastMessage from './ToastMessage';\nimport {getCart, calculatePrice, clearCart, calculateAmount} from '../utils';\nimport { withRouter } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\nclass _CheckoutForm extends React.Component {\n    state = {\n        cartItems: [],\n        address: \"\",\n        postalCode: \"\",\n        city: \"\",\n        confirmationEmailAddress: \"\",\n        toast: false,\n        toastMessage: \"\",\n        orderProcessing: false,\n        modal: false\n    }\n\n    componentDidMount() {\n        this.setState({ cartItems: getCart()});\n    }\n\n    handleChange = ({ event, value }) => {\n        event.persist();\n        this.setState({[event.target.name]: value});\n    };\n\n    handleConfirmOrder = async event => {\n        event.preventDefault();    \n\n        if (this.isFormEmpty(this.state)) {\n            this.showToast(\"Fill in all fields\");\n            return;\n        }\n\n        this.setState({ modal: true });\n    };\n\n    handleSubmitOrder = async () => {\n        const { cartItems, city, address, postalCode, confirmationEmailAddress } = this.state;\n\n        const amount = calculateAmount(cartItems);\n        //process order\n        this.setState({ orderProcessing: true });\n        let token;\n        try {\n            // create stripe token\n            const response = await this.props.stripe.createToken();\n            token = response.token.id;\n            //create order with stripe sdk (make request to backend)\n                await strapi.createEntry('orders', {\n                    amount,\n                    items: cartItems,\n                    city,\n                    postalCode,\n                    address,\n                    token              \n                });\n                await strapi.request(\"POST\", \"/email\", {\n                    data: {\n                        to: confirmationEmailAddress,\n                        subject: `Order Confirmation - FeMMit ${new Date(Date.now())}`,\n                        text: \"Your order has been processed\",\n                        html: \"<bold>Expect your order to arrive in 2-3 shipping days</bold>\"\n                    }\n                });\n                //set orderProcessing - false, set modal - false\n                this.setState({ orderProcessing: false, modal: false });\n                // clear user cart of items\n                clearCart();\n                // show success toast\n                this.showToast(\"Your order has been successfully submitted!\", true);\n            } catch (err) {\n                // set order processing - false, modal - false\n                this.setState({ orderProcessing: false, modal: false });\n                // show error toast\n                this.showToast(err.message);\n        }\n    };\n\n    isFormEmpty = ({address, postalCode, city, confirmationEmailAddress }) => {\n        return !address || !postalCode || !city || !confirmationEmailAddress;\n    };\n\n    showToast = (toastMessage, redirect = false) => {\n        this.setState({ toast: true, toastMessage });\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' },\n        // if true passed to 'redirect argument, redirect home\n            () => redirect && this.props.history.push('/')\n        ), 5000);\n    };\n\n    closeModal = () => this.setState({ modal: false });\n\n    render() {\n        //prettier ignore\n        const { toast, toastMessage, cartItems, modal, orderProcessing } = this.state;\n\n        return (\n            <Container>\n                <Box\n                    color=\"darkWash\"\n                    margin={4}\n                    padding={4}\n                    shape=\"rounded\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    direction=\"column\"\n                >\n                    {/* Checkout Form Heading */}                     \n                    <Heading color=\"midnight\">Checkout</Heading>\n                    {cartItems.length > 0 ? (\n                        <React.Fragment>\n                        {/* User cart */}\n                        <Box\n                            display=\"flex\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            direction=\"column\"\n                            marginTop={2}\n                            marginBottom={6}\n                        >\n                            <Text color=\"darkGray\" italic>\n                                {cartItems.length} items for Checkout</Text>\n                            <Box padding={2}>\n                                {cartItems.map(item => (\n                                    <Box key={item._id} padding={1}>\n                                    <Text color=\"midnight\">\n                                    {item.name} x {item.quantity} - $\n                                    {item.quantity * item.price}\n                                    </Text>\n                                </Box>\n                                ))}\n                            </Box>\n                            <Text bold>Total Amount: {calculatePrice(cartItems)}</Text>\n                        </Box>\n                        {/* Checkout Form */}\n                        <form \n                        style={{\n                            display: 'inlineBlock',\n                            textAlign: 'center',\n                            maxWidth: 450\n                        }}\n                        onSubmit={this.handleConfirmOrder}                    \n                        >                      \n                            {/* Shipping Address Input */}\n                            <TextField\n                                id=\"address\"\n                                type=\"text\"\n                                name=\"address\"\n                                placeholder=\"Shipping Address\"\n                                onChange={this.handleChange}\n                            />\n                            {/* Postal Code Address Input */}\n                            <TextField\n                                id=\"postalCode\"\n                                type=\"text\"\n                                name=\"postalCode\"\n                                placeholder=\"Postal Code\"\n                                onChange={this.handleChange}\n                            />\n                            {/* City Input */}\n                            <TextField\n                                id=\"city\"\n                                type=\"text\"\n                                name=\"city\"\n                                placeholder=\"City of Residence\"\n                                onChange={this.handleChange}\n                            />\n                            {/* Confirmation Email Address Input */}\n                            <TextField\n                                id=\"confirmationEmailAddress\"\n                                type=\"email\"\n                                name=\"confirmationEmailAddress\"\n                                placeholder=\"Confirmation Email Address\"\n                                onChange={this.handleChange}\n                            />\n                            {/* Credit Card Element */}\n                            <CardElement id=\"stripe__input\" onReady={input => input.focus()}\n                            />\n                            <button id=\"stripe__button\" type=\"submit\">\n                                Submit\n                            </button>\n                        </form>\n                        </React.Fragment>\n                ) : (\n                    // Default Text if No Items in Cart\n                    <Box color=\"darkWash\" shape=\"rounded\" padding={4}>\n                      <Heading align=\"center\" color=\"watermelon\" size=\"xs\">\n                        Your Cart is Empty\n                      </Heading>\n                      <Text align=\"center\" italic color=\"green\">\n                        Add some items!\n                      </Text>\n                    </Box>\n                  )}\n                </Box>\n                {/* Confirmation Modal */}\n                {modal && (\n                <ConfirmationModal\n                    orderProcessing={orderProcessing}\n                    cartItems={cartItems}\n                    closeModal={this.closeModal}\n                    handleSubmitOrder={this.handleSubmitOrder}\n                />\n                )}\n                <ToastMessage show={toast} message={toastMessage}/>\n            </Container>        \n        \n        );\n    }\n}\n\nconst ConfirmationModal = ({\n    orderProcessing,\n    cartItems,\n    closeModal,\n    handleSubmitOrder\n  }) => (\n    <Modal\n        accessibilityCloseLabel=\"close\"\n        accessibilityModalLabel=\"Confirm Your Order\"\n        heading=\"Confirm Your Order\"\n        onDismiss={closeModal}\n        footer={\n            <Box\n            display=\"flex\"\n            marginRight={-1}\n            marginLeft={-1}\n            justifyContent=\"center\"\n            >\n            <Box padding={1}>\n                <Button\n                size=\"lg\"\n                color=\"red\"\n                text=\"Submit\"\n                disabled={orderProcessing}\n                onClick={handleSubmitOrder}\n                />\n            </Box>\n            <Box padding={1}>\n                <Button\n                size=\"lg\"\n                text=\"Cancel\"\n                disabled={orderProcessing}\n                onClick={closeModal}\n                />\n            </Box>\n            </Box>\n        }\n        role=\"alertdialog\"\n        size=\"sm\"\n        >\n        {/* Order Summary */}\n        {!orderProcessing && (\n            <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n            padding={2}\n            color=\"lightWash\"\n            >\n            {cartItems.map(item => (\n                <Box key={item._id} padding={1}>\n                <Text size=\"lg\" color=\"red\">\n                    {item.name} x {item.quantity} - ${item.quantity * item.price}\n                </Text>\n                </Box>\n            ))}\n            <Box paddingY={2}>\n                <Text size=\"lg\" bold>\n                Total: {calculatePrice(cartItems)}\n                </Text>\n            </Box>\n            </Box>\n        )}\n  \n        {/* Order Processing Spinner */}\n        <Spinner\n            show={orderProcessing}\n            accessibilityLabel=\"Order Processing Spinner\"\n        />\n        {orderProcessing && (\n            <Text align=\"center\" italic>\n            Submitting Order...\n            </Text>\n        )}\n    </Modal>\n);\n\nconst CheckoutForm = withRouter(injectStripe(_CheckoutForm));\n\nconst Checkout = () => (\n    <StripeProvider apiKey=\"pk_test_x8yjxMCIGG0GwegNJCzILYWy00qrvPKmKA\">\n        <Elements>\n            <CheckoutForm />\n        </Elements>\n    </StripeProvider>\n)\n\nexport default Checkout;","import axios from \"axios\";\n\nconst BASEURL = process.env.REACT_APP_BASEURL\nconst APIKEY = process.env.REACT_APP_APIKEY\n// Export an object containing methods we'll use for accessing the Google Book API\n\nexport default { \n  search: function(booksearch) {\n    return axios.get(BASEURL + booksearch + APIKEY);\n  },\n  \n  searchId: function(keyId) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes/\" + keyId);\n  },\n \n};\n","import React from 'react';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport './Items.css';\r\nimport API from '../utils/API';\r\nimport Loader from './Loader';\r\n// prettier ignore\r\nimport { Box, Text, Image, Card, Button, Mask } from 'gestalt'\r\nimport { setCart, getCart} from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\nconst hStyle = {\r\n  fontSize: '30px',\r\n  fontFamily: 'calibri light',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nvar booksArray =[]\r\nvar itemsBooksArray = []\r\nvar bookPrice = \"\"\r\nvar bookThumbnail = \"\"\r\nvar ShuffledDatas = []\r\nvar shuffleData = []\r\n\r\nconst defaultBooks = [\"Wars of Law\", \"Among the Valiant\", \"Religion\", \"The Fall of Western Civilization\", \"Destruction of Black Civilization\", \"Sex in Antiquity\", \"Wars\", \"food\", \"School\", \"Country\", \"Music\", \"Friends\", \"Family\", \"Baby\", \"Politics\"]\r\nclass SeeDeptItems extends React.Component {\r\n    state = {\r\n        items: [],\r\n        department: '',\r\n        departmentId: '',\r\n        cartItems: [],\r\n        search: \"\",\r\n        books: [],\r\n        displayingCart: false,\r\n        loadingItems: true\r\n    }\r\n\r\n    \r\n    bookDeptId = () => {\r\n        // console.log(\"THIS IS BOOK DEPT ===>\", this.props.itemDeptId )\r\n        // console.log(\"THIS IS props.itemDeptId ==>\", this.props.itemDeptId) \r\n        let bookToSearch = defaultBooks[Math.floor(Math.random() * defaultBooks.length)];       \r\n        this.searchForBooks(bookToSearch);\r\n    }\r\n\r\n    searchForBooks = booksearch => {       \r\n        API.search(booksearch)        \r\n        .then(res => {                  \r\n          if(res.data.error ){\r\n            console.log(res.data.error)            \r\n          }else{           \r\n            booksArray = res.data.items;           \r\n            this.displayBooks();  \r\n          }\r\n        })          \r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n    displayBooks = () => {      \r\n      this.setState({ books: booksArray, department: \"Books\" })      \r\n\r\n      for (var i = 0;  i < booksArray.length; i++) { \r\n        let bookId = String(booksArray[i].etag)      \r\n        let bookName = String(booksArray[i].volumeInfo.title)\r\n        let bookDescription = String(booksArray[i].volumeInfo.description)\r\n        let bookAuthor = String(booksArray[i].volumeInfo.authors)\r\n        let bookPublishDate = String(booksArray[i].volumeInfo.publishedDate)\r\n        if (booksArray[i].volumeInfo.imageLinks == null) {\r\n          bookThumbnail = 'https://lmtrain.github.io/lm-images/assets/images/books5.jpg'         \r\n        }else{\r\n          bookThumbnail = String(booksArray[i].volumeInfo.imageLinks.thumbnail)   \r\n        }        \r\n       \r\n        if (booksArray[i].saleInfo.saleability === \"NOT_FOR_SALE\") {\r\n          bookPrice = Number(0.00)          \r\n        }else{\r\n          bookPrice = String(booksArray[i].saleInfo.retailPrice.amount)          \r\n        }\r\n        function truncateString(str, num) {    \r\n          if (str.length > num && num > 3) {\r\n                  return str.slice(0, (num - 3)) + '...';\r\n              } else if (str.length > num && num <= 3) {\r\n                  return str.slice(0, num) + '...';\r\n              } else {\r\n                  return str;\r\n          }\r\n        \r\n        }\r\n        let authorLabel = \" || Author : \"\r\n        let pulishedLabel = \" || Pulished Date : \"\r\n        bookDescription = truncateString(bookDescription, 180) + \"\\n\" + authorLabel + bookAuthor + \"\\n\" + pulishedLabel + bookPublishDate;\r\n\r\n        itemsBooksArray.push({\"_id\": bookId, \"name\": bookName, \"description\": bookDescription, \"thumbnail\": bookThumbnail, \"price\": bookPrice })\r\n      }     \r\n      this.setState({\r\n        items: itemsBooksArray,\r\n        loadingItems: false,      \r\n        cartItems: getCart()            \r\n    })        \r\n    }\r\n    \r\n\r\n    async componentDidMount() {        \r\n        if (this.props.itemDeptId === \"5dcf9519dc3bcd3de001697b\") {        \r\n        this.bookDeptId();       \r\n        } else\r\n        \r\n        try {       \r\n        const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    department(id: \"${this.props.itemDeptId}\") {\r\n                      _id\r\n                      name\r\n                      items {\r\n                        _id\r\n                        name\r\n                        description\r\n                        thumbnail                       \r\n                        price\r\n                      }    \r\n                    }\r\n                }`\r\n            }\r\n        });       \r\n        this.setState({\r\n            items: response.data.department.items,\r\n            department: response.data.department.name,\r\n            loadingItems: false,\r\n            cartItems: getCart()            \r\n        })        \r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n    this.shuffle() \r\n  }\r\n  shuffle = () => {\r\n    let itemsArray = [...this.state.items];\r\n    let itemsShuffled = [];    \r\n    for (var i = 0;  i < this.state.items.length; i++) {        \r\n          shuffleData = itemsArray.splice(Math.floor(Math.random()*itemsArray.length/2));        \r\n          itemsShuffled = [...itemsShuffled, ...shuffleData];\r\n        }   \r\n        ShuffledDatas.push(this.state.items);\r\n    // Set this.state.deals equal to the new deals array\r\n    this.setState({ items: itemsShuffled });\r\n    // itemsArray = [...this.state.deals];\r\n    // this.setState({Items: deals});\r\n    \r\n  };     \r\n    addToCart = item => {\r\n      const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n        if (alreadyInCart === -1) {\r\n            const updatedItems = this.state.cartItems.concat({\r\n            ...item,\r\n            quantity: 1\r\n            });\r\n            this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n            console.log(this.state.cartItems);\r\n        } else {\r\n            const updatedItems = [...this.state.cartItems];\r\n            updatedItems[alreadyInCart].quantity += 1;\r\n            this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n            console.log(this.state.cartItems);\r\n\r\n        }\r\n\r\n    };\r\n    \r\n\r\n    deleteItemsFromCart = itemToDeleteId => {\r\n        const filteredItems = this.state.cartItems.filter(\r\n            iitem => iitem._id !== itemToDeleteId\r\n        );\r\n        this.setState({ cartItems: filteredItems }, () => setCart(filteredItems));\r\n    };\r\n    \r\n    render() {\r\n        const { department, items, cartItems, loadingItems } = this.state;\r\n        \r\n        return (          \r\n            <Box\r\n                marginTop={4}\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                dangerouslySetInlineStyle={{\r\n                  __style: {\r\n                    flexWrap: 'wrap-reverse'\r\n                  }\r\n                }}\r\n            >\r\n                {/* items Section */}\r\n                <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n                    {/* items Heading */}\r\n                    <Box margin={2}>\r\n                        <div style={hStyle}>{department}</div>\r\n                    </Box>\r\n                    {/* items */}\r\n                    <Box\r\n                        dangerouslySetInlineStyle={{\r\n                            __style: {\r\n                                backgroundColor: 'white'\r\n                            }\r\n                        }}\r\n                        wrap\r\n                        shape=\"rounded\"\r\n                        display=\"flex\"\r\n                        justifyContent=\"center\"\r\n                        padding={4}\r\n                    >\r\n                        {items.map(item => (\r\n                            <Box paddingY={4} margin={2} width={210} key={item._id}>\r\n                            <Card\r\n                              image={\r\n                                <Box height={200} width={200}>\r\n                                  <Image\r\n                                    fit=\"cover\"\r\n                                    alt=\"Department\"\r\n                                    naturalHeight={1}\r\n                                    naturalWidth={1}\r\n                                    src={item.thumbnail}                                  \r\n                                  />\r\n                                </Box>\r\n                              }\r\n                            >\r\n                              <Box\r\n                                display=\"flex\"\r\n                                alignItems=\"center\"\r\n                                justifyContent=\"center\"\r\n                                direction=\"column\"\r\n                              >\r\n                                <Box marginBottom={2}>\r\n                                  <Text bold size=\"md\">\r\n                                    {item.name}\r\n                                  </Text>\r\n                                </Box>\r\n                                  <Text>{item.description}</Text>\r\n                                  <Text color=\"orchid\">${item.price}</Text>\r\n                                <Box marginTop={2}>\r\n                                  <Text bold size=\"xl\">\r\n                                    <Button onClick={() => this.addToCart(item)}\r\n                                    color=\"blue\" text=\"Add to Cart\" />\r\n                                  </Text>\r\n                                </Box>\r\n                              </Box>\r\n                            </Card>\r\n                          </Box>                        \r\n                        ))}\r\n                    </Box>\r\n                </Box>\r\n                {/* Store Department List */}\r\n                <React.Fragment>\r\n\r\n                <div className=\"lineitems\">\r\n                    \r\n                  <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n                      <div className=\"lineitems\">\r\n                          <p>Automotive</p>\r\n                      </div>\r\n                  </Link>\r\n\r\n                  <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n                      <div className=\"lineitems\">                        \r\n                          <p>Books</p> \r\n                      </div>                     \r\n                  </Link>\r\n\r\n                  <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n                      <div className=\"lineitems\">                      \r\n                          <p>Electronics</p>\r\n                      </div>\r\n                  </Link>\r\n\r\n                  <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n                      <div className=\"lineitems\">                     \r\n                          <p>Fashion</p>\r\n                      </div>                        \r\n                  </Link>\r\n\r\n                  <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n                      <div className=\"lineitems\">                        \r\n                          <p>Home</p>                      \r\n                      </div>\r\n                  </Link>\r\n\r\n                  <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n                      <div className=\"lineitems\">                     \r\n                          <p>Sports Outdoor</p>\r\n                      </div>                        \r\n                  </Link>\r\n              \r\n                </div>\r\n                </React.Fragment>\r\n                <Box marginTop={2} >\r\n                <Mask shape=\"rounded\" wash>\r\n                    <Box padding={2}>\r\n                    {/* User Cart Heading */}\r\n                    <i className=\"fa fa-shopping-cart\"> {cartItems.length}</i>\r\n                        <Button onClick={() => this.props.displayingCartItems()}\r\n                            color=\"blue\" text=\"View Cart\"\r\n                        />                                              \r\n                        \r\n                    </Box>\r\n                </Mask>\r\n                </Box>\r\n              \r\n                <Loader show={loadingItems} />\r\n            </Box>\r\n        )\r\n    }             \r\n}\r\n\r\nexport default SeeDeptItems;","import React from 'react';\r\nimport './Items.css';\r\nimport { Box, Heading, Text, Image, Button, IconButton } from 'gestalt'\r\nimport {calculatePrice, setCart, getCart} from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport './Items.css';\r\n\r\n\r\nclass SeeCartItems extends React.Component {\r\n    state = {       \r\n        cartItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ cartItems: getCart() })        \r\n    }    \r\n    \r\n    addToCart = item => {\r\n      const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n        if (alreadyInCart === -1) {\r\n            const updatedItems = this.state.cartItems.concat({\r\n            ...item,\r\n            quantity: 1\r\n            });\r\n            this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n        } else {\r\n            const updatedItems = [...this.state.cartItems];\r\n            updatedItems[alreadyInCart].quantity += 1;\r\n            this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    deleteItemsFromCart = itemToDeleteId => {\r\n        const filteredItems = this.state.cartItems.filter(\r\n            iitem => iitem._id !== itemToDeleteId\r\n        );\r\n        this.setState({ cartItems: filteredItems }, () => setCart(filteredItems));\r\n    };\r\n\r\n    render() {\r\n        const { cartItems } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"cartitems\">\r\n                    \r\n                        <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n                            <div className=\"cartitems\">\r\n                                <p>Automotive</p>\r\n                            </div>\r\n                        </Link>\r\n\r\n                        <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n                            <div className=\"cartitems\">                        \r\n                                <p>Books</p> \r\n                            </div>                     \r\n                        </Link>\r\n\r\n                        <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n                            <div className=\"cartitems\">                      \r\n                                <p>Electronics</p>\r\n                            </div>\r\n                        </Link>\r\n\r\n                        <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n                            <div className=\"cartitems\">                     \r\n                                <p>Fashion</p>\r\n                            </div>                        \r\n                        </Link>\r\n\r\n                        <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n                            <div className=\"cartitems\">                        \r\n                                <p>Home</p>                      \r\n                            </div>\r\n                        </Link>\r\n\r\n                        <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n                            <div className=\"cartitems\">                     \r\n                                <p>Sports Outdoor</p>\r\n                            </div>                        \r\n                        </Link>\r\n                    \r\n                </div>\r\n                    \r\n                <Box alignSelf=\"end\" marginTop={292} marginLeft={8} marginRight={8} padding={4}>\r\n                    \r\n                    <Box display=\"flex\" direction=\"column\" padding={4}>\r\n                        {/* User Cart Heading */}\r\n                        <Box align=\"center\" padding={6}>\r\n                            <Heading align=\"center\" color=\"black\" bold size=\"xs\">Shopping Cart</Heading>\r\n                            <Box align=\"center\" display=\"flex\" direction=\"row\">\r\n                            <div className=\"carttotal\"> \r\n                                <Text align=\"center\" color=\"black\" size=\"xl\">\r\n                                    Total ({cartItems.length} items ):\r\n                                </Text>\r\n                            </div>\r\n                            <div className=\"carttotal\"> \r\n                                <Text align=\"center\" bold size=\"xl\" color=\"red\">\r\n                                    {calculatePrice(cartItems)}\r\n                                </Text>\r\n                            </div>\r\n                            <div className=\"carttotal\"> \r\n                                <Text >\r\n                                    <Link to=\"/checkout\"><Button padding={4} color=\"blue\" text=\"Checkout\"></Button>\r\n                                    </Link>\r\n                                </Text>\r\n                            </div>\r\n                            </Box>\r\n                        </Box>\r\n    \r\n                    {/* Cart Items*/}\r\n                    {cartItems.map(iitem => (                            \r\n                    <Box key={iitem._id} display=\"flex\" padding={2} align=\"left\" direction=\"column\">\r\n                        <div className=\"container max-w-md p-2 m-2 shadow-lg rounded bg-gray\">\r\n                        {/* <Card width={300}>                           */}\r\n                            <Box height={200} width={180} align=\"left\">\r\n                            <Image\r\n                                // fit=\"cover\"\r\n                                alt=\"item\"\r\n                                naturalHeight={1}\r\n                                naturalWidth={1}\r\n                                src={iitem.thumbnail}                                  \r\n                            />\r\n                            </Box>\r\n                            <Box padding={4}>\r\n                            <Box display=\"flex\" direction=\"row\">\r\n                                <Text bold size=\"sl\" color=\"blue\">\r\n                                    {iitem.name} \r\n                                    <IconButton \r\n                                        accessibilityLabel=\"Delete Item\"\r\n                                        icon=\"cancel\"\r\n                                        size=\"sm\"\r\n                                        iconColor=\"red\"\r\n                                        onClick={() => this.deleteItemsFromCart(iitem._id)}\r\n                                    />\r\n                                </Text>\r\n                            </Box>\r\n\r\n                            <Text>\r\n                                Qty: {iitem.quantity}\r\n                            </Text>\r\n                            <Text>\r\n                                Price: ${(iitem.quantity * iitem.price).toFixed(2)}\r\n\r\n                            </Text>\r\n                                <hr></hr>\r\n                        </Box>                            \r\n                        \r\n                    </div>    \r\n                    {/* </Card> */}\r\n                    </Box>\r\n                    ))}\r\n    \r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\r\n                        <Box margin={2}>\r\n                            {cartItems.length === 0 && (\r\n                            <Text color=\"red\">Please select some items</Text>\r\n                            )}\r\n                        </Box>\r\n                        <Text size=\"lg\">Total: {calculatePrice(cartItems)}</Text>    \r\n                    </Box>\r\n                    </Box>\r\n                \r\n                </Box>        \r\n        \r\n               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default SeeCartItems;","import React from 'react';\r\nimport './Items.css';\r\nimport SeeDeptItems from './SeeDeptItems';\r\nimport SeeCartItems from './SeeCartItems';\r\n\r\n\r\n\r\nclass Items extends React.Component {\r\n  state = {\r\n      items: [],\r\n      department: '',\r\n      cartItems: [],\r\n      itemDeptId: '',\r\n      itemsSearched: [],\r\n      displayingCart: false,\r\n      displayBooks: true\r\n      \r\n  }\r\n\r\n  displayingCartItems = () => {    \r\n    this.setState({displayingCart: false})      \r\n  };\r\n  \r\n\r\n  \r\n\r\n  componentDidMount() {    \r\n    this.setState({displayingCart: true}) \r\n    this.changeDeptIdState()     \r\n  }\r\n\r\n  changeDeptIdState = () => {    \r\n    this.setState({itemDeptId: this.props.match.params.departmentId})\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const { displayingCart, itemDeptId, itemsSearched } = this.state\r\n\r\n    return (\r\n      \r\n      <div>        \r\n        {displayingCart ? <SeeDeptItems itemDeptId={itemDeptId} displayingCartItems={this.displayingCartItems}  itemsSearched={itemsSearched}\r\n        />  : <SeeCartItems />}\r\n      \r\n      </div>\r\n    );\r\n      \r\n      \r\n  }\r\n}; \r\n\r\n\r\nexport default Items;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport {getToken} from './utils';\nimport \"gestalt/dist/gestalt.css\";\n\nimport App from './components/App';\nimport Navbar from './components/Navbar'\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport Checkout from './components/Checkout';\nimport Items from \"./components/Items\";\n// import SearchItems from \"./components/SearchItems\";\nimport SearchResult from \"./components/SearchResult\"\n\n\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        getToken() !== null ? \n            <Component {...props} /> : <Redirect to={{\n                pathname: '/signin',\n                state: { from: props.location }\n            }} />\n            \n    )} />\n)\n\nconst Root = () => (\n    <Router>\n        \n        <React.Fragment>\n            <Navbar />\n            <Switch>\n                <Route component={App} exact path=\"/\" />             \n                <Route component={SearchResult} exact path=\"/searchresult\" />\n                <Route component={Signin} path=\"/signin\" />\n                <Route component={Signup} path=\"/signup\" />\n                <PrivateRoute component={Checkout} path=\"/checkout\" />                \n                <Route component={Items} path=\"/:departmentId\" />\n            </Switch>           \n        </React.Fragment>\n    </Router>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
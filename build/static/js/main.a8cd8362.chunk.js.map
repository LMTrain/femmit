{"version":3,"sources":["utils/index.js","components/Loader.js","components/SeeCartItems.js","components/SearchResult.js","components/App.js","components/Navbar.js","components/ToastMessage.js","components/Signin.js","components/Signup.js","components/Checkout.js","utils/API.js","components/SeeDeptItems.js","components/Items.js","registerServiceWorker.js","index.js"],"names":["calculatePrice","iitems","reduce","acc","iitem","quantity","price","toFixed","calculateAmount","Number","calculateTotalItems","setCart","value","cartKey","localStorage","setItem","JSON","stringify","getCart","getItem","parse","clearCart","removeItem","getToken","tokenKey","setToken","clearToken","Loader","show","position","dangerouslySetInlineStyle","__style","bottom","left","transform","color","size","margin","hStyle","fontSize","fontFamily","fontWeight","textAlign","SeeCartItems","state","cartItems","addToCart","item","alreadyInCart","findIndex","_id","updatedItems","concat","setState","countItemToDelete","itemToDeleteId","alreadyInCartToDel","allItems","console","log","deleteItemsFromCart","filteredItems","filter","this","Fragment","display","direction","marginLeft","span","className","Link","to","alignSelf","marginTop","marginRight","padding","style","alignItems","justifyContent","length","column","paddingX","map","key","paddingLeft","paddingRight","height","width","fit","alt","naturalHeight","naturalWidth","src","thumbnail","marginBottom","bold","name","onClick","align","text","React","Component","apiURL","process","API_URL","strapi","Strapi","SearchResult","searchedResult","searchTermName","searchedResults","items","displayingCart","displayingCartItems","searchedItem","searchDepartments","a","request","data","query","toLowerCase","response","props","searchTerm","truncateString","str","num","slice","backgroundColor","shape","wrap","paddingY","image","description","DeptMenu","marginRightt","App","departments","department","departmentId","searchedItems","loadingDepartments","redirect","searchTermState","renderRedirect","Redirect","handleChange","id","accessibilityLabel","onChange","placeholder","icon","url","Navbar","handleSignout","history","push","AuthNav","borderRadius","NavLink","activeClassName","exact","inline","UnAuthNav","aria-hidden","title","withRouter","ToastMessage","message","Signin","username","password","toast","toastMessage","loading","event","persist","target","handleSubmit","preventDefault","isFormEmpty","showToast","login","jwt","redirectUser","path","setTimeout","maxWidth","onSubmit","type","margiginTop","disabled","Signup","email","register","italic","_CheckoutForm","address","postalCode","city","confirmationEmailAddress","orderProcessing","modal","handleConfirmOrder","handleSubmitOrder","amount","stripe","createToken","token","createEntry","subject","Date","now","html","closeModal","onReady","input","focus","ConfirmationModal","accessibilityCloseLabel","accessibilityModalLabel","heading","onDismiss","footer","role","CheckoutForm","injectStripe","Checkout","apiKey","booksearch","axios","get","booksArray","itemsBooksArray","bookPrice","bookThumbnail","ShuffledDatas","shuffleData","defaultBooks","SeeDeptItems","search","books","loadingItems","bookDeptId","bookToSearch","Math","floor","random","searchForBooks","API","then","res","error","displayBooks","catch","err","i","bookId","String","etag","bookName","volumeInfo","bookDescription","bookAuthor","authors","bookPublishDate","publishedDate","imageLinks","saleInfo","saleability","retailPrice","shuffle","itemsArray","itemsShuffled","splice","itemDeptId","flexWrap","Items","itemsSearched","cartItemsLength","find","changeDeptIdState","match","params","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","PrivateRoute","component","rest","Route","render","pathname","from","ReactDOM","Switch","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qQAGaA,EAAiB,SAAAC,GAC1B,MAAM,IAAN,OAAWA,EACRC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,EAAMC,SAAWD,EAAME,QAAO,GAC3DC,QAAQ,KAGFC,EAAkB,SAAAP,GAC7B,OAAOQ,OAAOR,EACTC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,EAAMC,SAAWD,EAAME,QAAO,GAC3DC,QAAQ,KAIFG,EAAsB,SAAAT,GACjC,OAAOQ,OAAOR,EACXC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,EAAMC,WAAU,KAKrCM,EAAU,SAACC,GAA+B,IAAxBC,EAAuB,uDAvBrC,OAwBTC,cACAA,aAAaC,QAAQF,EAASG,KAAKC,UAAUL,KAIxCM,EAAU,WAAyB,IAAxBL,EAAuB,uDA7B9B,OA8Bb,OAAIC,cAAgBA,aAAaK,QAAQN,GAC9BG,KAAKI,MAAMN,aAAaK,QAAQN,IAEpC,IAGEQ,EAAY,WAAyB,IAAxBR,EAAuB,uDApChC,OAqCTC,cACFA,aAAaQ,WAAWT,IAKjBU,EAAW,WAA2B,IAA1BC,EAAyB,uDA1ChC,MA2Cd,OAAIV,cAAgBA,aAAaK,QAAQK,GAChCR,KAAKI,MAAMN,aAAaK,QAAQK,IAElC,MAGEC,EAAW,SAACb,GAAiC,IAA1BY,EAAyB,uDAjDvC,MAkDVV,cACAA,aAAaC,QAAQS,EAAUR,KAAKC,UAAUL,KAIzCc,EAAa,WAA2B,IAA1BF,EAAyB,uDAvDlC,MAwDVV,cACFA,aAAaQ,WAAWE,I,4FCtCfG,EAhBA,SAAC,GAAD,SAAGC,MAEd,kBAAC,IAAD,CACEC,SAAS,QACTC,0BAA2B,CACzBC,QAAS,CACPC,OAAQ,IACRC,KAAM,MACNC,UAAW,sBAIf,kBAAC,aAAD,CAAYC,MAAM,aAAaC,KAAM,GAAIC,OAAO,U,gBCRhDC,G,YAAS,CACXC,SAAU,OACVC,WAAY,gBACZC,WAAY,OACZC,UAAW,WA2NAC,E,2MAtNXC,MAAQ,CACJC,UAAW,I,EAOfC,UAAY,SAAAC,GACV,IAAMC,EAAgB,EAAKJ,MAAMC,UAAUI,WAAU,SAAA7C,GAAK,OAAIA,EAAM8C,MAAQH,EAAKG,OAC/E,IAAuB,IAAnBF,EAAsB,CACtB,IAAMG,EAAe,EAAKP,MAAMC,UAAUO,OAArB,eAClBL,EADkB,CAErB1C,SAAU,KAEV,EAAKgD,SAAS,CAACR,UAAWM,IAAgB,kBAAMxC,EAAQwC,UACrD,CACH,IAAMA,EAAY,YAAO,EAAKP,MAAMC,WACpCM,EAAaH,GAAe3C,UAAY,EACxC,EAAKgD,SAAS,CAACR,UAAWM,IAAe,kBAAMxC,EAAQwC,Q,EAM/DG,kBAAoB,SAAAC,GAChB,IAAMC,EAAqB,EAAKZ,MAAMC,UAAUI,WAAU,SAAAQ,GAAQ,OAAIA,EAASP,MAAQK,KAE5D,IAAvBC,GACAE,QAAQC,IAAI,0BAA2BH,GACvC,EAAKI,oBAAoBL,KAOzBG,QAAQC,IAAK,EAAKf,MAAMC,WACxB,EAAKe,oBAAoBL,K,EAOjCK,oBAAsB,SAAAL,GAClB,IAAMM,EAAgB,EAAKjB,MAAMC,UAAUiB,QACvC,SAAA1D,GAAK,OAAIA,EAAM8C,MAAQK,KAE3BG,QAAQC,IAAI,yBAA0BJ,GAEtC,EAAKF,SAAS,CAAER,UAAWgB,IAAiB,kBAAMlD,EAAQkD,O,mFA9C1DE,KAAKV,SAAS,CAAER,UAAW3B,Q,+BAiDrB,IAAD,OACG2B,EAAckB,KAAKnB,MAAnBC,UACR,OACI,kBAAC,IAAMmB,SAAP,KACI,kBAAC,IAAD,CAAKC,QAAQ,OAAOC,UAAU,MAAMC,WAAY,IACpD,kBAAC,IAAD,CAAQC,KAAM,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMjC,MAAM,YAIhB,yBAAKkC,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,4CAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,uCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,6CAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,yCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,sCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,6CAAsB,OAIhC,yBAAKF,UAAU,aACX,2BAAI,IAAK3D,EAAoBmC,GAAY,IAAI,uBAAGwB,UAAU,uBAAuB,KAAjF,OAIA,kBAAC,IAAD,CAAKG,UAAU,MAAMC,UAAW,IAAKN,WAAY,EAAGO,YAAa,EAAGC,QAAS,GACzE,kBAAC,IAAD,CAAKtC,OAAQ,GACT,yBAAKuC,MAAOtC,GAAZ,mBAOR,yBAAK+B,UAAU,QACX,kBAAC,IAAD,CAAKJ,QAAQ,OAAOY,WAAW,SAASC,eAAe,SAASZ,UAAU,UACtE,kBAAC,IAAD,CAAK7B,OAAQ,GACa,IAArBQ,EAAUkC,QACX,kBAAC,IAAD,CAAM5C,MAAM,OAAZ,8BAIR,kBAAC,IAAD,CAAK8B,QAAQ,OAAOC,UAAU,MAAMc,OAAQ,EAAGC,SAAU,GACrD,kBAAC,IAAD,KACKpC,EAAUqC,KAAI,SAAA9E,GAAK,OAChB,yBAAKiE,UAAU,aACX,kBAAC,IAAD,CAAKc,IAAK/E,EAAM8C,IAAKe,QAAQ,OAAOC,UAAU,MAAMO,UAAW,EAAGN,WAAY,EAAGiB,YAAa,EAAGC,aAAc,GAE3G,kBAAC,IAAD,CAAKpB,QAAQ,OAAOC,UAAU,OAC1B,kBAAC,IAAD,CAAMoB,OAAQ,IAAKC,MAAO,IACtB,kBAAC,IAAD,CACIC,IAAI,QACJC,IAAI,OACJC,cAAe,EACfC,aAAc,EACdC,IAAKxF,EAAMyF,cAIvB,kBAAC,IAAD,CAAKlB,QAAS,GACV,kBAAC,IAAD,CAAKV,QAAQ,OAAOC,UAAU,MAAM4B,aAAc,GAC9C,kBAAC,IAAD,CAAMC,MAAI,EAAC3D,KAAK,KAAKD,MAAM,QACtB/B,EAAM4F,OAQf,kBAAC,IAAD,CAAK/B,QAAQ,OAAOC,UAAU,OAC1B,kBAAC,IAAD,CAAM/B,MAAM,SAASC,KAAK,MAA1B,gBACkBhC,EAAME,QAG5B,kBAAC,IAAD,CAAK2D,QAAQ,OAAOC,UAAU,OAC1B,kBAAC,IAAD,CAAM/B,MAAM,QAAQC,KAAK,MAAzB,QACUhC,EAAMC,WAGpB,kBAAC,IAAD,CAAM8B,MAAM,QAAQC,KAAK,MAAzB,YACchC,EAAMC,SAAWD,EAAME,OAAOC,QAAQ,IAEpD,kBAAC,IAAD,CAAM0D,QAAQ,OAAOC,UAAU,OAC3B,yBAAKG,UAAU,iBACX,4BAAQ4B,QAAS,kBAAM,EAAK3C,kBAAkBlD,EAAM8C,OAApD,WAEJ,yBAAKmB,UAAU,kBACX,8CAEJ,yBAAKA,UAAU,kBACX,iEAQ5B,kBAAC,IAAD,CAAKW,OAAQ,EAAGb,WAAY,GAAIM,UAAW,GAAIc,MAAO,KACtD,yBAAKlB,UAAU,aACP,kBAAC,IAAD,CAAK6B,MAAM,SAASjC,QAAQ,OAAOC,UAAU,SAASqB,MAAO,KACzD,yBAAKlB,UAAU,aACX,kBAAC,IAAD,CAAM0B,MAAI,EAAC5D,MAAM,QAAQC,KAAK,MAA9B,aACe1B,EAAoBmC,GADnC,WACuD,MAEvD,kBAAC,IAAD,CAAMqD,MAAM,SAASH,MAAI,EAAC3D,KAAK,KAAKD,MAAM,OACrCnC,EAAe6C,KAIxB,kBAAC,IAAD,CAAK0C,MAAO,KACR,kBAAC,IAAD,KACI,kBAACjB,EAAA,EAAD,CAAMC,GAAG,aAAY,kBAAC,IAAD,CAAQI,QAAS,EAAGvC,KAAK,KAAKmD,MAAO,IAAKpD,MAAM,OAAOgE,KAAK,0B,GAzMlGC,IAAMC,W,iBCP3BC,EAASC,mRAAYC,SAAW,wBAChCC,EAAS,IAAIC,IAAOJ,GAKpBK,E,2MACJ/D,MAAQ,CACNgE,eAAgB,GAChBC,eAAgB,GAChBC,gBAAiB,GAEjBC,MAAO,GACPC,gBAAgB,EAChBnE,UAAW,I,EAWboE,oBAAsB,WACpB,EAAK5D,SAAS,CAAC2D,gBAAgB,K,EAGjClE,UAAY,SAAAoE,GACV,IAAMlE,EAAgB,EAAKJ,MAAMC,UAAUI,WAAU,SAAA7C,GAAK,OAAIA,EAAM8C,MAAQgE,EAAahE,OACzF,IAAuB,IAAnBF,EAAsB,CACxB,IAAMG,EAAe,EAAKP,MAAMC,UAAUO,OAArB,eAChB8D,EADgB,CAEnB7G,SAAU,KAEZ,EAAKgD,SAAS,CAACR,UAAWM,IAAgB,kBAAMxC,EAAQwC,UACnD,CACL,IAAMA,EAAY,YAAO,EAAKP,MAAMC,WACpCM,EAAaH,GAAe3C,UAAY,EACxC,EAAKgD,SAAS,CAACR,UAAWM,IAAe,kBAAMxC,EAAQwC,Q,EAM3DgE,kB,sBAAoB,4BAAAC,EAAA,sEAEKX,EAAOY,QAAQ,OAAQ,WAAY,CACxDC,KAAM,CACJC,MAAM,iEAAD,OAEiB,EAAK3E,MAAMiE,eAAeW,cAF3C,6PAJS,OAEZC,EAFY,OAqBlB,EAAKpE,SAAS,CACZyD,gBAAiBW,EAASH,KAAKP,MAC/BlE,UAAW3B,MACbwC,QAAQC,IAAI,EAAKf,MAAMkE,iBAxBL,2C,mFA3BlB/C,KAAKV,SAAS,CAACwD,eAAgB9C,KAAK2D,MAAMC,aAC1CjE,QAAQC,IAAI,8BAAgCI,KAAKnB,MAAMiE,gBACvD9C,KAAKoD,sB,+BAoDG,IAAD,SACgDpD,KAAKnB,MAApDkE,EADD,EACCA,gBAAiBjE,EADlB,EACkBA,UAAWmE,EAD7B,EAC6BA,eACpC,SAASY,EAAeC,EAAKC,GAC3B,OAAID,EAAI9C,OAAS+C,GAAOA,EAAM,EACfD,EAAIE,MAAM,EAAID,EAAM,GAAM,MAC1BD,EAAI9C,OAAS+C,GAAOA,GAAO,EAC3BD,EAAIE,MAAM,EAAGD,GAAO,MAExBD,EAKb,OACE,qCACuB,IAAnBb,EAA2B,kBAAC,EAAD,CAAUnE,UAAWA,EAAWoE,oBAAqBlD,KAAKkD,sBAAyB,GA4D9G,8BACsB,IAAnBD,EAA0B,kBAAC,EAAD,MAAmB,IAElD,yBAAK3C,UAAU,QACb,kBAAC,IAAD,CAAK6B,MAAM,UACT,kBAAC,IAAD,CACEpE,0BAA2B,CACzBC,QAAS,CACPiG,gBAAiB,UAGrBC,MAAM,UACNC,MAAI,EACJjE,QAAQ,OACRa,eAAe,UAEdgC,EAAgB5B,KAAI,SAAAgC,GAAY,OAC/B,kBAAC,IAAD,CAAKiB,SAAU,EAAG9F,OAAQ,EAAGkD,MAAO,IAAKJ,IAAK+B,EAAahE,KACzD,kBAAC,IAAD,CACEkF,MACE,kBAAC,IAAD,CAAK9C,OAAQ,GAAIC,MAAO,IACtB,kBAAC,IAAD,CACEC,IAAI,QACJC,IAAI,aACJC,cAAe,EACfC,aAAc,EACdC,IAAKsB,EAAarB,cAKxB,kBAAC,IAAD,CACE5B,QAAQ,OACRY,WAAW,SACXC,eAAe,SACfZ,UAAU,UAEV,kBAAC,IAAD,CAAK4B,aAAc,GACjB,kBAAC,IAAD,CAAMC,MAAI,EAAC3D,KAAK,MACb8E,EAAalB,KAAO4B,EAAeV,EAAalB,KAAM,MAGzD,kBAAC,IAAD,CAAM5D,KAAK,MAAM8E,EAAamB,YAAcT,EAAeV,EAAamB,YAAa,IAArF,KACA,kBAAC,IAAD,CAAMlG,MAAM,UAAZ,IAAuB+E,EAAa5G,OACtC,kBAAC,IAAD,CAAKmE,UAAW,GACd,kBAAC,IAAD,CAAMrC,KAAK,MACT,kBAAC,IAAD,CAAQA,KAAK,KAAK6D,QAAS,kBAAM,EAAKnD,UAAUoE,IAChD/E,MAAM,OAAOgE,KAAK,gC,GA7LjBE,aA8MrBiC,EAAW,SAAC,GAAD,IAAEzF,EAAF,EAAEA,UAAWoE,EAAb,EAAaA,oBAAb,OAEf,kBAAC,IAAD,CAAKhD,QAAQ,OAAOC,UAAU,MAAMC,WAAY,IAChD,kBAAC,IAAD,CAAQC,KAAM,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMjC,MAAM,YAIhB,yBAAKkC,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,4CAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,uCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,6CAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,yCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,sCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,6CAAsB,OAIhC,yBAAKF,UAAU,aACb,kBAAC,IAAD,CAAKF,WAAY,EAAGoE,cAAe,EAAG9D,UAAW,EAAGW,YAAa,EAAGC,aAAc,GAEhF,kBAAC,IAAD,CAAQjD,KAAK,KAAK6D,QAASgB,EACvB9E,MAAM,OAAOgE,KAAK,eAGtB,2BAAItD,EAAUkC,OAAO,uBAAGV,UAAU,uBAAuB,KAAzD,QAKSsC,ICjRTL,EAASC,mRAAYC,SAAW,wBAChCC,EAAS,IAAIC,IAAOJ,GAIpBhE,EAAS,CACbC,SAAU,OACVC,WAAY,iBA0LCgG,E,2MArLb5F,MAAQ,CACP6F,YAAa,GACbC,WAAY,GACZC,aAAc,GACd9F,UAAW,GACXkE,MAAO,GACP6B,cAAc,GACdjB,WAAY,GACXkB,oBAAoB,EACpBC,UAAU,EACVC,iBAAiB,G,EAGnBC,eAAiB,WACf,GAAI,EAAKpG,MAAMkG,SACb,OAAO,kBAACG,EAAA,EAAD,CAAU1E,GAAG,mB,EAgCxB2E,aAAe,YAAc,IAAZtI,EAAW,EAAXA,MACf,EAAKyC,SAAS,CAAEsE,WAAY/G,IAAS,kBAAM,EAAKuG,wB,EAIlDA,kB,sBAAoB,4BAAAC,EAAA,sEAEKX,EAAOY,QAAQ,OAAQ,WAAY,CACxDC,KAAM,CACJC,MAAM,iEAAD,OAEiB,EAAK3E,MAAM+E,WAAWH,cAFvC,6PAJS,OAEZC,EAFY,OAqBlB,EAAKpE,SAAS,CACZuF,cAAenB,EAASH,KAAKP,MAC7B8B,oBAAoB,EACpBC,UAAU,EACVC,iBAAiB,IAzBD,2C,4NA3BOtC,EAAOY,QAAQ,OAAQ,WAAY,CACxDC,KAAM,CACJC,MAAM,kM,OAFJE,E,OAeN1D,KAAKV,SAAS,CAACoF,YAAahB,EAASH,KAAKmB,YAAaI,oBAAoB,I,gDAE3EnF,QAAQC,IAAR,MACAI,KAAKV,SAAS,CAAEwF,oBAAoB,I,8IAuC9B,IAAD,EACkE9E,KAAKnB,MAAtE+E,EADD,EACCA,WAAYoB,EADb,EACaA,gBAAiBF,EAD9B,EAC8BA,mBAAoBJ,EADlD,EACkDA,YACzD,SAASb,EAAeC,EAAKC,GAC3B,OAAID,EAAI9C,OAAS+C,GAAOA,EAAM,EACfD,EAAIE,MAAM,EAAID,EAAM,GAAM,MAC1BD,EAAI9C,OAAS+C,GAAOA,GAAO,EAC3BD,EAAIE,MAAM,EAAGD,GAAO,MAExBD,EAGb,OACE,oCAEA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAK5D,QAAQ,OAAOa,eAAe,SAASL,UAAW,GACrD,kBAAC,IAAD,CACE0E,GAAG,cACHC,mBAAmB,2BACnBC,SAAUtF,KAAKmF,aACftI,MAAO+G,EACP2B,YAAY,uBAEd,kBAAC,IAAD,CAAKjH,OAAQ,GACX,kBAAC,IAAD,CACEkH,KAAK,SACLpH,MAAOwF,EAAa,SAAW,OAC/BvF,KAAM,GACNgH,mBAAmB,aAKzB,kBAAC,IAAD,CAAKnF,QAAQ,OAAOa,eAAe,SAASgB,aAAc,GAExD,yBAAKlB,MAAOtC,EAAQH,MAAM,SAA1B,wBAMF,kBAAC,IAAD,CACEL,0BAA2B,CACzBC,QAAS,CACPiG,gBAAiB,UAGrBC,MAAM,UACNC,MAAI,EACJjE,QAAQ,OACRa,eAAe,UAGd2D,EAAYvD,KAAI,SAAAwD,GAAU,OACzB,kBAAC,IAAD,CAAKP,SAAU,EAAG9F,OAAQ,EAAGkD,MAAO,IAAKJ,IAAKuD,EAAWxF,KACvD,kBAAC,IAAD,CACEkF,MACE,kBAAC,IAAD,CAAK9C,OAAQ,IAAKC,MAAO,KACvB,kBAACjB,EAAA,EAAD,CAAMC,GAAE,WAAMmE,EAAWxF,MACzB,kBAAC,IAAD,CACEsC,IAAI,QACJC,IAAI,aACJC,cAAe,EACfC,aAAc,EACdC,IAAG,UAAKU,GAAL,OAAcoC,EAAWN,MAAMoB,UAMxC,kBAAC,IAAD,CACEvF,QAAQ,OACRY,WAAW,SACXC,eAAe,SACfZ,UAAU,UAEV,kBAAC,IAAD,CAAM6B,MAAI,EAAC3D,KAAK,MACbsG,EAAW1C,KAAO4B,EAAec,EAAW1C,KAAM,KAErD,kBAAC,IAAD,CAAM5D,KAAK,MAAMsG,EAAWL,YAAcT,EAAec,EAAWL,YAAa,IAAjF,YAOX,kBAAC,EAAD,CAAQzG,KAAMiH,IAEf,6BACCE,EAAkB,kBAAC,EAAD,CAAcpB,WAAYA,IAA0C,OAA1B5D,KAAKnB,MAAM+E,YAAuB,kBAAC,EAAD,CAAcA,WAAY5D,KAAKnB,MAAM+E,aAClI5D,KAAKiF,wB,GA9KK3C,a,kBCbZoD,G,kNACJ7G,MAAQ,CACNC,UAAW,I,EAIX6G,cAAgB,WACZhI,IACAL,IACA,EAAKqG,MAAMiC,QAAQC,KAAK,M,mFAI1BlG,QAAQC,IAAII,KAAK2D,OACjB3D,KAAKV,SAAS,CAAER,UAAW3B,Q,+BAGnB,IACC2B,EAAakB,KAAKnB,MAAlBC,UACP,OAAsB,OAAftB,IACP,kBAAC,EAAD,CAASmI,cAAe3F,KAAK2F,cAAe7G,UAAWA,IAAe,kBAAC,EAAD,U,GApBzDuD,IAAMC,YAyBrBwD,EAAU,SAAC,GAAD,IAAGH,EAAH,EAAGA,cAAe7G,EAAlB,EAAkBA,UAAlB,OACZ,kBAAC,IAAD,CACAoB,QAAQ,OACRY,WAAW,SACXC,eAAe,SACfQ,OAAQ,GACRnD,MAAM,OACNwC,QAAS,EAETmF,aAAc,IAGd,kBAACC,EAAA,EAAD,CAASC,gBAAgB,SAASC,OAAK,EAAC1F,GAAG,KACzC,kBAAC,IAAD,CAAKN,QAAQ,OAAOY,WAAW,UAC/B,kBAAC,IAAD,CAAKJ,UAAW,GAAIpC,OAAQ,EAAGiD,OAAQ,GAAIC,MAAO,KAC9C,kBAAC,IAAD,CACEE,IAAI,cACJC,cAAe,EACfC,aAAc,EACdC,IAAI,2BAQZ,yBAAKvB,UAAU,mBACb,kBAAC,IAAD,CACE4B,QAASyD,EACTvH,MAAM,cACNgE,KAAK,WACL+D,QAAM,EACN9H,KAAK,QAIT,kBAAC2H,EAAA,EAAD,CAASC,gBAAgB,SAASzF,GAAG,aACnC,yBAAKF,UAAU,oBACb,2BAAI3D,EAAoBmC,GAAW,uBAAGwB,UAAU,uBAAuB,IAApC,cAAnC,SAQF8F,EAAY,kBAChB,kBAAC,IAAD,CACElG,QAAQ,OACRY,WAAW,SACXC,eAAe,SACfQ,OAAQ,GACRnD,MAAM,OACNwC,QAAS,EACTsD,MAAM,iBAIN,kBAAC8B,EAAA,EAAD,CAASC,gBAAgB,SAASC,OAAK,EAAC1F,GAAG,KACzC,kBAAC,IAAD,CAAKN,QAAQ,OAAOY,WAAW,UAC7B,kBAAC,IAAD,CAAKJ,UAAW,GAAIpC,OAAQ,EAAGiD,OAAQ,GAAIC,MAAO,KAChD,kBAAC,IAAD,CACEE,IAAI,cACJC,cAAe,EACfC,aAAc,EACdC,IAAI,wBAOZ,kBAACmE,EAAA,EAAD,CAASC,gBAAgB,SAASzF,GAAG,WACjC,yBAAKF,UAAU,kBACf,uBAAGA,UAAU,gBAAgB+F,cAAY,OAAOC,MAAM,cAM1D,kBAACN,EAAA,EAAD,CAASC,gBAAgB,SAASzF,GAAG,WACjC,yBAAKF,UAAU,kBACX,iDAMGiG,cAAWb,G,SCxGXc,GAhBM,SAAC,GAAD,IAAG3I,EAAH,EAAGA,KAAM4I,EAAT,EAASA,QAAT,OACjB5I,GACI,kBAAC,IAAD,CACIE,0BAA2B,CACvBC,QAAS,CACLC,OAAQ,IACRC,KAAM,MACNC,UAAW,qBAGnBL,SAAS,SAEL,kBAAC,IAAD,CAAOM,MAAM,SAASgE,KAAOqE,MCVvClE,GAASC,mRAAYC,SAAW,wBAChCC,GAAS,IAAIC,IAAOJ,IAGpBhE,GAAS,CACXC,SAAU,OACVC,WAAY,gBACZC,WAAY,OACZN,MAAO,SAiIIsI,G,2MA5HX7H,MAAQ,CACJ8H,SAAU,GACVC,SAAU,GACVC,OAAO,EACPC,aAAc,GACdC,SAAS,G,EAGb5B,aAAe,YAAuB,IAApB6B,EAAmB,EAAnBA,MAAOnK,EAAY,EAAZA,MACrBmK,EAAMC,UACN,EAAK3H,SAAL,gBAAgB0H,EAAME,OAAOjF,KAAOpF,K,EAGxCsK,a,uCAAe,WAAMH,GAAN,qBAAA3D,EAAA,yDACX2D,EAAMI,iBADK,EAEoB,EAAKvI,MAA5B8H,EAFG,EAEHA,SAAUC,EAFP,EAEOA,UAEd,EAAKS,YAAY,EAAKxI,OAJf,uBAKP,EAAKyI,UAAU,sBALR,0CAWP,EAAKhI,SAAS,CAAEyH,SAAS,IAXlB,SAYgBrE,GAAO6E,MAAMZ,EAAUC,GAZvC,OAYDlD,EAZC,OAaP,EAAKpE,SAAS,CAAEyH,SAAS,IACzBrJ,EAASgG,EAAS8D,KAClB,EAAKC,aAAa,KAfX,kDAiBP,EAAKnI,SAAS,CAAEyH,SAAS,IACzB,EAAKO,UAAU,KAAIb,SAlBZ,0D,wDAsBfgB,aAAe,SAAAC,GAAI,OAAI,EAAK/D,MAAMiC,QAAQC,KAAK6B,I,EAE/CL,YAAc,YAA2B,IAAzBV,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACtB,OAAQD,IAAaC,G,EAGzBU,UAAY,SAAAR,GACR,EAAKxH,SAAS,CAAEuH,OAAO,EAAMC,iBAC7Ba,YAAW,kBAAM,EAAKrI,SAAS,CAAEuH,OAAO,EAAOC,aAAc,OAAO,M,wEAG9D,IAAD,EACoC9G,KAAKnB,MAAtCiI,EADH,EACGA,aAAcD,EADjB,EACiBA,MAAOE,EADxB,EACwBA,QAE7B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIhJ,0BAA2B,CACvBC,QAAS,IAMbM,OAAQ,EACRsC,QAAS,EACTsD,MAAM,UACNhE,QAAQ,OACRa,eAAe,SACfS,MAAO,KAGP,0BAAMlB,UAAU,+DAChBO,MAAO,CACHX,QAAS,cACTvB,UAAW,SACXiJ,SAAU,IACVrG,OAAQ,KAIZsG,SAAU7H,KAAKmH,cAGX,kBAAC,IAAD,CACIpF,aAAc,EACdrB,WAAY,EACZR,QAAQ,OACRC,UAAU,SACVW,WAAW,UAEX,yBAAKD,MAAOtC,GAAQH,MAAM,SAA1B,YAIJ,kBAAC,IAAD,CAAM2D,aAAc,GACpB,kBAAC,IAAD,CACIqD,GAAG,WACH0C,KAAK,OACL7F,KAAK,WACLsD,YAAY,WACZD,SAAUtF,KAAKmF,gBAInB,kBAAC,IAAD,CACIC,GAAG,WACH0C,KAAK,WACL7F,KAAK,WACLsD,YAAY,WACZD,SAAUtF,KAAKmF,eAEnB,kBAAC,IAAD,CAAK4C,YAAa,EAAG3D,SAAU,GAC3B,kBAAC,IAAD,CACI+B,QAAM,EACN6B,SAAUjB,EACV3I,MAAM,OACNgE,KAAK,SACL0F,KAAK,cAKrB,kBAAC,GAAD,CAAcjK,KAAMgJ,EAAOJ,QAASK,S,GAvH/BzE,IAAMC,WCZrBC,GAASC,mRAAYC,SAAW,wBAChCC,GAAS,IAAIC,IAAOJ,IAEpBhE,GAAS,CACXC,SAAU,OACVC,WAAY,gBACZC,WAAY,OACZN,MAAO,SAuII6J,G,2MAnIXpJ,MAAQ,CACJ8H,SAAU,GACVuB,MAAO,GACPtB,SAAU,GACVC,OAAO,EACPC,aAAc,GACdC,SAAS,G,EAGb5B,aAAe,YAAuB,IAApB6B,EAAmB,EAAnBA,MAAOnK,EAAY,EAAZA,MACrBmK,EAAMC,UACN,EAAK3H,SAAL,gBAAgB0H,EAAME,OAAOjF,KAAOpF,K,EAGxCsK,a,uCAAe,WAAMH,GAAN,uBAAA3D,EAAA,yDACX2D,EAAMI,iBADK,EAE2B,EAAKvI,MAAnC8H,EAFG,EAEHA,SAAUuB,EAFP,EAEOA,MAAOtB,EAFd,EAEcA,UAErB,EAAKS,YAAY,EAAKxI,OAJf,uBAKP,EAAKyI,UAAU,sBALR,0CAWP,EAAKhI,SAAS,CAAEyH,SAAS,IAXlB,SAYgBrE,GAAOyF,SAASxB,EAAUuB,EAAOtB,GAZjD,OAYDlD,EAZC,OAaP,EAAKpE,SAAS,CAAEyH,SAAS,IACzBrJ,EAASgG,EAAS8D,KAClB,EAAKC,aAAa,KAfX,kDAiBP,EAAKnI,SAAS,CAAEyH,SAAS,IACzB,EAAKO,UAAU,KAAIb,SAlBZ,0D,wDAsBfgB,aAAe,SAAAC,GAAI,OAAI,EAAK/D,MAAMiC,QAAQC,KAAK6B,I,EAE/CL,YAAc,YAAkC,IAAhCV,EAA+B,EAA/BA,SAAUuB,EAAqB,EAArBA,MAAOtB,EAAc,EAAdA,SAC7B,OAAQD,IAAauB,IAAUtB,G,EAGnCU,UAAY,SAAAR,GACR,EAAKxH,SAAS,CAAEuH,OAAO,EAAMC,iBAC7Ba,YAAW,kBAAM,EAAKrI,SAAS,CAAEuH,OAAO,EAAOC,aAAc,OAAO,M,wEAG9D,IAAD,EACoC9G,KAAKnB,MAAtCiI,EADH,EACGA,aAAcD,EADjB,EACiBA,MAAOE,EADxB,EACwBA,QAE7B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIhJ,0BAA2B,CACvBC,QAAS,IAKbM,OAAQ,EACRsC,QAAS,EACTsD,MAAM,UACNhE,QAAQ,OACRa,eAAe,SACfS,MAAO,KAIP,0BAAMlB,UAAU,+DAChBO,MAAO,CACHX,QAAS,cACTvB,UAAW,SACXiJ,SAAU,KAEdC,SAAU7H,KAAKmH,cAGX,kBAAC,IAAD,CACIpF,aAAc,EACd7B,QAAQ,OACRC,UAAU,SACVW,WAAW,UAEX,yBAAKD,MAAOtC,GAAQH,MAAM,SAA1B,qBACA,kBAAC,IAAD,CAAMgK,QAAM,EAAChK,MAAM,UAAnB,iCAKJ,kBAAC,IAAD,CACIgH,GAAG,WACH0C,KAAK,OACL7F,KAAK,WACLsD,YAAY,WACZD,SAAUtF,KAAKmF,aACf7E,UAAU,2BAGd,kBAAC,IAAD,CACI8E,GAAG,QACH0C,KAAK,QACL7F,KAAK,QACLsD,YAAY,gBACZD,SAAUtF,KAAKmF,aACf7E,UAAU,2BAGd,kBAAC,IAAD,CACI8E,GAAG,WACH0C,KAAK,WACL7F,KAAK,WACLsD,YAAY,WACZD,SAAUtF,KAAKmF,aACf7E,UAAU,2BAEd,kBAAC,IAAD,CACI6F,QAAM,EACN6B,SAAUjB,EACV3I,MAAM,OACNgE,KAAK,SACL0F,KAAK,SACLxH,UAAU,gCAItB,kBAAC,GAAD,CAAczC,KAAMgJ,EAAOJ,QAASK,S,GA9H/BzE,IAAMC,W,SCNrBC,GAASC,mRAAYC,SAAW,wBAChCC,GAAS,IAAIC,IAAOJ,IAEpB8F,G,2MACFxJ,MAAQ,CACJC,UAAW,GACXwJ,QAAS,GACTC,WAAY,GACZC,KAAM,GACNC,yBAA0B,GAC1B5B,OAAO,EACPC,aAAc,GACd4B,iBAAiB,EACjBC,OAAO,G,EAOXxD,aAAe,YAAuB,IAApB6B,EAAmB,EAAnBA,MAAOnK,EAAY,EAAZA,MACrBmK,EAAMC,UACN,EAAK3H,SAAL,gBAAgB0H,EAAME,OAAOjF,KAAOpF,K,EAGxC+L,mB,uCAAqB,WAAM5B,GAAN,SAAA3D,EAAA,yDACjB2D,EAAMI,kBAEF,EAAKC,YAAY,EAAKxI,OAHT,uBAIb,EAAKyI,UAAU,sBAJF,0BAQjB,EAAKhI,SAAS,CAAEqJ,OAAO,IARN,2C,wDAWrBE,kB,sBAAoB,4CAAAxF,EAAA,+DAC2D,EAAKxE,MAAxEC,EADQ,EACRA,UAAW0J,EADH,EACGA,KAAMF,EADT,EACSA,QAASC,EADlB,EACkBA,WAAYE,EAD9B,EAC8BA,yBAExCK,EAASrM,EAAgBqC,GAE/B,EAAKQ,SAAS,CAAEoJ,iBAAiB,IALjB,kBASW,EAAK/E,MAAMoF,OAAOC,cAT7B,cASNtF,EATM,OAUZuF,EAAQvF,EAASuF,MAAM7D,GAVX,UAYF1C,GAAOwG,YAAY,SAAU,CAC/BJ,SACA9F,MAAOlE,EACP0J,OACAD,aACAD,UACAW,UAlBI,yBAoBFvG,GAAOY,QAAQ,OAAQ,SAAU,CACnCC,KAAM,CACF/C,GAAIiI,EACJU,QAAQ,+BAAD,OAAiC,IAAIC,KAAKA,KAAKC,QACtDjH,KAAM,gCACNkH,KAAM,mEAzBN,QA6BR,EAAKhK,SAAS,CAAEoJ,iBAAiB,EAAOC,OAAO,IAE/CrL,IAEA,EAAKgK,UAAU,+CAA+C,GAjCtD,kDAoCR,EAAKhI,SAAS,CAAEoJ,iBAAiB,EAAOC,OAAO,IAE/C,EAAKrB,UAAU,KAAIb,SAtCX,0D,EA0CpBY,YAAc,YAA6D,IAA3DiB,EAA0D,EAA1DA,QAASC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,yBACvC,OAAQH,IAAYC,IAAeC,IAASC,G,EAGhDnB,UAAY,SAACR,GAAoC,IAAtB/B,EAAqB,wDAC5C,EAAKzF,SAAS,CAAEuH,OAAO,EAAMC,iBAC7Ba,YAAW,kBAAM,EAAKrI,SAAS,CAAEuH,OAAO,EAAOC,aAAc,KAEzD,kBAAM/B,GAAY,EAAKpB,MAAMiC,QAAQC,KAAK,UAC3C,M,EAGP0D,WAAa,kBAAM,EAAKjK,SAAS,CAAEqJ,OAAO,K,mFAzEtC3I,KAAKV,SAAS,CAAER,UAAW3B,Q,+BA2EtB,MAE8D6C,KAAKnB,MAAhEgI,EAFH,EAEGA,MAAOC,EAFV,EAEUA,aAAchI,EAFxB,EAEwBA,UAAW6J,EAFnC,EAEmCA,MAAOD,EAF1C,EAE0CA,gBAE/C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACItK,MAAM,WACNE,OAAQ,EACRsC,QAAS,EACTsD,MAAM,UACNhE,QAAQ,OACRa,eAAe,SACfD,WAAW,SACXX,UAAU,UAGV,kBAAC,IAAD,CAAS/B,MAAM,YAAf,YACCU,EAAUkC,OAAS,EAChB,kBAAC,IAAMf,SAAP,KAEA,kBAAC,IAAD,CACIC,QAAQ,OACRa,eAAe,SACfD,WAAW,SACXX,UAAU,SACVO,UAAW,EACXqB,aAAc,GAEd,kBAAC,IAAD,CAAM3D,MAAM,WAAWgK,QAAM,GACxBtJ,EAAUkC,OADf,uBAEA,kBAAC,IAAD,CAAKJ,QAAS,GACT9B,EAAUqC,KAAI,SAAAnC,GAAI,OACf,kBAAC,IAAD,CAAKoC,IAAKpC,EAAKG,IAAKyB,QAAS,GAC7B,kBAAC,IAAD,CAAMxC,MAAM,YACXY,EAAKiD,KADN,MACejD,EAAK1C,SADpB,OAEC0C,EAAK1C,SAAW0C,EAAKzC,YAK9B,kBAAC,IAAD,CAAMyF,MAAI,GAAV,iBAA0B/F,EAAe6C,KAG7C,0BACA+B,MAAO,CACHX,QAAS,cACTvB,UAAW,SACXiJ,SAAU,KAEdC,SAAU7H,KAAK4I,oBAGX,kBAAC,IAAD,CACIxD,GAAG,UACH0C,KAAK,OACL7F,KAAK,UACLsD,YAAY,mBACZD,SAAUtF,KAAKmF,eAGnB,kBAAC,IAAD,CACIC,GAAG,aACH0C,KAAK,OACL7F,KAAK,aACLsD,YAAY,cACZD,SAAUtF,KAAKmF,eAGnB,kBAAC,IAAD,CACIC,GAAG,OACH0C,KAAK,OACL7F,KAAK,OACLsD,YAAY,oBACZD,SAAUtF,KAAKmF,eAGnB,kBAAC,IAAD,CACIC,GAAG,2BACH0C,KAAK,QACL7F,KAAK,2BACLsD,YAAY,6BACZD,SAAUtF,KAAKmF,eAGnB,kBAAC,eAAD,CAAaC,GAAG,gBAAgBoE,QAAS,SAAAC,GAAK,OAAIA,EAAMC,WAExD,4BAAQtE,GAAG,iBAAiB0C,KAAK,UAAjC,YAOR,kBAAC,IAAD,CAAK1J,MAAM,WAAW8F,MAAM,UAAUtD,QAAS,GAC7C,kBAAC,IAAD,CAASuB,MAAM,SAAS/D,MAAM,aAAaC,KAAK,MAAhD,sBAGA,kBAAC,IAAD,CAAM8D,MAAM,SAASiG,QAAM,EAAChK,MAAM,SAAlC,qBAOLuK,GACD,kBAAC,GAAD,CACID,gBAAiBA,EACjB5J,UAAWA,EACXyK,WAAYvJ,KAAKuJ,WACjBV,kBAAmB7I,KAAK6I,oBAG5B,kBAAC,GAAD,CAAchL,KAAMgJ,EAAOJ,QAASK,S,GA1MxBzE,IAAMC,WAiN5BqH,GAAoB,SAAC,GAAD,IACtBjB,EADsB,EACtBA,gBACA5J,EAFsB,EAEtBA,UACAyK,EAHsB,EAGtBA,WACAV,EAJsB,EAItBA,kBAJsB,OAMtB,kBAAC,IAAD,CACIe,wBAAwB,QACxBC,wBAAwB,qBACxBC,QAAQ,qBACRC,UAAWR,EACXS,OACI,kBAAC,IAAD,CACA9J,QAAQ,OACRS,aAAc,EACdP,YAAa,EACbW,eAAe,UAEf,kBAAC,IAAD,CAAKH,QAAS,GACV,kBAAC,IAAD,CACAvC,KAAK,KACLD,MAAM,MACNgE,KAAK,SACL4F,SAAUU,EACVxG,QAAS2G,KAGb,kBAAC,IAAD,CAAKjI,QAAS,GACV,kBAAC,IAAD,CACAvC,KAAK,KACL+D,KAAK,SACL4F,SAAUU,EACVxG,QAASqH,MAKjBU,KAAK,cACL5L,KAAK,OAGHqK,GACE,kBAAC,IAAD,CACAxI,QAAQ,OACRa,eAAe,SACfD,WAAW,SACXX,UAAU,SACVS,QAAS,EACTxC,MAAM,aAELU,EAAUqC,KAAI,SAAAnC,GAAI,OACf,kBAAC,IAAD,CAAKoC,IAAKpC,EAAKG,IAAKyB,QAAS,GAC7B,kBAAC,IAAD,CAAMvC,KAAK,KAAKD,MAAM,OACjBY,EAAKiD,KADV,MACmBjD,EAAK1C,SADxB,OACsC0C,EAAK1C,SAAW0C,EAAKzC,WAI/D,kBAAC,IAAD,CAAK6H,SAAU,GACX,kBAAC,IAAD,CAAM/F,KAAK,KAAK2D,MAAI,GAApB,UACQ/F,EAAe6C,MAO/B,kBAAC,IAAD,CACIjB,KAAM6K,EACNrD,mBAAmB,6BAEtBqD,GACG,kBAAC,IAAD,CAAMvG,MAAM,SAASiG,QAAM,GAA3B,yBAON8B,GAAe3D,YAAW4D,wBAAa9B,KAU9B+B,GARE,kBACb,kBAAC,kBAAD,CAAgBC,OAAO,8CACnB,kBAAC,YAAD,KACI,kBAACH,GAAD,S,oBC1SG,GACL,SAASI,GACf,OAAOC,KAAMC,IANDhI,iDAMe8H,EALhB9H,8ECMTD,GAASC,mRAAYC,SAAW,wBAChCC,GAAS,IAAIC,IAAOJ,IAEpBhE,GAAS,CACbC,SAAU,OACVC,WAAY,gBACZC,WAAY,QAGV+L,GAAY,GACZC,GAAkB,GAClBC,GAAY,GACZC,GAAgB,GAChBC,GAAgB,GAChBC,GAAc,GAEZC,GAAe,CAAC,cAAe,oBAAqB,WAAY,mCAAoC,oCAAqC,mBAAoB,OAAQ,OAAQ,SAAU,UAAW,QAAS,UAAW,SAAU,OAAQ,YAuP/NC,G,2MArPXnM,MAAQ,CACJmE,MAAO,GACP2B,WAAY,GACZC,aAAc,GACd9F,UAAW,GACXmM,OAAQ,GACRC,MAAO,GACPjI,gBAAgB,EAChBkI,cAAc,G,EAIlBC,WAAa,WAGT,IAAIC,EAAeN,GAAaO,KAAKC,MAAMD,KAAKE,SAAWT,GAAa/J,SACxE,EAAKyK,eAAeJ,I,EAGxBI,eAAiB,SAAAnB,GACboB,GAAWpB,GACVqB,MAAK,SAAAC,GACDA,EAAIrI,KAAKsI,MACVlM,QAAQC,IAAIgM,EAAIrI,KAAKsI,QAErBpB,GAAamB,EAAIrI,KAAKP,MACtB,EAAK8I,mBAGRC,OAAM,SAAAC,GAAG,OAAIrM,QAAQC,IAAIoM,O,EAG9BF,aAAe,WACb,EAAKxM,SAAS,CAAE4L,MAAOT,GAAY9F,WAAY,UAE/C,IAAK,IAAIsH,EAAI,EAAIA,EAAIxB,GAAWzJ,OAAQiL,IAAK,CAC3C,IAAIC,EAASC,OAAO1B,GAAWwB,GAAGG,MAC9BC,EAAWF,OAAO1B,GAAWwB,GAAGK,WAAWhG,OAC3CiG,EAAkBJ,OAAO1B,GAAWwB,GAAGK,WAAWhI,aAClDkI,EAAaL,OAAO1B,GAAWwB,GAAGK,WAAWG,SAC7CC,EAAkBP,OAAO1B,GAAWwB,GAAGK,WAAWK,eAEpD/B,GADyC,MAAvCH,GAAWwB,GAAGK,WAAWM,WACX,+DAEAT,OAAO1B,GAAWwB,GAAGK,WAAWM,WAAW9K,WAI3D6I,GADyC,iBAAvCF,GAAWwB,GAAGY,SAASC,YACbpQ,OAAO,GAEPyP,OAAO1B,GAAWwB,GAAGY,SAASE,YAAYjE,QAE3B/E,EAYqB,GAAlDwI,IAZwBzI,EAYSyI,GAXvBvL,OAAS+C,GAAOA,EAAM,EACfD,EAAIE,MAAM,EAAID,EAAM,GAAM,MAC1BD,EAAI9C,OAAS+C,GAAOA,GAAO,EAC3BD,EAAIE,MAAM,EAAGD,GAAO,MAEpBD,GAMuC,kBAAqB0I,EAAa,yBAAuBE,EAEjHhC,GAAgB7E,KAAK,CAAC,IAAOqG,EAAQ,KAAQG,EAAU,YAAeE,EAAiB,UAAa3B,GAAe,MAASD,KAd5H,IAAwB7G,EAAKC,EAgB/B,EAAKzE,SAAS,CACZ0D,MAAO0H,GACPS,cAAc,EACdrM,UAAW3B,O,EAwCjB6P,QAAU,WAGR,IAFA,IAAIC,EAAU,YAAO,EAAKpO,MAAMmE,OAC5BkK,EAAgB,GACXjB,EAAI,EAAIA,EAAI,EAAKpN,MAAMmE,MAAMhC,OAAQiL,IACxCnB,GAAcmC,EAAWE,OAAO7B,KAAKC,MAAMD,KAAKE,SAASyB,EAAWjM,OAAO,IAC3EkM,EAAa,sBAAOA,GAAP,YAAyBpC,KAExCD,GAAchF,KAAK,EAAKhH,MAAMmE,OAElC,EAAK1D,SAAS,CAAE0D,MAAOkK,K,EAMzBnO,UAAY,SAAAC,GACV,IAAMC,EAAgB,EAAKJ,MAAMC,UAAUI,WAAU,SAAA7C,GAAK,OAAIA,EAAM8C,MAAQH,EAAKG,OAC/E,IAAuB,IAAnBF,EAAsB,CACtB,IAAMG,EAAe,EAAKP,MAAMC,UAAUO,OAArB,eAClBL,EADkB,CAErB1C,SAAU,KAEV,EAAKgD,SAAS,CAACR,UAAWM,IAAgB,kBAAMxC,EAAQwC,MACxDO,QAAQC,IAAI,EAAKf,MAAMC,eACpB,CACH,IAAMM,EAAY,YAAO,EAAKP,MAAMC,WACpCM,EAAaH,GAAe3C,UAAY,EACxC,EAAKgD,SAAS,CAACR,UAAWM,IAAe,kBAAMxC,EAAQwC,MACvDO,QAAQC,IAAI,EAAKf,MAAMC,a,EAK7Be,oBAAsB,SAAAL,GAClB,IAAMM,EAAgB,EAAKjB,MAAMC,UAAUiB,QACvC,SAAA1D,GAAK,OAAIA,EAAM8C,MAAQK,KAE3B,EAAKF,SAAS,CAAER,UAAWgB,IAAiB,kBAAMlD,EAAQkD,O,sMAtE5B,6BAA1BE,KAAK2D,MAAMyJ,W,gBACfpN,KAAKoL,a,gDAIkB1I,GAAOY,QAAQ,OAAQ,WAAY,CACtDC,KAAM,CACFC,MAAM,gDAAD,OACiBxD,KAAK2D,MAAMyJ,WAD5B,iW,OAFP1J,E,OAiBN1D,KAAKV,SAAS,CACV0D,MAAOU,EAASH,KAAKoB,WAAW3B,MAChC2B,WAAYjB,EAASH,KAAKoB,WAAW1C,KACrCkJ,cAAc,EACdrM,UAAW3B,M,kDAGfwC,QAAQkM,MAAR,M,QAEJ7L,KAAKgN,U,+IA0CK,IAAD,SACuChN,KAAKnB,MAAzC8F,EADH,EACGA,WAAY3B,EADf,EACeA,MAAOmI,EADtB,EACsBA,aAC3B,SAAStH,EAAeC,EAAKC,GAC3B,OAAID,EAAI9C,OAAS+C,GAAOA,EAAM,EACfD,EAAIE,MAAM,EAAID,EAAM,GAAM,MAC1BD,EAAI9C,OAAS+C,GAAOA,GAAO,EAC3BD,EAAIE,MAAM,EAAGD,GAAO,MAExBD,EAGb,OACI,oCACE,kBAAC,EAAD,CAAQjG,KAAMsN,IAEhB,kBAAC,IAAD,CACIzK,UAAW,EACXR,QAAQ,OACRa,eAAe,SACfD,WAAW,QACX/C,0BAA2B,CACzBC,QAAS,CACPqP,SAAU,kBAKd,kBAAC,IAAD,CAAKnN,QAAQ,OAAOC,UAAU,SAASW,WAAW,UAE9C,kBAAC,IAAD,CAAKxC,OAAQ,GACT,yBAAKuC,MAAOtC,IAASoG,IAG7B,yBAAKrE,UAAU,+CACX,kBAAC,IAAD,CAAK6B,MAAM,SACTpE,0BAA2B,CACvBC,QAAS,CACLiG,gBAAiB,UAGzBC,MAAM,UACNC,MAAI,EACJjE,QAAQ,OACRa,eAAe,UAEZiC,EAAM7B,KAAI,SAAAnC,GAAI,OACb,kBAAC,IAAD,CAAKoF,SAAU,EAAG9F,OAAQ,EAAGkD,MAAO,IAAKJ,IAAKpC,EAAKG,KACjD,kBAAC,IAAD,CACEkF,MACE,kBAAC,IAAD,CAAK9C,OAAQ,GAAIC,MAAO,IACtB,kBAAC,IAAD,CACEC,IAAI,QACJC,IAAI,aACJC,cAAe,EACfC,aAAc,EACdC,IAAK7C,EAAK8C,cAKhB,kBAAC,IAAD,CACE5B,QAAQ,OACRY,WAAW,SACXC,eAAe,SACfZ,UAAU,UAEV,kBAAC,IAAD,CAAK4B,aAAc,GACnB,kBAAC,IAAD,CAAMC,MAAI,EAAC3D,KAAK,MACbW,EAAKiD,KAAO4B,EAAe7E,EAAKiD,KAAM,MAGzC,kBAAC,IAAD,CAAM5D,KAAK,MAAMW,EAAKsF,YAAcT,EAAe7E,EAAKsF,YAAa,IAArE,KACE,kBAAC,IAAD,CAAMlG,MAAM,UAAZ,IAAuBY,EAAKzC,OAC9B,kBAAC,IAAD,CAAKmE,UAAW,GACd,kBAAC,IAAD,CAAMrC,KAAK,MACT,kBAAC,IAAD,CAAQA,KAAK,KAAK6D,QAAS,kBAAM,EAAKyB,MAAM5E,UAAUC,IACtDZ,MAAM,OAAOgE,KAAK,iC,GApO3BC,IAAMC,WCd3BgL,G,2MACJzO,MAAQ,CACJmE,MAAO,GACP2B,WAAY,GACZ7F,UAAW,GACXsO,WAAY,GACZG,cAAe,GACfC,gBAAiB,EACjBvK,gBAAgB,EAChB6I,cAAc,G,EAIlB5I,oBAAsB,WACpB,EAAK5D,SAAS,CAAC2D,gBAAgB,K,EAGjClE,UAAY,SAAAC,GACV,IAAMS,EAAqB,EAAKZ,MAAMC,UAAU2O,MAAK,SAAA/N,GAAQ,OAAIA,EAASP,MAAQH,EAAKG,OACvFQ,QAAQC,IAAI,0BAA2BH,GACvC,IAAMR,EAAgB,EAAKJ,MAAMC,UAAUI,WAAU,SAAA7C,GAAK,OAAIA,EAAM8C,MAAQH,EAAKG,OAC/E,IAAuB,IAAnBF,EAAsB,CACtB,IAAMG,EAAe,EAAKP,MAAMC,UAAUO,OAArB,eAClBL,EADkB,CAErB1C,SAAU,KAEV,EAAKgD,SAAS,CAACR,UAAWM,IAAgB,kBAAMxC,EAAQwC,UACrD,CACH,IAAMA,EAAY,YAAO,EAAKP,MAAMC,WACpCM,EAAaH,GAAe3C,UAAY,EACxC,EAAKgD,SAAS,CAACR,UAAWM,EAAcoO,gBAAiB,EAAK3O,MAAMC,UAAUkC,SAAS,kBAAMpE,EAAQwC,Q,EAI7GS,oBAAsB,SAAAL,GACpB,IAAMM,EAAgB,EAAKjB,MAAMC,UAAUiB,QACvC,SAAA1D,GAAK,OAAIA,EAAM8C,MAAQK,KAE3B,EAAKF,SAAS,CAAER,UAAWgB,EAAemD,gBAAgB,IAAS,kBAAMrG,EAAQkD,O,EAUnF4N,kBAAoB,WAElB,EAAKpO,SAAS,CAAC8N,WAAY,EAAKzJ,MAAMgK,MAAMC,OAAOhJ,gB,mFANnD5E,KAAKV,SAAS,CAAC2D,gBAAgB,EAAOnE,UAAW3B,MACjD6C,KAAK0N,sB,+BASG,IAAD,EAC0D1N,KAAKnB,MAA9DoE,EADD,EACCA,eAAgBmK,EADjB,EACiBA,WAAYG,EAD7B,EAC6BA,cAAezO,EAD5C,EAC4CA,UAEnD,OACE,qCACuB,IAAnBmE,EAA0B,kBAAC,GAAD,CAAUnE,UAAWA,EAAWoE,oBAAqBlD,KAAKkD,sBAAyB,GAC7G,6BAEGD,EAAiB,kBAAC,GAAD,CAAcmK,WAAYA,EAAYlK,oBAAqBlD,KAAKkD,oBAAsBnE,UAAWiB,KAAKjB,UAAWwO,cAAeA,IAC5I,kBAAC,EAAD,CAAc1N,oBAAqBG,KAAKH,4B,GA/DtCwC,IAAMC,WAqEpBiC,GAAW,SAAC,GAAD,IAAEzF,EAAF,EAAEA,UAAWoE,EAAb,EAAaA,oBAAb,OAEb,kBAAC,IAAD,CAAKhD,QAAQ,OAAOC,UAAU,MAAMC,WAAY,IAChD,kBAAC,IAAD,CAAQC,KAAM,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMjC,MAAM,YAIhB,yBAAKkC,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,4CAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,uCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,6CAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,yCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,sCAIV,yBAAKF,UAAU,aACb,kBAACC,EAAA,EAAD,CAAMC,GAAG,4BACL,6BACI,6CAAsB,OAIhC,yBAAKF,UAAU,aACb,kBAAC,IAAD,CAAKF,WAAY,EAAGoE,cAAe,EAAG9D,UAAW,EAAGW,YAAa,EAAGC,aAAc,GAEhF,kBAAC,IAAD,CAAQjD,KAAK,KAAK6D,QAASgB,EACvB9E,MAAM,OAAOgE,KAAK,eAGtB,2BAAI,IAAKzF,EAAoBmC,GAAY,IAAI,uBAAGwB,UAAU,uBAAuB,KAAjF,QAKOgN,MCtITO,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASN,MACvB,2DAsCN,SAASO,GAAgBC,GACvBC,UAAUC,cACPlG,SAASgG,GACTxC,MAAK,SAAA2C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3P,QACfuP,UAAUC,cAAcM,WAK1BhP,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBmM,OAAM,SAAAF,GACLlM,QAAQkM,MAAM,4CAA6CA,MC5DjE,IAAM+C,GAAe,SAAC,GAAD,IAActM,EAAd,EAAGuM,UAAyBC,EAA5B,oCACjB,kBAACC,EAAA,EAAD,iBAAWD,EAAX,CAAiBE,OAAQ,SAAArL,GAAK,OACX,OAAfnG,IACI,kBAAC8E,EAAcqB,GAAY,kBAACuB,EAAA,EAAD,CAAU1E,GAAI,CACrCyO,SAAU,UACVpQ,MAAO,CAAEqQ,KAAMvL,EAAMqK,kBAuBrCmB,IAASH,OAAO,mBAjBH,kBACT,kBAAC,IAAD,KAEI,kBAAC,IAAM/O,SAAP,KACI,kBAAC,EAAD,MACA,kBAACmP,EAAA,EAAD,KACI,kBAACL,EAAA,EAAD,CAAOF,UAAWpK,EAAKyB,OAAK,EAACwB,KAAK,MAClC,kBAACqH,EAAA,EAAD,CAAOF,UAAWjM,EAAcsD,OAAK,EAACwB,KAAK,kBAC3C,kBAACqH,EAAA,EAAD,CAAOF,UAAWnI,GAAQgB,KAAK,YAC/B,kBAACqH,EAAA,EAAD,CAAOF,UAAW5G,GAAQP,KAAK,YAC/B,kBAAC,GAAD,CAAcmH,UAAWzE,GAAU1C,KAAK,cACxC,kBAACqH,EAAA,EAAD,CAAOF,UAAWvB,GAAO5F,KAAK,wBAM9B,MAAU2H,SAASC,eAAe,SD3BnC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAI/M,GAAwBuL,OAAOC,UAC3CwB,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAM3L,GAAN,sBAEPqL,KAiDV,SAAiCM,GAE/BuB,MAAMvB,GACHxC,MAAK,SAAAjI,GAGkB,MAApBA,EAASiM,SACuD,IAAhEjM,EAASkM,QAAQpF,IAAI,gBAAgBqF,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMnE,MAAK,SAAA2C,GACjCA,EAAayB,aAAapE,MAAK,WAC7BoC,OAAOC,SAASgC,eAKpB9B,GAAgBC,MAGnBpC,OAAM,WACLpM,QAAQC,IACN,oEArEAqQ,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMnE,MAAK,WACjChM,QAAQC,IACN,gHAMJsO,GAAgBC,OCAxB+B,I","file":"static/js/main.a8cd8362.chunk.js","sourcesContent":["const CART_KEY = 'cart';\r\nconst TOKEN_KEY = 'jwt';\r\n\r\nexport const calculatePrice = iitems => {\r\n    return `$${iitems\r\n      .reduce((acc, iitem) => acc + iitem.quantity * iitem.price, 0)\r\n      .toFixed(2)}`;\r\n};\r\n\r\nexport const calculateAmount = iitems => {\r\n  return Number(iitems\r\n      .reduce((acc, iitem) => acc + iitem.quantity * iitem.price, 0)\r\n      .toFixed(2));\r\n  \r\n};\r\n\r\nexport const calculateTotalItems = iitems => {  \r\n  return Number(iitems\r\n    .reduce((acc, iitem) => acc + iitem.quantity, 0));\r\n};\r\n\r\n\r\n/* Cart */\r\nexport const setCart = (value, cartKey = CART_KEY) => {\r\n    if (localStorage) {\r\n        localStorage.setItem(cartKey, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const getCart = (cartKey = CART_KEY) => {\r\n    if (localStorage && localStorage.getItem(cartKey)) {\r\n        return JSON.parse(localStorage.getItem(cartKey));\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const clearCart = (cartKey = CART_KEY) => {\r\n    if (localStorage) {\r\n      localStorage.removeItem(cartKey);\r\n    }\r\n  };\r\n\r\n/* Auth */\r\nexport const getToken = (tokenKey = TOKEN_KEY) => {\r\n    if (localStorage && localStorage.getItem(tokenKey)) {\r\n      return JSON.parse(localStorage.getItem(tokenKey));\r\n    }\r\n    return null;\r\n  };\r\n\r\nexport const setToken = (value, tokenKey = TOKEN_KEY) => {\r\n    if (localStorage) {\r\n        localStorage.setItem(tokenKey, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const clearToken = (tokenKey = TOKEN_KEY) => {\r\n    if (localStorage) {\r\n      localStorage.removeItem(tokenKey);\r\n    }\r\n  };\r\n","import React from 'react';\r\nimport { GridLoader } from 'react-spinners'\r\nimport {Box} from 'gestalt';\r\n\r\nconst Loader = ({ show }) =>\r\n  show && (\r\n    <Box\r\n      position=\"fixed\"\r\n      dangerouslySetInlineStyle={{\r\n        __style: {\r\n          bottom: 300,\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\"\r\n        }\r\n      }}\r\n    >\r\n      <GridLoader color=\"darkorange\" size={25} margin=\"3px\" />\r\n    </Box>\r\n  );\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Items.css';\r\nimport { Box, Text, Image, Button, Column } from 'gestalt'\r\nimport {calculateTotalItems, calculatePrice, setCart, getCart} from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport './Items.css';\r\n\r\n\r\nconst hStyle = {\r\n    fontSize: '24px',\r\n    fontFamily: 'calibri light',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n};\r\n\r\n\r\nclass SeeCartItems extends React.Component {\r\n    state = {       \r\n        cartItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ cartItems: getCart() })        \r\n    }    \r\n    \r\n    addToCart = item => {        \r\n      const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n        if (alreadyInCart === -1) {\r\n            const updatedItems = this.state.cartItems.concat({\r\n            ...item,\r\n            quantity: 1\r\n            });\r\n            this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n        } else {\r\n            const updatedItems = [...this.state.cartItems];\r\n            updatedItems[alreadyInCart].quantity += 1;\r\n            this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    countItemToDelete = itemToDeleteId => {\r\n        const alreadyInCartToDel = this.state.cartItems.findIndex(allItems => allItems._id === itemToDeleteId);\r\n       \r\n        if (alreadyInCartToDel !== 1) {\r\n            console.log(\"THIS IS ALREADY IN CART\", alreadyInCartToDel);\r\n            this.deleteItemsFromCart(itemToDeleteId);\r\n            // const updatedItems = this.state.cartItems.concat({\r\n            // ...item,\r\n            // quantity: 1\r\n            // });\r\n            // this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n        } else {\r\n            console.log( this.state.cartItems );\r\n            this.deleteItemsFromCart(itemToDeleteId);\r\n            // const updatedItems = [...this.state.cartItems];\r\n            // updatedItems[alreadyInCart].quantity += 1;\r\n            // this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n        }\r\n    }\r\n\r\n    deleteItemsFromCart = itemToDeleteId => {       \r\n        const filteredItems = this.state.cartItems.filter(\r\n            iitem => iitem._id !== itemToDeleteId\r\n        );\r\n        console.log(\"THIS IS ITEM TO DELETE\", itemToDeleteId)\r\n        // if (itemToDeleteId )\r\n        this.setState({ cartItems: filteredItems }, () => setCart(filteredItems));\r\n    };\r\n\r\n    render() {\r\n        const { cartItems } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n            <Column span={2}>\r\n              <Box>\r\n                <Text color=\"white\"></Text>\r\n              </Box>\r\n            </Column>\r\n                       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n                  <div >\r\n                      <p>Automotive</p>\r\n                  </div>\r\n              </Link>\r\n            </div>       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n                  <div >                        \r\n                      <p>Books</p> \r\n                  </div>                     \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n                  <div>                      \r\n                      <p>Electronics</p>\r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n                  <div >                     \r\n                      <p>Fashion</p>\r\n                  </div>                        \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n                  <div >                        \r\n                      <p>Home</p>                      \r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n                  <div>                     \r\n                      <p>Sports Outdoor</p>{\" \"}\r\n                  </div>                        \r\n              </Link>\r\n            </div>           \r\n            <div className=\"lineitems\">              \r\n                <p>{\" \"}{calculateTotalItems(cartItems)}{\" \"}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n            </div> \r\n          </Box>\r\n                    \r\n                <Box alignSelf=\"end\" marginTop={292} marginLeft={8} marginRight={8} padding={4}>\r\n                    <Box margin={2}>\r\n                        <div style={hStyle}>\r\n                            Shopping Cart\r\n                        </div>\r\n                    </Box>\r\n                </Box> \r\n                \r\n                {/* Cart Items*/}\r\n                <div className=\"card\">\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\r\n                        <Box margin={2}>\r\n                            {cartItems.length === 0 && (\r\n                            <Text color=\"red\">Please select some items</Text>\r\n                            )}\r\n                        </Box>                                   \r\n                    </Box>\r\n                    <Box display=\"flex\" direction=\"row\" column={6} paddingX={2}>\r\n                        <Box>\r\n                            {cartItems.map(iitem => (                            \r\n                                <div className=\"card-item\">\r\n                                    <Box key={iitem._id} display=\"flex\" direction=\"row\" marginTop={2} marginLeft={3} paddingLeft={2} paddingRight={2}>\r\n                                        {/* <Card width={300}>                           */}\r\n                                        <Box display=\"flex\" direction=\"row\">\r\n                                            <Box  height={120} width={80}>\r\n                                                <Image\r\n                                                    fit=\"cover\"\r\n                                                    alt=\"item\"\r\n                                                    naturalHeight={1}\r\n                                                    naturalWidth={1}\r\n                                                    src={iitem.thumbnail}                                  \r\n                                                />\r\n                                            </Box>\r\n                                        </Box>\r\n                                        <Box padding={2}>\r\n                                            <Box display=\"flex\" direction=\"row\" marginBottom={5}>\r\n                                                <Text bold size=\"sl\" color=\"blue\">\r\n                                                    {iitem.name}                                                     \r\n                                                </Text>\r\n                                            </Box>\r\n                                            {/* <Box display=\"flex\" direction=\"row\">\r\n                                                <Text size=\"sm\" color=\"white\">\r\n                                                    Items                                                  \r\n                                                </Text>\r\n                                            </Box> */}\r\n                                            <Box display=\"flex\" direction=\"row\">\r\n                                                <Text color=\"orchid\" size=\"sm\">\r\n                                                    Unit Price: ${iitem.price}\r\n                                                </Text>                                               \r\n                                            </Box>\r\n                                            <Box display=\"flex\" direction=\"row\">\r\n                                                <Text color=\"green\" size=\"sm\">\r\n                                                    Qty: {iitem.quantity}\r\n                                                </Text>                                                                                                                             \r\n                                            </Box>\r\n                                            <Text color=\"green\" size=\"sm\">\r\n                                                Price: ${(iitem.quantity * iitem.price).toFixed(2)}\r\n                                            </Text>\r\n                                            <Box  display=\"flex\" direction=\"row\">\r\n                                                <div className=\"delete-button\">                                                \r\n                                                    <button onClick={() => this.countItemToDelete(iitem._id)}>Delete</button>                                  \r\n                                                </div> \r\n                                                <div className=\"save-for-later\">                                                \r\n                                                    <p>Save for later</p>                                  \r\n                                                </div>\r\n                                                <div className=\"save-for-later\">                                                \r\n                                                    <p>Compare with similar item</p>                                  \r\n                                                </div>                                                              \r\n                                            </Box>  \r\n                                        </Box>\r\n                                    </Box>\r\n                                </div>\r\n                            ))}\r\n                        </Box>\r\n                        <Box column={4} marginLeft={10} marginTop={10} width={150}>\r\n                        <div className=\"carttotal\">                            \r\n                                <Box align=\"center\" display=\"flex\" direction=\"column\" width={550}>\r\n                                    <div className=\"carttotal\"> \r\n                                        <Text bold color=\"black\" size=\"sm\">                                        \r\n                                            Subtotal ({calculateTotalItems(cartItems)} items ){\": \"}\r\n                                        </Text>\r\n                                        <Text align=\"center\" bold size=\"md\" color=\"red\">\r\n                                            {calculatePrice(cartItems)}\r\n                                            \r\n                                        </Text>\r\n                                    </div>                                \r\n                                    <Box width={250}> \r\n                                        <Text >\r\n                                            <Link to=\"/checkout\"><Button padding={2} size=\"md\" width={550} color=\"blue\" text=\"Checkout\"></Button>\r\n                                            </Link>\r\n                                        </Text>\r\n                                    </Box>                                       \r\n                                </Box>                          \r\n                            </div>\r\n                        </Box>                                             \r\n                    </Box>\r\n                </div>               \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeeCartItems;","import React, { Component } from 'react';\r\n//prettier ignore\r\nimport { Box, Card, Image, Text, Button, Column } from 'gestalt';\r\nimport { setCart, getCart } from '../utils';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SeeCartItems from './SeeCartItems';\r\n\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\n\r\n\r\n\r\nclass SearchResult extends Component {\r\n  state = {\r\n    searchedResult: [],\r\n    searchTermName: '',\r\n    searchedResults: [],    \r\n    // loadingItems: true,\r\n    items: [],  \r\n    displayingCart: false,\r\n    cartItems: []\r\n  \r\n  };\r\n \r\n  componentDidMount() {     \r\n    this.setState({searchTermName: this.props.searchTerm})\r\n    console.log(\"THIS IS SEARCHED ITEMS NAME\",  this.state.searchTermName);   \r\n    this.searchDepartments();\r\n   \r\n  }\r\n\r\n  displayingCartItems = () => {    \r\n    this.setState({displayingCart: true})      \r\n  };\r\n\r\n  addToCart = searchedItem => {\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === searchedItem._id);\r\n    if (alreadyInCart === -1) {\r\n      const updatedItems = this.state.cartItems.concat({\r\n        ...searchedItem,\r\n        quantity: 1\r\n      });\r\n      this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n    } else {\r\n      const updatedItems = [...this.state.cartItems];\r\n      updatedItems[alreadyInCart].quantity += 1;\r\n      this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n\r\n    }\r\n\r\n  };\r\n\r\n  searchDepartments = async () => {   \r\n    // console.log(this.state.searchTerm)\r\n    const response = await strapi.request('POST', '/graphql', {\r\n      data: {\r\n        query: `query {\r\n         items(where: {\r\n            name_contains: \"${this.state.searchTermName.toLowerCase()}\"\r\n          }) {\r\n            _id\r\n            name\r\n            description\r\n            thumbnail                       \r\n            price\r\n            department {\r\n              _id\r\n              name\r\n            }\r\n          }\r\n        }`\r\n      }\r\n    });      \r\n    this.setState({\r\n      searchedResults: response.data.items,\r\n      cartItems: getCart()});\r\n    console.log(this.state.searchedResults);    \r\n  }; \r\n\r\n  render() {\r\n    const { searchedResults, cartItems, displayingCart } = this.state;\r\n    function truncateString(str, num) {    \r\n      if (str.length > num && num > 3) {\r\n              return str.slice(0, (num - 3)) + '...';\r\n          } else if (str.length > num && num <= 3) {\r\n              return str.slice(0, num) + '...';\r\n          } else {\r\n          return str;\r\n      }    \r\n    }\r\n        \r\n\r\n    return (\r\n      <>\r\n        { displayingCart === false ? <DeptMenu cartItems={cartItems} displayingCartItems={this.displayingCartItems}/> : []}\r\n         {/* <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n            <Column span={2}>\r\n              <Box>\r\n                <Text color=\"white\"></Text>\r\n              </Box>\r\n            </Column>\r\n                       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n                  <div >\r\n                      <p>Automotive</p>\r\n                  </div>\r\n              </Link>\r\n            </div>       \r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n                  <div >                        \r\n                      <p>Books</p> \r\n                  </div>                     \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n                  <div>                      \r\n                      <p>Electronics</p>\r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n                  <div >                     \r\n                      <p>Fashion</p>\r\n                  </div>                        \r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n                  <div >                        \r\n                      <p>Home</p>                      \r\n                  </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"lineitems\">\r\n              <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n                  <div>                     \r\n                      <p>Sports Outdoor</p>{\" \"}\r\n                  </div>                        \r\n              </Link>\r\n            </div>           \r\n            <div className=\"lineitems\">\r\n              <Box marginLeft={1} marginRightt={-1} marginTop={3} paddingLeft={0} paddingRight={0}> */}\r\n                {/* User Cart Heading */}\r\n                {/* <Button size=\"sm\" onClick={() => this.displayingCartItems()}\r\n                    color=\"blue\" text=\"View Cart\"\r\n                />\r\n              </Box>\r\n              <p>{cartItems.length}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n            </div> \r\n          </Box>       */}\r\n          <div>\r\n            {displayingCart === true ? <SeeCartItems /> : []}\r\n          </div>\r\n        <div className=\"card\">\r\n          <Box align=\"center\">\r\n            <Box \r\n              dangerouslySetInlineStyle={{\r\n                __style: {\r\n                  backgroundColor: 'white'\r\n                }\r\n              }}\r\n              shape=\"rounded\"\r\n              wrap\r\n              display=\"flex\"\r\n              justifyContent=\"around\"\r\n            >\r\n              {searchedResults.map(searchedItem => (\r\n                <Box paddingY={4} margin={2} width={200} key={searchedItem._id}>\r\n                  <Card\r\n                    image={\r\n                      <Box height={80} width={80}>                   \r\n                        <Image\r\n                          fit=\"cover\"\r\n                          alt=\"Department\"\r\n                          naturalHeight={1}\r\n                          naturalWidth={1}\r\n                          src={searchedItem.thumbnail}\r\n                        />\r\n                      </Box>\r\n                    }\r\n                  >\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                      direction=\"column\"\r\n                    >\r\n                      <Box marginBottom={2}>\r\n                        <Text bold size=\"sm\">\r\n                          {searchedItem.name = truncateString(searchedItem.name, 50)}\r\n                        </Text>\r\n                      </Box>\r\n                        <Text size=\"sm\">{searchedItem.description = truncateString(searchedItem.description, 90)};</Text>\r\n                        <Text color=\"orchid\">${searchedItem.price}</Text>\r\n                      <Box marginTop={2}>\r\n                        <Text size=\"sm\">\r\n                          <Button size=\"sm\" onClick={() => this.addToCart(searchedItem)}\r\n                          color=\"blue\" text=\"Add to Cart\" />\r\n                        </Text>                   \r\n                      </Box>\r\n                    </Box>               \r\n                  </Card>\r\n                </Box>\r\n              ))}\r\n            </Box>       \r\n          </Box>\r\n        </div>    \r\n      </>\r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst DeptMenu = ({cartItems, displayingCartItems}) => (\r\n  \r\n  <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n  <Column span={2}>\r\n    <Box>\r\n      <Text color=\"white\"></Text>\r\n    </Box>\r\n  </Column>\r\n            \r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n        <div >\r\n            <p>Automotive</p>\r\n        </div>\r\n    </Link>\r\n  </div>       \r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n        <div >                        \r\n            <p>Books</p> \r\n        </div>                     \r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n        <div>                      \r\n            <p>Electronics</p>\r\n        </div>\r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n        <div >                     \r\n            <p>Fashion</p>\r\n        </div>                        \r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n        <div >                        \r\n            <p>Home</p>                      \r\n        </div>\r\n    </Link>\r\n  </div>\r\n  <div className=\"lineitems\">\r\n    <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n        <div>                     \r\n            <p>Sports Outdoor</p>{\" \"}\r\n        </div>                        \r\n    </Link>\r\n  </div>           \r\n  <div className=\"lineitems\">\r\n    <Box marginLeft={1} marginRightt={-1} marginTop={3} paddingLeft={0} paddingRight={0}>\r\n      {/* User Cart Heading */}\r\n      <Button size=\"sm\" onClick={displayingCartItems}\r\n          color=\"blue\" text=\"View Cart\"\r\n      />\r\n    </Box>\r\n      <p>{cartItems.length}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n  </div> \r\n</Box>      \r\n)\r\n\r\nexport default SearchResult;","import React, { Component } from 'react';\n//prettier ignore\nimport {Container, Box, Card, Image, Text, SearchField, Icon } from 'gestalt';\nimport {Link, Redirect} from 'react-router-dom';\nimport Loader from './Loader';\nimport SearchResult from './SearchResult';\n// import Navbar from '../components/Navbar';\n\nimport './App.css';\n// import Items from './Items';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\n\n\nconst hStyle = {\n  fontSize: '30px',\n  fontFamily: 'calibri light',\n  \n};\n\nclass App extends Component {\n  state = {\n   departments: [],\n   department: [],\n   departmentId: [],    \n   cartItems: [],\n   items: [],\n   searchedItems:[],\n   searchTerm: '',   \n    loadingDepartments: true,\n    redirect: false,\n    searchTermState: false\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {          \n      return <Redirect to='/SearchResult' />\n    }\n  }\n\n  \n\n  // Connect Graphql using Strapi SDK\n  async componentDidMount() {   \n    try {\n\n      const response = await strapi.request(\"POST\", \"/graphql\", {\n        data: {\n          query: `query {\n           departments {\n              _id\n              name\n              description\n              image {\n                url\n              }\n            }\n          }`\n        }\n      });\n      // console.log(response);\n      this.setState({departments: response.data.departments, loadingDepartments: false });\n    } catch (err) {\n      console.log(err);\n      this.setState({ loadingDepartments: false });\n    }\n  }\n\n  handleChange = ({value}) => {\n    this.setState({ searchTerm: value }, () => this.searchDepartments());\n  };\n\n  \n  searchDepartments = async () => {   \n    // console.log(this.state.searchTerm)\n    const response = await strapi.request('POST', '/graphql', {\n      data: {\n        query: `query {\n         items(where: {\n            name_contains: \"${this.state.searchTerm.toLowerCase()}\"\n          }) {\n            _id\n            name\n            description\n            thumbnail                       \n            price\n            department {\n              _id\n              name\n            }\n          }\n        }`\n      }\n    });\n    this.setState({\n      searchedItems: response.data.items,     \n      loadingDepartments: false,\n      redirect: true,\n      searchTermState: true\n    });\n    \n  }\n\n  render() {    \n    const { searchTerm, searchTermState, loadingDepartments, departments } = this.state;\n    function truncateString(str, num) {    \n      if (str.length > num && num > 3) {\n              return str.slice(0, (num - 3)) + '...';\n          } else if (str.length > num && num <= 3) {\n              return str.slice(0, num) + '...';\n          } else {\n          return str;\n      }    \n    }\n    return (\n      <>\n      {/* <Navbar itemDeptId={departments}/> */}\n      <Container>\n        {/* {departments Search Field */}\n        <Box display=\"flex\" justifyContent=\"center\" marginTop={4}>\n          <SearchField \n            id=\"searchField\"\n            accessibilityLabel=\"Departments Search Field\"\n            onChange={this.handleChange}\n            value={searchTerm}\n            placeholder=\"Search Departments\"\n          />\n          <Box margin={3}>            \n            <Icon \n              icon=\"filter\"\n              color={searchTerm ? 'orange' : 'gray'}\n              size={20}\n              accessibilityLabel=\"Filter\"\n            />\n          </Box>\n        </Box>\n        {/*departments Section */}\n        <Box display=\"flex\" justifyContent=\"center\" marginBottom={2}>\n          {/*departments Header */}\n          <div style={hStyle} color=\"black\" >        \n            Shop by Departments      \n          </div>\n        </Box>\n     \n        {/*departments */}\n        <Box \n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: 'white'\n            }\n          }}\n          shape=\"rounded\"\n          wrap\n          display=\"flex\"\n          justifyContent=\"around\"\n        >\n          {/* Display Store Departments name on Home Page */}\n          {departments.map(department => (\n            <Box paddingY={4} margin={2} width={200} key={department._id}>\n              <Card\n                image={\n                  <Box height={200} width={200}>\n                    <Link to={`/${department._id}`}>\n                    <Image\n                      fit=\"cover\"\n                      alt=\"Department\"\n                      naturalHeight={1}\n                      naturalWidth={1}                     \n                      src={`${apiURL}${department.image.url}`}\n                    />\n                    </Link>\n                  </Box>\n                }\n              >\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  direction=\"column\"\n                >\n                  <Text bold size=\"sm\">\n                    {department.name = truncateString(department.name, 50)}\n                  </Text>\n                  <Text size=\"sm\">{department.description = truncateString(department.description, 90)};</Text>\n                </Box>\n              </Card>\n            </Box>\n          ))}\n        </Box>\n        {/* <Spinner show={loadingDepartments} accessibilityLabel=\"Loading Spinner\" /> */}\n       <Loader show={loadingDepartments} />\n       {/* {loadingDepartments && <Loader />} */}\n      <div>   \n      {searchTermState ? <SearchResult searchTerm={searchTerm}/> : this.state.searchTerm === null && <SearchResult searchTerm={this.state.searchTerm}/>}\n       {this.renderRedirect()}\n      </div>\n      </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Box, Image, Button } from \"gestalt\";\nimport { calculateTotalItems, getToken, clearToken, clearCart, getCart } from \"../utils\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport \"./Navbar.css\";\n// import SearchItems from \"./SearchItems\";\n\n\n\nclass Navbar extends React.Component {\n  state = {   \n    cartItems: [] \n  }\n\n  \n    handleSignout = () => {\n        clearToken();\n        clearCart();\n        this.props.history.push(\"/\");\n        \n    };\n    componentDidMount() {\n      console.log(this.props)    \n      this.setState({ cartItems: getCart()}) \n         \n    }\n    render() {\n        const {cartItems} = this.state\n        return getToken() !== null ? \n        <AuthNav handleSignout={this.handleSignout} cartItems={cartItems}/> : <UnAuthNav />;        \n    }\n};\n\n\nconst AuthNav = ({ handleSignout, cartItems }) => (\n    <Box\n    display=\"flex\"\n    alignItems=\"center\"\n    justifyContent=\"around\"\n    height={50}\n    color=\"blue\"\n    padding={1}\n    // shape=\"roundedBottom\"\n    borderRadius={32}\n  >\n    {/* Title and Logo */}\n    <NavLink activeClassName=\"active\" exact to=\"/\">\n      <Box display=\"flex\" alignItems=\"center\">\n      <Box marginTop={12} margin={2} height={90} width={180}>\n          <Image\n            alt=\"FeMMit Logo\"\n            naturalHeight={1}\n            naturalWidth={1}\n            src=\"./icons/logo-in.png\"\n          />\n        </Box>        \n      </Box>\n    </NavLink>   \n\n    \n    {/* Signout Button */}\n    <div className=\"signout-spacing\">\n      <Button\n        onClick={handleSignout}\n        color=\"transparent\"\n        text=\"Sign Out\"\n        inline\n        size=\"md\"\n      />\n    </div>\n    {/* Checkout Link */}\n    <NavLink activeClassName=\"active\" to=\"/checkout\">\n      <div className=\"checkout-spacing\">\n        <p>{calculateTotalItems(cartItems)}<i className=\"fa fa-shopping-cart\">{\" \"} Checkout </i> </p>\n      </div>\n    </NavLink>    \n\n    \n  </Box>\n); \n\nconst UnAuthNav = () => (\n  <Box\n    display=\"flex\" \n    alignItems=\"center\"\n    justifyContent=\"around\"\n    height={60} \n    color=\"gray\" \n    padding={1} \n    shape=\"roundedBottom\"\n          \n  >\n    {/* Title and logo*/}\n    <NavLink activeClassName=\"active\" exact to=\"/\">\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box marginTop={12} margin={2} height={90} width={180}>\n          <Image\n            alt=\"FeMMit Logo\"\n            naturalHeight={1}\n            naturalWidth={1}\n            src=\"./icons/logo.png\"\n          />\n        </Box>           \n      </Box>\n    </NavLink>\n    \n    {/* Sign In Link*/}\n    <NavLink activeClassName=\"active\" to=\"/signin\">\n        <div className=\"signin-spacing\">\n        <i className=\"fa fa-sign-in\" aria-hidden=\"true\" title=\"Sign In\"></i>\n            \n        </div>\n    </NavLink>\n    \n    {/* Sign Up Link*/}\n    <NavLink activeClassName=\"active\" to=\"/signup\">\n        <div className=\"signup-spacing\">\n            <span>Get Started</span>\n        </div>\n    </NavLink>\n  </Box>    \n);\n\nexport default withRouter(Navbar);\n","import React from 'react';\r\nimport {Box, Toast} from 'gestalt';\r\n\r\nconst ToastMessage = ({ show, message }) =>\r\n    show && (\r\n        <Box\r\n            dangerouslySetInlineStyle={{\r\n                __style: {\r\n                    bottom: 330,\r\n                    left: '50%',\r\n                    transform: \"translatex(-50%)\"\r\n                }\r\n            }}\r\n            position=\"fixed\"\r\n            >\r\n                <Toast color=\"orange\" text={ message } />\r\n        </Box>\r\n    );\r\n\r\nexport default ToastMessage;\r\n","import React from  'react'\nimport { Container, Box, Button, TextField} from 'gestalt'\nimport {setToken} from '../utils';\nimport ToastMessage from './ToastMessage';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\n\nconst hStyle = {\n    fontSize: '22px',\n    fontFamily: 'calibri light',\n    fontWeight: 'bold',\n    color: 'black',\n    \n  };\n\nclass Signin extends React.Component {\n    state = {\n        username: '',        \n        password: '',\n        toast: false,\n        toastMessage: '',\n        loading: false\n    }\n\n    handleChange = ({ event, value }) => {\n        event.persist();\n        this.setState({[event.target.name]: value});\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { username, password } = this.state;\n\n        if (this.isFormEmpty(this.state)) {\n            this.showToast(\"Fill in all fields\");\n            return;\n        }\n        \n        //Sign up user\n        try {\n            this.setState({ loading: true});           \n            const response = await strapi.login(username, password);\n            this.setState({ loading: false});\n            setToken(response.jwt);            \n            this.redirectUser('/');\n        }catch (err) {\n            this.setState({ loading: false});\n            this.showToast(err.message);\n        }\n    };\n\n    redirectUser = path => this.props.history.push(path);\n\n    isFormEmpty = ({username, password}) => {\n        return !username || !password;\n    };\n\n    showToast = toastMessage => {\n        this.setState({ toast: true, toastMessage });\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n    }\n\n    render() {\n        const { toastMessage, toast, loading } = this.state;\n\n        return (\n            <Container>\n                <Box\n                    dangerouslySetInlineStyle={{\n                        __style: {\n                        //   backgroundColor: 'white',\n                          \n                          \n                        }\n                      }}\n                    margin={4}\n                    padding={4}\n                    shape=\"rounded\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    width={550}\n                >\n                    {/* Sign in Form */}\n                    <form className=\"container max-w-md mx-auto p-8 m-2 shadow-lg rounded bg-gray\"\n                    style={{\n                        display: 'inlineBlock',\n                        textAlign: 'center',\n                        maxWidth: 450,\n                        height: 210,                        \n                        \n                        \n                    }}\n                    onSubmit={this.handleSubmit}                    \n                    >\n                        {/* Sign in Form Heading */}\n                        <Box\n                            marginBottom={2}\n                            marginTop={-3}\n                            display=\"flex\"\n                            direction=\"column\"\n                            alignItems='center'\n                        >\n                            <div style={hStyle} color=\"black\" >Sign In</div>\n                                                     \n                        </Box>\n                        {/* Username Input */}\n                        <Box  marginBottom={2}>\n                        <TextField\n                            id=\"username\"\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            onChange={this.handleChange}\n                        />                   \n                        </Box>\n                        {/* Password Input */}\n                        <TextField\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChange}\n                        />\n                        <Box margiginTop={5} paddingY={2}>\n                            <Button\n                                inline \n                                disabled={loading} \n                                color=\"blue\" \n                                text=\"Submit\" \n                                type=\"submit\" \n                            />\n                        </Box>\n                    </form>\n                </Box>\n                <ToastMessage show={toast} message={toastMessage}/>\n            </Container>        \n        );\n    }\n}\n\nexport default Signin;","import React from  'react'\nimport { Container, Box, Button, Text, TextField} from 'gestalt'\nimport {setToken} from '../utils';\nimport ToastMessage from './ToastMessage';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\nconst hStyle = {\n    fontSize: '30px',\n    fontFamily: 'calibri light',\n    fontWeight: 'bold',\n    color: 'black',\n  };\n\nclass Signup extends React.Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        toast: false,\n        toastMessage: '',\n        loading: false\n    }\n\n    handleChange = ({ event, value }) => {\n        event.persist();\n        this.setState({[event.target.name]: value});\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { username, email, password } = this.state;\n\n        if (this.isFormEmpty(this.state)) {\n            this.showToast(\"Fill in all fields\");\n            return;\n        }\n        \n        //Sign up user\n        try {\n            this.setState({ loading: true});           \n            const response = await strapi.register(username, email, password);\n            this.setState({ loading: false});\n            setToken(response.jwt);            \n            this.redirectUser('/');\n        }catch (err) {\n            this.setState({ loading: false});\n            this.showToast(err.message);\n        }\n    };\n\n    redirectUser = path => this.props.history.push(path);\n\n    isFormEmpty = ({username, email, password}) => {\n        return !username || !email || !password;\n    };\n\n    showToast = toastMessage => {\n        this.setState({ toast: true, toastMessage });\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n    }\n\n    render() {\n        const { toastMessage, toast, loading } = this.state;\n\n        return (\n            <Container>\n                <Box\n                    dangerouslySetInlineStyle={{\n                        __style: {\n                        //   backgroundColor: 'white'\n                          \n                        }\n                      }}\n                    margin={4}\n                    padding={4}\n                    shape=\"rounded\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    width={550}\n                    \n                >\n                    {/* Sign Up Form */}\n                    <form className=\"container max-w-md mx-auto p-8 m-2 shadow-lg rounded bg-gray\"\n                    style={{\n                        display: 'inlineBlock',\n                        textAlign: 'center',\n                        maxWidth: 450\n                    }}\n                    onSubmit={this.handleSubmit}                    \n                    >\n                        {/* Sign Up Form Heading */}\n                        <Box\n                            marginBottom={2}\n                            display=\"flex\"\n                            direction=\"column\"\n                            alignItems='center'\n                        >\n                            <div style={hStyle} color=\"black\" >Let's Get Started</div>                            \n                            <Text italic color=\"orchid\">\n                                Sign up to place your order!\n                            </Text>\n                        </Box>\n                        {/* Username Input */}\n                        <TextField\n                            id=\"username\"\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            onChange={this.handleChange}\n                            className=\"border m-1 p-1 rounded\"\n                        />\n                        {/* Email Address Input */}\n                        <TextField\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email Address\"\n                            onChange={this.handleChange}\n                            className=\"border m-1 p-1 rounded\"\n                        />\n                        {/* Password Input */}\n                        <TextField \n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            onChange={this.handleChange}\n                            className=\"border m-1 p-1 rounded\"\n                        />\n                        <Button\n                            inline \n                            disabled={loading} \n                            color=\"blue\" \n                            text=\"Submit\" \n                            type=\"submit\"\n                            className=\"bg-orange m-1 p-1 rounded\"\n                        />\n                    </form>\n                </Box>\n                <ToastMessage show={toast} message={toastMessage}/>\n            </Container>        \n        );\n    }\n}\n\nexport default Signup;","import React from  'react'\n//prettier ignore\nimport { Container, Box, Button, Heading, Text, TextField, Modal, Spinner } from 'gestalt'\n//prettier ignore\nimport { Elements, StripeProvider, CardElement, injectStripe} from 'react-stripe-elements';\nimport ToastMessage from './ToastMessage';\nimport {getCart, calculatePrice, clearCart, calculateAmount} from '../utils';\nimport { withRouter } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiURL);\n\nclass _CheckoutForm extends React.Component {\n    state = {\n        cartItems: [],\n        address: \"\",\n        postalCode: \"\",\n        city: \"\",\n        confirmationEmailAddress: \"\",\n        toast: false,\n        toastMessage: \"\",\n        orderProcessing: false,\n        modal: false\n    }\n\n    componentDidMount() {\n        this.setState({ cartItems: getCart()});\n    }\n\n    handleChange = ({ event, value }) => {\n        event.persist();\n        this.setState({[event.target.name]: value});\n    };\n\n    handleConfirmOrder = async event => {\n        event.preventDefault();    \n\n        if (this.isFormEmpty(this.state)) {\n            this.showToast(\"Fill in all fields\");\n            return;\n        }\n\n        this.setState({ modal: true });\n    };\n\n    handleSubmitOrder = async () => {\n        const { cartItems, city, address, postalCode, confirmationEmailAddress } = this.state;\n\n        const amount = calculateAmount(cartItems);\n        //process order\n        this.setState({ orderProcessing: true });\n        let token;\n        try {\n            // create stripe token\n            const response = await this.props.stripe.createToken();\n            token = response.token.id;\n            //create order with stripe sdk (make request to backend)\n                await strapi.createEntry('orders', {\n                    amount,\n                    items: cartItems,\n                    city,\n                    postalCode,\n                    address,\n                    token              \n                });\n                await strapi.request(\"POST\", \"/email\", {\n                    data: {\n                        to: confirmationEmailAddress,\n                        subject: `Order Confirmation - FeMMit ${new Date(Date.now())}`,\n                        text: \"Your order has been processed\",\n                        html: \"<bold>Expect your order to arrive in 2-3 shipping days</bold>\"\n                    }\n                });\n                //set orderProcessing - false, set modal - false\n                this.setState({ orderProcessing: false, modal: false });\n                // clear user cart of items\n                clearCart();\n                // show success toast\n                this.showToast(\"Your order has been successfully submitted!\", true);\n            } catch (err) {\n                // set order processing - false, modal - false\n                this.setState({ orderProcessing: false, modal: false });\n                // show error toast\n                this.showToast(err.message);\n        }\n    };\n\n    isFormEmpty = ({address, postalCode, city, confirmationEmailAddress }) => {\n        return !address || !postalCode || !city || !confirmationEmailAddress;\n    };\n\n    showToast = (toastMessage, redirect = false) => {\n        this.setState({ toast: true, toastMessage });\n        setTimeout(() => this.setState({ toast: false, toastMessage: '' },\n        // if true passed to 'redirect argument, redirect home\n            () => redirect && this.props.history.push('/')\n        ), 5000);\n    };\n\n    closeModal = () => this.setState({ modal: false });\n\n    render() {\n        //prettier ignore\n        const { toast, toastMessage, cartItems, modal, orderProcessing } = this.state;\n\n        return (\n            <Container>\n                <Box\n                    color=\"darkWash\"\n                    margin={4}\n                    padding={4}\n                    shape=\"rounded\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    direction=\"column\"\n                >\n                    {/* Checkout Form Heading */}                     \n                    <Heading color=\"midnight\">Checkout</Heading>\n                    {cartItems.length > 0 ? (\n                        <React.Fragment>\n                        {/* User cart */}\n                        <Box\n                            display=\"flex\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            direction=\"column\"\n                            marginTop={2}\n                            marginBottom={6}\n                        >\n                            <Text color=\"darkGray\" italic>\n                                {cartItems.length} items for Checkout</Text>\n                            <Box padding={2}>\n                                {cartItems.map(item => (\n                                    <Box key={item._id} padding={1}>\n                                    <Text color=\"midnight\">\n                                    {item.name} x {item.quantity} - $\n                                    {item.quantity * item.price}\n                                    </Text>\n                                </Box>\n                                ))}\n                            </Box>\n                            <Text bold>Total Amount: {calculatePrice(cartItems)}</Text>\n                        </Box>\n                        {/* Checkout Form */}\n                        <form \n                        style={{\n                            display: 'inlineBlock',\n                            textAlign: 'center',\n                            maxWidth: 450\n                        }}\n                        onSubmit={this.handleConfirmOrder}                    \n                        >                      \n                            {/* Shipping Address Input */}\n                            <TextField\n                                id=\"address\"\n                                type=\"text\"\n                                name=\"address\"\n                                placeholder=\"Shipping Address\"\n                                onChange={this.handleChange}\n                            />\n                            {/* Postal Code Address Input */}\n                            <TextField\n                                id=\"postalCode\"\n                                type=\"text\"\n                                name=\"postalCode\"\n                                placeholder=\"Postal Code\"\n                                onChange={this.handleChange}\n                            />\n                            {/* City Input */}\n                            <TextField\n                                id=\"city\"\n                                type=\"text\"\n                                name=\"city\"\n                                placeholder=\"City of Residence\"\n                                onChange={this.handleChange}\n                            />\n                            {/* Confirmation Email Address Input */}\n                            <TextField\n                                id=\"confirmationEmailAddress\"\n                                type=\"email\"\n                                name=\"confirmationEmailAddress\"\n                                placeholder=\"Confirmation Email Address\"\n                                onChange={this.handleChange}\n                            />\n                            {/* Credit Card Element */}\n                            <CardElement id=\"stripe__input\" onReady={input => input.focus()}\n                            />\n                            <button id=\"stripe__button\" type=\"submit\">\n                                Submit\n                            </button>\n                        </form>\n                        </React.Fragment>\n                ) : (\n                    // Default Text if No Items in Cart\n                    <Box color=\"darkWash\" shape=\"rounded\" padding={4}>\n                      <Heading align=\"center\" color=\"watermelon\" size=\"xs\">\n                        Your Cart is Empty\n                      </Heading>\n                      <Text align=\"center\" italic color=\"green\">\n                        Add some items!\n                      </Text>\n                    </Box>\n                  )}\n                </Box>\n                {/* Confirmation Modal */}\n                {modal && (\n                <ConfirmationModal\n                    orderProcessing={orderProcessing}\n                    cartItems={cartItems}\n                    closeModal={this.closeModal}\n                    handleSubmitOrder={this.handleSubmitOrder}\n                />\n                )}\n                <ToastMessage show={toast} message={toastMessage}/>\n            </Container>        \n        \n        );\n    }\n}\n\nconst ConfirmationModal = ({\n    orderProcessing,\n    cartItems,\n    closeModal,\n    handleSubmitOrder\n  }) => (\n    <Modal\n        accessibilityCloseLabel=\"close\"\n        accessibilityModalLabel=\"Confirm Your Order\"\n        heading=\"Confirm Your Order\"\n        onDismiss={closeModal}\n        footer={\n            <Box\n            display=\"flex\"\n            marginRight={-1}\n            marginLeft={-1}\n            justifyContent=\"center\"\n            >\n            <Box padding={1}>\n                <Button\n                size=\"lg\"\n                color=\"red\"\n                text=\"Submit\"\n                disabled={orderProcessing}\n                onClick={handleSubmitOrder}\n                />\n            </Box>\n            <Box padding={1}>\n                <Button\n                size=\"lg\"\n                text=\"Cancel\"\n                disabled={orderProcessing}\n                onClick={closeModal}\n                />\n            </Box>\n            </Box>\n        }\n        role=\"alertdialog\"\n        size=\"sm\"\n        >\n        {/* Order Summary */}\n        {!orderProcessing && (\n            <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n            padding={2}\n            color=\"lightWash\"\n            >\n            {cartItems.map(item => (\n                <Box key={item._id} padding={1}>\n                <Text size=\"lg\" color=\"red\">\n                    {item.name} x {item.quantity} - ${item.quantity * item.price}\n                </Text>\n                </Box>\n            ))}\n            <Box paddingY={2}>\n                <Text size=\"lg\" bold>\n                Total: {calculatePrice(cartItems)}\n                </Text>\n            </Box>\n            </Box>\n        )}\n  \n        {/* Order Processing Spinner */}\n        <Spinner\n            show={orderProcessing}\n            accessibilityLabel=\"Order Processing Spinner\"\n        />\n        {orderProcessing && (\n            <Text align=\"center\" italic>\n            Submitting Order...\n            </Text>\n        )}\n    </Modal>\n);\n\nconst CheckoutForm = withRouter(injectStripe(_CheckoutForm));\n\nconst Checkout = () => (\n    <StripeProvider apiKey=\"pk_test_x8yjxMCIGG0GwegNJCzILYWy00qrvPKmKA\">\n        <Elements>\n            <CheckoutForm />\n        </Elements>\n    </StripeProvider>\n)\n\nexport default Checkout;","import axios from \"axios\";\n\nconst BASEURL = process.env.REACT_APP_BASEURL\nconst APIKEY = process.env.REACT_APP_APIKEY\n// Export an object containing methods we'll use for accessing the Google Book API\n\nexport default { \n  search: function(booksearch) {\n    return axios.get(BASEURL + booksearch + APIKEY);\n  },\n  \n  searchId: function(keyId) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes/\" + keyId);\n  },\n \n};\n","import React from 'react';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport './Items.css';\r\nimport API from '../utils/API';\r\nimport Loader from './Loader';\r\n// prettier ignore\r\nimport { Box, Text, Image, Card, Button } from 'gestalt'\r\nimport { setCart, getCart} from '../utils';\r\n// import { Link } from 'react-router-dom';\r\nconst apiURL = process.env.API_URL || 'http://localhost:1337';\r\nconst strapi = new Strapi(apiURL);\r\n\r\nconst hStyle = {\r\n  fontSize: '24px',\r\n  fontFamily: 'calibri light',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nvar booksArray =[]\r\nvar itemsBooksArray = []\r\nvar bookPrice = \"\"\r\nvar bookThumbnail = \"\"\r\nvar ShuffledDatas = []\r\nvar shuffleData = []\r\n\r\nconst defaultBooks = [\"Wars of Law\", \"Among the Valiant\", \"Religion\", \"The Fall of Western Civilization\", \"Destruction of Black Civilization\", \"Sex in Antiquity\", \"Wars\", \"food\", \"School\", \"Country\", \"Music\", \"Friends\", \"Family\", \"Baby\", \"Politics\"]\r\nclass SeeDeptItems extends React.Component {\r\n    state = {\r\n        items: [],\r\n        department: '',\r\n        departmentId: '',\r\n        cartItems: [],\r\n        search: \"\",\r\n        books: [],\r\n        displayingCart: false,\r\n        loadingItems: true\r\n    }\r\n\r\n    \r\n    bookDeptId = () => {\r\n        // console.log(\"THIS IS BOOK DEPT ===>\", this.props.itemDeptId )\r\n        // console.log(\"THIS IS props.itemDeptId ==>\", this.props.itemDeptId) \r\n        let bookToSearch = defaultBooks[Math.floor(Math.random() * defaultBooks.length)];       \r\n        this.searchForBooks(bookToSearch);\r\n    }\r\n\r\n    searchForBooks = booksearch => {       \r\n        API.search(booksearch)        \r\n        .then(res => {                  \r\n          if(res.data.error ){\r\n            console.log(res.data.error)            \r\n          }else{           \r\n            booksArray = res.data.items;           \r\n            this.displayBooks();  \r\n          }\r\n        })          \r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n    displayBooks = () => {      \r\n      this.setState({ books: booksArray, department: \"Books\" })      \r\n\r\n      for (var i = 0;  i < booksArray.length; i++) { \r\n        let bookId = String(booksArray[i].etag)      \r\n        let bookName = String(booksArray[i].volumeInfo.title)\r\n        let bookDescription = String(booksArray[i].volumeInfo.description)\r\n        let bookAuthor = String(booksArray[i].volumeInfo.authors)\r\n        let bookPublishDate = String(booksArray[i].volumeInfo.publishedDate)\r\n        if (booksArray[i].volumeInfo.imageLinks == null) {\r\n          bookThumbnail = 'https://lmtrain.github.io/lm-images/assets/images/books5.jpg'         \r\n        }else{\r\n          bookThumbnail = String(booksArray[i].volumeInfo.imageLinks.thumbnail)   \r\n        }        \r\n       \r\n        if (booksArray[i].saleInfo.saleability === \"NOT_FOR_SALE\") {\r\n          bookPrice = Number(0.00)          \r\n        }else{\r\n          bookPrice = String(booksArray[i].saleInfo.retailPrice.amount)          \r\n        }\r\n        function truncateString(str, num) {    \r\n          if (str.length > num && num > 3) {\r\n                  return str.slice(0, (num - 3)) + '...';\r\n              } else if (str.length > num && num <= 3) {\r\n                  return str.slice(0, num) + '...';\r\n              } else {\r\n                  return str;\r\n          }\r\n        \r\n        }\r\n        let authorLabel = \" || Author : \"\r\n        let pulishedLabel = \" || Pulished Date : \"\r\n        bookDescription = truncateString(bookDescription, 90) + \"\\n\" + authorLabel + bookAuthor + \"\\n\" + pulishedLabel + bookPublishDate;\r\n\r\n        itemsBooksArray.push({\"_id\": bookId, \"name\": bookName, \"description\": bookDescription, \"thumbnail\": bookThumbnail, \"price\": bookPrice })\r\n      }     \r\n      this.setState({\r\n        items: itemsBooksArray,\r\n        loadingItems: false,      \r\n        cartItems: getCart()            \r\n    })        \r\n    }\r\n    \r\n\r\n    async componentDidMount() {  \r\n        // console.log(this.props)      \r\n        if (this.props.itemDeptId === \"5dcf9519dc3bcd3de001697b\") {        \r\n        this.bookDeptId();       \r\n        } else\r\n        \r\n        try {       \r\n        const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    department(id: \"${this.props.itemDeptId}\") {\r\n                      _id\r\n                      name\r\n                      items {\r\n                        _id\r\n                        name\r\n                        description\r\n                        thumbnail                       \r\n                        price\r\n                      }    \r\n                    }\r\n                }`\r\n            }\r\n        });       \r\n        this.setState({\r\n            items: response.data.department.items,\r\n            department: response.data.department.name,\r\n            loadingItems: false,\r\n            cartItems: getCart()            \r\n        })        \r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n    this.shuffle() \r\n  }\r\n  shuffle = () => {\r\n    let itemsArray = [...this.state.items];\r\n    let itemsShuffled = [];    \r\n    for (var i = 0;  i < this.state.items.length; i++) {        \r\n          shuffleData = itemsArray.splice(Math.floor(Math.random()*itemsArray.length/2));        \r\n          itemsShuffled = [...itemsShuffled, ...shuffleData];\r\n        }   \r\n        ShuffledDatas.push(this.state.items);\r\n    // Set this.state.deals equal to the new deals array\r\n    this.setState({ items: itemsShuffled });\r\n    // itemsArray = [...this.state.deals];\r\n    // this.setState({Items: deals});\r\n    \r\n  };\r\n      \r\n  addToCart = item => {\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n      if (alreadyInCart === -1) {\r\n          const updatedItems = this.state.cartItems.concat({\r\n          ...item,\r\n          quantity: 1\r\n          });\r\n          this.setState({cartItems: updatedItems }, () => setCart(updatedItems));\r\n          console.log(this.state.cartItems);\r\n      } else {\r\n          const updatedItems = [...this.state.cartItems];\r\n          updatedItems[alreadyInCart].quantity += 1;\r\n          this.setState({cartItems: updatedItems },() => setCart(updatedItems));\r\n          console.log(this.state.cartItems);\r\n    }\r\n  };\r\n    \r\n\r\n    deleteItemsFromCart = itemToDeleteId => {\r\n        const filteredItems = this.state.cartItems.filter(\r\n            iitem => iitem._id !== itemToDeleteId\r\n        );\r\n        this.setState({ cartItems: filteredItems }, () => setCart(filteredItems));\r\n    };\r\n    \r\n    render() {\r\n        const { department, items, loadingItems } = this.state;\r\n        function truncateString(str, num) {    \r\n          if (str.length > num && num > 3) {\r\n                  return str.slice(0, (num - 3)) + '...';\r\n              } else if (str.length > num && num <= 3) {\r\n                  return str.slice(0, num) + '...';\r\n              } else {\r\n              return str;\r\n          }    \r\n        }\r\n        return (  \r\n            <>              \r\n              <Loader show={loadingItems} />\r\n                \r\n            <Box\r\n                marginTop={4}\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                dangerouslySetInlineStyle={{\r\n                  __style: {\r\n                    flexWrap: 'wrap-reverse'\r\n                  }\r\n                }}\r\n            >\r\n                {/* items Section */}\r\n                <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n                    {/* items Heading */}\r\n                    <Box margin={2}>\r\n                        <div style={hStyle}>{department}</div>\r\n                    </Box>\r\n                    {/* items */}\r\n                <div className=\"container p-2 m-2 shadow-lg rounded bg-gray\">\r\n                    <Box align=\"center\"\r\n                      dangerouslySetInlineStyle={{\r\n                          __style: {\r\n                              backgroundColor: 'white'\r\n                          }\r\n                      }}\r\n                      shape=\"rounded\"\r\n                      wrap\r\n                      display=\"flex\"\r\n                      justifyContent=\"around\"\r\n                    >\r\n                        {items.map(item => (\r\n                          <Box paddingY={4} margin={2} width={200} key={item._id}>\r\n                            <Card\r\n                              image={\r\n                                <Box height={80} width={80}>\r\n                                  <Image\r\n                                    fit=\"cover\"\r\n                                    alt=\"Department\"\r\n                                    naturalHeight={1}\r\n                                    naturalWidth={1}\r\n                                    src={item.thumbnail}                                  \r\n                                  />\r\n                                </Box>\r\n                              }\r\n                            >\r\n                              <Box\r\n                                display=\"flex\"\r\n                                alignItems=\"center\"\r\n                                justifyContent=\"center\"\r\n                                direction=\"column\"\r\n                              >\r\n                                <Box marginBottom={2}>\r\n                                <Text bold size=\"sm\">\r\n                                  {item.name = truncateString(item.name, 50)}\r\n                                </Text>\r\n                                </Box>\r\n                                <Text size=\"sm\">{item.description = truncateString(item.description, 90)};</Text>\r\n                                  <Text color=\"orchid\">${item.price}</Text>\r\n                                <Box marginTop={2}>\r\n                                  <Text size=\"sm\">\r\n                                    <Button size=\"sm\" onClick={() => this.props.addToCart(item)}\r\n                                    color=\"blue\" text=\"Add to Cart\" />\r\n                                  </Text>\r\n                                </Box>\r\n                              </Box>\r\n                            </Card>\r\n                          </Box>                        \r\n                        ))}\r\n                    </Box>\r\n                  </div>\r\n                </Box>\r\n                {/* Store Department List */}\r\n              \r\n            </Box>\r\n          </>\r\n        )\r\n    }             \r\n}\r\n\r\nexport default SeeDeptItems;","import React from 'react';\r\nimport './Items.css';\r\nimport SeeDeptItems from './SeeDeptItems';\r\nimport SeeCartItems from './SeeCartItems';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Button, Column, Text } from 'gestalt';\r\nimport { calculateTotalItems, setCart, getCart} from '../utils';\r\n// import Navbar from '../components/Navbar';\r\n// import DeptMenu from './DeptMenu';\r\n\r\n\r\n\r\nclass Items extends React.Component {\r\n  state = {\r\n      items: [],\r\n      department: '',\r\n      cartItems: [],\r\n      itemDeptId: '',\r\n      itemsSearched: [],\r\n      cartItemsLength: 0,\r\n      displayingCart: false,\r\n      displayBooks: true\r\n      \r\n  }\r\n\r\n  displayingCartItems = () => {    \r\n    this.setState({displayingCart: false })      \r\n  };\r\n  \r\n  addToCart = item => {\r\n    const alreadyInCartToDel = this.state.cartItems.find(allItems => allItems._id === item._id);\r\n    console.log(\"THIS IS ALREADY IN CART\", alreadyInCartToDel);\r\n    const alreadyInCart = this.state.cartItems.findIndex(iitem => iitem._id === item._id);\r\n      if (alreadyInCart === -1) {\r\n          const updatedItems = this.state.cartItems.concat({\r\n          ...item,\r\n          quantity: 1\r\n          });\r\n          this.setState({cartItems: updatedItems }, () => setCart(updatedItems));         \r\n      } else {\r\n          const updatedItems = [...this.state.cartItems];\r\n          updatedItems[alreadyInCart].quantity += 1;\r\n          this.setState({cartItems: updatedItems, cartItemsLength: this.state.cartItems.length },() => setCart(updatedItems));        \r\n      }\r\n  };\r\n\r\n  deleteItemsFromCart = itemToDeleteId => {\r\n    const filteredItems = this.state.cartItems.filter(\r\n        iitem => iitem._id !== itemToDeleteId\r\n    );\r\n    this.setState({ cartItems: filteredItems, displayingCart: false }, () => setCart(filteredItems));\r\n};\r\n\r\n  \r\n\r\n  componentDidMount() {    \r\n    this.setState({displayingCart: true,  cartItems: getCart()}) \r\n    this.changeDeptIdState()     \r\n  }\r\n\r\n  changeDeptIdState = () => { \r\n    // console.log(\"THIS IS PROPS FROM ITEMS.JS\", this.props)   \r\n    this.setState({itemDeptId: this.props.match.params.departmentId})\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const { displayingCart, itemDeptId, itemsSearched, cartItems } = this.state\r\n\r\n    return (\r\n      <>\r\n        { displayingCart === true ? <DeptMenu cartItems={cartItems} displayingCartItems={this.displayingCartItems}/> : []}\r\n          <div>\r\n            {/* <Navbar itemDeptId={itemDeptId}/>        */}\r\n            {displayingCart ? <SeeDeptItems itemDeptId={itemDeptId} displayingCartItems={this.displayingCartItems}  addToCart={this.addToCart} itemsSearched={itemsSearched}\r\n            />  : <SeeCartItems deleteItemsFromCart={this.deleteItemsFromCart}/>}          \r\n          </div>\r\n      </>\r\n    );      \r\n  }\r\n}; \r\nconst DeptMenu = ({cartItems, displayingCartItems}) => (\r\n  \r\n    <Box display=\"flex\" direction=\"row\" marginLeft={10}>\r\n    <Column span={2}>\r\n      <Box>\r\n        <Text color=\"white\"></Text>\r\n      </Box>\r\n    </Column>\r\n              \r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf94e2dc3bcd3de0016978\"> \r\n          <div >\r\n              <p>Automotive</p>\r\n          </div>\r\n      </Link>\r\n    </div>       \r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9519dc3bcd3de001697b\">\r\n          <div >                        \r\n              <p>Books</p> \r\n          </div>                     \r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf94a0dc3bcd3de0016975\">\r\n          <div>                      \r\n              <p>Electronics</p>\r\n          </div>\r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9457dc3bcd3de0016972\">\r\n          <div >                     \r\n              <p>Fashion</p>\r\n          </div>                        \r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf8d67dc3bcd3de001696f\">  \r\n          <div >                        \r\n              <p>Home</p>                      \r\n          </div>\r\n      </Link>\r\n    </div>\r\n    <div className=\"lineitems\">\r\n      <Link to=\"5dcf9551dc3bcd3de001697e\">\r\n          <div>                     \r\n              <p>Sports Outdoor</p>{\" \"}\r\n          </div>                        \r\n      </Link>\r\n    </div>           \r\n    <div className=\"lineitems\">\r\n      <Box marginLeft={1} marginRightt={-1} marginTop={3} paddingLeft={0} paddingRight={0}>\r\n        {/* User Cart Heading */}\r\n        <Button size=\"sm\" onClick={displayingCartItems}\r\n            color=\"blue\" text=\"View Cart\"\r\n        />\r\n      </Box>\r\n        <p>{\" \"}{calculateTotalItems(cartItems)}{\" \"}<i className=\"fa fa-shopping-cart\">{\" \"}</i> </p>\r\n    </div> \r\n  </Box>      \r\n)\r\n\r\nexport default Items;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport {getToken} from './utils';\nimport \"gestalt/dist/gestalt.css\";\n\nimport App from './components/App';\nimport Navbar from './components/Navbar'\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport Checkout from './components/Checkout';\nimport Items from \"./components/Items\";\n// import SearchItems from \"./components/SearchItems\";\nimport SearchResult from \"./components/SearchResult\"\n\n\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        getToken() !== null ? \n            <Component {...props} /> : <Redirect to={{\n                pathname: '/signin',\n                state: { from: props.location }\n            }} />\n            \n    )} />\n)\n\nconst Root = () => (\n    <Router>\n        \n        <React.Fragment>\n            <Navbar />\n            <Switch>\n                <Route component={App} exact path=\"/\" />             \n                <Route component={SearchResult} exact path=\"/searchresult\" />\n                <Route component={Signin} path=\"/signin\" />\n                <Route component={Signup} path=\"/signup\" />\n                <PrivateRoute component={Checkout} path=\"/checkout\" />                \n                <Route component={Items} path=\"/:departmentId\" />\n            </Switch>           \n        </React.Fragment>\n    </Router>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'))\nregisterServiceWorker();\n"],"sourceRoot":""}